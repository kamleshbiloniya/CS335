Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RANGE

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TypeToken
Rule 6     TypeName -> QualifiedIdent
Rule 7     TypeToken -> INT
Rule 8     TypeToken -> FLOAT
Rule 9     TypeToken -> UINT
Rule 10    TypeToken -> COMPLEX
Rule 11    TypeToken -> RUNE
Rule 12    TypeToken -> BOOL
Rule 13    TypeToken -> STRING
Rule 14    TypeToken -> TYPE IDENTIFIER
Rule 15    TypeLit -> ArrayType
Rule 16    TypeLit -> StructType
Rule 17    TypeLit -> PointerType
Rule 18    TypeOpt -> Type
Rule 19    TypeOpt -> epsilon
Rule 20    ArrayType -> LSQUARE ArrayLength RSQUARE ElementType
Rule 21    ArrayLength -> Expression
Rule 22    ElementType -> Type
Rule 23    StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
Rule 24    FieldDeclRep -> FieldDeclRep FieldDecl SemiColonOpt
Rule 25    FieldDeclRep -> epsilon
Rule 26    FieldDecl -> IdentifierList Type
Rule 27    PointerType -> STAR BaseType
Rule 28    BaseType -> Type
Rule 29    Signature -> Parameters TypeOpt
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> ParameterDecl
Rule 34    ParametersList -> ParameterDeclCommaRep
Rule 35    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 36    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 37    ParameterDecl -> IdentifierList Type
Rule 38    ParameterDecl -> Type
Rule 39    Block -> LCURL StatementList RCURL
Rule 40    StatementList -> StatementRep
Rule 41    StatementRep -> StatementRep Statement SemiColonOpt
Rule 42    StatementRep -> epsilon
Rule 43    Declaration -> ConstDecl
Rule 44    Declaration -> TypeDecl
Rule 45    Declaration -> VarDecl
Rule 46    TopLevelDecl -> Declaration
Rule 47    TopLevelDecl -> FunctionDecl
Rule 48    ConstDecl -> CONST ConstSpec
Rule 49    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 50    ConstSpecRep -> ConstSpecRep ConstSpec SemiColonOpt
Rule 51    ConstSpecRep -> epsilon
Rule 52    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 53    IdentifierList -> IDENTIFIER IdentifierRep
Rule 54    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 55    IdentifierRep -> epsilon
Rule 56    ExpressionList -> Expression ExpressionRep
Rule 57    ExpressionRep -> ExpressionRep COMMA Expression
Rule 58    ExpressionRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SemiColonOpt
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> TypeDef
Rule 64    TypeDef -> IDENTIFIER Type
Rule 65    VarDecl -> VAR VarSpec
Rule 66    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 67    VarSpecRep -> VarSpecRep VarSpec SemiColonOpt
Rule 68    VarSpecRep -> epsilon
Rule 69    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 70    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 71    ExpressionListOpt -> ASSIGN ExpressionList
Rule 72    ExpressionListOpt -> epsilon
Rule 73    ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression
Rule 74    FunctionDecl -> FUNC FunctionName CreateScope Function EndScope
Rule 75    FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope
Rule 76    CreateFuncScope -> <empty>
Rule 77    CreateScope -> <empty>
Rule 78    EndScope -> <empty>
Rule 79    FunctionName -> IDENTIFIER
Rule 80    Function -> Signature FunctionBody
Rule 81    FunctionBody -> Block
Rule 82    BoolConstant -> TRUE
Rule 83    BoolConstant -> FALSE
Rule 84    Operand -> Literal
Rule 85    Operand -> OperandName
Rule 86    Operand -> LPAREN Expression RPAREN
Rule 87    Literal -> BasicLit
Rule 88    BasicLit -> I INTEGER
Rule 89    BasicLit -> I OCTAL
Rule 90    BasicLit -> I HEX
Rule 91    BasicLit -> F FLOAT
Rule 92    BasicLit -> C IMAGINARY
Rule 93    BasicLit -> I RUNE
Rule 94    BasicLit -> S STRING
Rule 95    I -> <empty>
Rule 96    F -> <empty>
Rule 97    C -> <empty>
Rule 98    S -> <empty>
Rule 99    OperandName -> IDENTIFIER
Rule 100   QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 101   PrimaryExpr -> Operand
Rule 102   PrimaryExpr -> BoolConstant
Rule 103   PrimaryExpr -> PrimaryExpr Selector
Rule 104   PrimaryExpr -> Conversion
Rule 105   PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE
Rule 106   PrimaryExpr -> PrimaryExpr Slice
Rule 107   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 108   PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
Rule 109   PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
Rule 110   StructFieldList -> IDENTIFIER COLON Expression StructFieldRep
Rule 111   StructFieldList -> epsilon
Rule 112   StructFieldRep -> COMMA IDENTIFIER COLON Expression StructFieldRep
Rule 113   StructFieldRep -> epsilon
Rule 114   Selector -> DOT IDENTIFIER
Rule 115   Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
Rule 116   Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
Rule 117   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 118   ExpressionListTypeOpt -> ExpressionList
Rule 119   ExpressionListTypeOpt -> epsilon
Rule 120   Expression -> UnaryExpr
Rule 121   Expression -> Expression LOGICAL_OR Expression
Rule 122   Expression -> Expression LOGICAL_AND Expression
Rule 123   Expression -> Expression EQUALS Expression
Rule 124   Expression -> Expression NOT_ASSIGN Expression
Rule 125   Expression -> Expression LESSER Expression
Rule 126   Expression -> Expression GREATER Expression
Rule 127   Expression -> Expression LESS_EQUALS Expression
Rule 128   Expression -> Expression MORE_EQUALS Expression
Rule 129   Expression -> Expression OR Expression
Rule 130   Expression -> Expression XOR Expression
Rule 131   Expression -> Expression DIVIDE Expression
Rule 132   Expression -> Expression MOD Expression
Rule 133   Expression -> Expression LSHIFT Expression
Rule 134   Expression -> Expression RSHIFT Expression
Rule 135   Expression -> Expression PLUS Expression
Rule 136   Expression -> Expression MINUS Expression
Rule 137   Expression -> Expression STAR Expression
Rule 138   Expression -> Expression AND Expression
Rule 139   ExpressionOpt -> Expression
Rule 140   ExpressionOpt -> epsilon
Rule 141   UnaryExpr -> PrimaryExpr
Rule 142   UnaryExpr -> UnaryOp UnaryExpr
Rule 143   UnaryExpr -> NOT UnaryExpr
Rule 144   UnaryOp -> PLUS
Rule 145   UnaryOp -> MINUS
Rule 146   UnaryOp -> STAR
Rule 147   UnaryOp -> AND
Rule 148   Conversion -> TYPECAST Type LPAREN Expression RPAREN
Rule 149   Statement -> Declaration
Rule 150   Statement -> LabeledStmt
Rule 151   Statement -> SimpleStmt
Rule 152   Statement -> ReturnStmt
Rule 153   Statement -> BreakStmt
Rule 154   Statement -> ContinueStmt
Rule 155   Statement -> GotoStmt
Rule 156   Statement -> CreateScope Block EndScope
Rule 157   Statement -> IfStmt
Rule 158   Statement -> SwitchStmt
Rule 159   Statement -> ForStmt
Rule 160   Statement -> PrintStmt
Rule 161   Statement -> ScanStmt
Rule 162   PrintStmt -> PRINT Expression
Rule 163   ScanStmt -> SCAN Expression
Rule 164   SimpleStmt -> epsilon
Rule 165   SimpleStmt -> ExpressionStmt
Rule 166   SimpleStmt -> IncDecStmt
Rule 167   SimpleStmt -> Assignment
Rule 168   SimpleStmt -> ShortVarDecl
Rule 169   LabeledStmt -> Label COLON Statement
Rule 170   Label -> IDENTIFIER
Rule 171   ExpressionStmt -> Expression
Rule 172   IncDecStmt -> Expression INCR
Rule 173   IncDecStmt -> Expression DECR
Rule 174   Assignment -> ExpressionList assign_op ExpressionList
Rule 175   assign_op -> AssignOp
Rule 176   AssignOp -> PLUS_ASSIGN
Rule 177   AssignOp -> MINUS_ASSIGN
Rule 178   AssignOp -> STAR_ASSIGN
Rule 179   AssignOp -> DIVIDE_ASSIGN
Rule 180   AssignOp -> MOD_ASSIGN
Rule 181   AssignOp -> AND_ASSIGN
Rule 182   AssignOp -> OR_ASSIGN
Rule 183   AssignOp -> XOR_ASSIGN
Rule 184   AssignOp -> LSHIFT_ASSIGN
Rule 185   AssignOp -> RSHIFT_ASSIGN
Rule 186   AssignOp -> ASSIGN
Rule 187   IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt
Rule 188   CreateScopeIf -> <empty>
Rule 189   ElseOpt -> ELSE IfStmt
Rule 190   ElseOpt -> ELSE CreateScope Block EndScope
Rule 191   ElseOpt -> epsilon
Rule 192   SwitchStmt -> ExprSwitchStmt
Rule 193   ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
Rule 194   StartSwitch -> <empty>
Rule 195   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 196   ExprCaseClauseRep -> epsilon
Rule 197   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 198   ExprSwitchCase -> CASE Expression
Rule 199   ExprSwitchCase -> DEFAULT
Rule 200   ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope
Rule 201   CreateScopeFor -> <empty>
Rule 202   ConditionBlockOpt -> epsilon
Rule 203   ConditionBlockOpt -> Condition
Rule 204   ConditionBlockOpt -> ForClause
Rule 205   Condition -> Expression
Rule 206   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 207   ConditionOpt -> epsilon
Rule 208   ConditionOpt -> Condition
Rule 209   ReturnStmt -> RETURN ExpressionPureOpt
Rule 210   ExpressionPureOpt -> Expression
Rule 211   ExpressionPureOpt -> epsilon
Rule 212   BreakStmt -> BREAK LabelOpt
Rule 213   ContinueStmt -> CONTINUE LabelOpt
Rule 214   LabelOpt -> Label
Rule 215   LabelOpt -> epsilon
Rule 216   GotoStmt -> GOTO Label
Rule 217   SemiColonOpt -> SEMICOLON
Rule 218   SemiColonOpt -> epsilon
Rule 219   SourceFile -> PackageClause SemiColonOpt ImportDeclRep TopLevelDeclRep
Rule 220   ImportDeclRep -> epsilon
Rule 221   ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt
Rule 222   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt
Rule 223   TopLevelDeclRep -> epsilon
Rule 224   PackageClause -> PACKAGE PackageName
Rule 225   PackageName -> IDENTIFIER
Rule 226   ImportDecl -> IMPORT ImportSpec
Rule 227   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 228   ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt
Rule 229   ImportSpecRep -> epsilon
Rule 230   ImportSpec -> PackageNameDotOpt ImportPath
Rule 231   PackageNameDotOpt -> DOT
Rule 232   PackageNameDotOpt -> PackageName
Rule 233   PackageNameDotOpt -> epsilon
Rule 234   ImportPath -> STRING
Rule 235   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 138 147
AND_ASSIGN           : 181
ASSIGN               : 52 70 71 186
BOOL                 : 12
BREAK                : 212
CASE                 : 198
COLON                : 110 112 115 116 116 169 197
COMMA                : 35 36 54 57 112
COMPLEX              : 10
CONST                : 48 49
CONTINUE             : 213
DECR                 : 173
DEFAULT              : 199
DIVIDE               : 131
DIVIDE_ASSIGN        : 179
DOT                  : 100 114 117 231
ELSE                 : 189 190
EQUALS               : 123
FALSE                : 83
FLOAT                : 8 91
FOR                  : 200
FUNC                 : 74 75
GOTO                 : 216
GREATER              : 126
HEX                  : 90
IDENTIFIER           : 14 53 54 64 73 79 99 100 109 110 112 114 170 225
IF                   : 187
IMAGINARY            : 92
IMPORT               : 226 227
INCR                 : 172
INT                  : 7
INTEGER              : 88
LCURL                : 23 39 109 193
LESSER               : 125
LESS_EQUALS          : 127
LOGICAL_AND          : 122
LOGICAL_OR           : 121
LPAREN               : 4 30 49 60 66 86 108 117 148 227
LSHIFT               : 133
LSHIFT_ASSIGN        : 184
LSQUARE              : 20 105 115 116
MINUS                : 136 145
MINUS_ASSIGN         : 177
MOD                  : 132
MOD_ASSIGN           : 180
MORE_EQUALS          : 128
NOT                  : 143
NOT_ASSIGN           : 124
OCTAL                : 89
OR                   : 129
OR_ASSIGN            : 182
PACKAGE              : 224
PLUS                 : 135 144
PLUS_ASSIGN          : 176
PRINT                : 162
QUICK_ASSIGN         : 73
RANGE                : 
RCURL                : 23 39 109 193
RETURN               : 209
RPAREN               : 4 30 49 60 66 86 108 117 148 227
RSHIFT               : 134
RSHIFT_ASSIGN        : 185
RSQUARE              : 20 105 115 116
RUNE                 : 11 93
SCAN                 : 163
SEMICOLON            : 206 206 217
STAR                 : 27 137 146
STAR_ASSIGN          : 178
STRING               : 13 94 234
STRUCT               : 23
SWITCH               : 193
TRUE                 : 82
TYPE                 : 14 59 60
TYPECAST             : 148
UINT                 : 9
VAR                  : 65 66
XOR                  : 130
XOR_ASSIGN           : 183
error                : 

Nonterminals, with rules where they appear

ArrayLength          : 20
ArrayType            : 15
AssignOp             : 175
Assignment           : 167
BaseType             : 27
BasicLit             : 87
Block                : 81 156 187 190 200
BoolConstant         : 102
BreakStmt            : 153
C                    : 92
Condition            : 203 208
ConditionBlockOpt    : 200
ConditionOpt         : 206
ConstDecl            : 43
ConstSpec            : 48 50
ConstSpecRep         : 49 50
ContinueStmt         : 154
Conversion           : 104
CreateFuncScope      : 23
CreateScope          : 74 75 156 190 193
CreateScopeFor       : 200
CreateScopeIf        : 187
Declaration          : 46 149
ElementType          : 20
ElseOpt              : 187
EndScope             : 23 74 75 156 187 190 193 200
ExprCaseClause       : 195
ExprCaseClauseRep    : 193 195
ExprSwitchCase       : 197
ExprSwitchStmt       : 192
Expression           : 21 56 57 73 86 105 110 112 116 116 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 133 134 134 135 135 136 136 137 137 138 138 139 148 162 163 171 172 173 187 193 198 205 210
ExpressionList       : 52 70 71 118 174 174
ExpressionListOpt    : 69
ExpressionListTypeOpt : 108
ExpressionOpt        : 115 115 116
ExpressionPureOpt    : 209
ExpressionRep        : 56 57
ExpressionStmt       : 165
F                    : 91
FieldDecl            : 24
FieldDeclRep         : 23 24
ForClause            : 204
ForStmt              : 159
Function             : 74
FunctionBody         : 80
FunctionDecl         : 47
FunctionName         : 74 75
GotoStmt             : 155
I                    : 88 89 90 93
IdentifierList       : 26 37 52 69 70
IdentifierRep        : 53 54
IfStmt               : 157 189
ImportDecl           : 221
ImportDeclRep        : 219 221
ImportPath           : 230
ImportSpec           : 226 228
ImportSpecRep        : 227 228
IncDecStmt           : 166
Label                : 169 214 216
LabelOpt             : 212 213
LabeledStmt          : 150
Literal              : 84
Operand              : 101
OperandName          : 85
PackageClause        : 219
PackageName          : 224 232
PackageNameDotOpt    : 230
ParameterDecl        : 33 35 36 36
ParameterDeclCommaRep : 34 35
ParameterListOpt     : 30
Parameters           : 29
ParametersList       : 31
PointerType          : 17
PrimaryExpr          : 103 105 106 107 108 141
PrintStmt            : 160
QualifiedIdent       : 6
ReturnStmt           : 152
S                    : 94
ScanStmt             : 161
Selector             : 103
SemiColonOpt         : 24 41 50 61 67 109 219 221 222 228
ShortVarDecl         : 168
Signature            : 75 80
SimpleStmt           : 151 206 206
Slice                : 106
SourceFile           : 1
StartSwitch          : 193
Statement            : 41 169
StatementList        : 39 197
StatementRep         : 40 41
StructFieldList      : 109
StructFieldRep       : 110 112
StructType           : 16
SwitchStmt           : 158
TopLevelDecl         : 222
TopLevelDeclRep      : 219 222
Type                 : 4 18 22 26 28 37 38 52 64 69 117 148
TypeAssertion        : 107
TypeDecl             : 44
TypeDef              : 63
TypeLit              : 3
TypeName             : 2 100
TypeOpt              : 29
TypeSpec             : 59 61
TypeSpecRep          : 60 61
TypeToken            : 5
UnaryExpr            : 120 142 143
UnaryOp              : 142
VarDecl              : 45
VarSpec              : 65 67
VarSpecRep           : 66 67
assign_op            : 174
epsilon              : 19 25 32 42 51 55 58 62 68 72 111 113 119 140 164 191 196 202 207 211 215 218 220 223 229 233
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (219) SourceFile -> . PackageClause SemiColonOpt ImportDeclRep TopLevelDeclRep
    (224) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 2

    PackageClause                  shift and go to state 1
    SourceFile                     shift and go to state 3
    start                          shift and go to state 4

state 1

    (219) SourceFile -> PackageClause . SemiColonOpt ImportDeclRep TopLevelDeclRep
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    IMPORT          reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 7
    epsilon                        shift and go to state 6

state 2

    (224) PackageClause -> PACKAGE . PackageName
    (225) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 9

    PackageName                    shift and go to state 8

state 3

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 4

    (0) S' -> start .



state 5

    (217) SemiColonOpt -> SEMICOLON .

    LSQUARE         reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LPAREN          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    DOT             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LOGICAL_OR      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LOGICAL_AND     reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    EQUALS          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    NOT_ASSIGN      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LESSER          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    GREATER         reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LESS_EQUALS     reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    MORE_EQUALS     reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    OR              reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    XOR             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    DIVIDE          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    MOD             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LSHIFT          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RSHIFT          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    PLUS            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    MINUS           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    STAR            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    AND             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RSQUARE         reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    COMMA           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    SEMICOLON       reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    FUNC            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    CONST           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    TYPE            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    VAR             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    $end            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RETURN          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    BREAK           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    CONTINUE        reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    GOTO            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    IF              reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    FOR             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    PRINT           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    SCAN            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    IDENTIFIER      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    SWITCH          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    NOT             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    TRUE            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    FALSE           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    TYPECAST        reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LCURL           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    INTEGER         reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    OCTAL           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    HEX             reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RUNE            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    FLOAT           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    IMAGINARY       reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    STRING          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RCURL           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    CASE            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    DEFAULT         reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RPAREN          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    COLON           reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    INCR            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    DECR            reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    PLUS_ASSIGN     reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    MINUS_ASSIGN    reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    STAR_ASSIGN     reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    DIVIDE_ASSIGN   reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    MOD_ASSIGN      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    AND_ASSIGN      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    OR_ASSIGN       reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    XOR_ASSIGN      reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    LSHIFT_ASSIGN   reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    RSHIFT_ASSIGN   reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    ASSIGN          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)
    IMPORT          reduce using rule 217 (SemiColonOpt -> SEMICOLON .)


state 6

    (218) SemiColonOpt -> epsilon .

    LSQUARE         reduce using rule 218 (SemiColonOpt -> epsilon .)
    LPAREN          reduce using rule 218 (SemiColonOpt -> epsilon .)
    DOT             reduce using rule 218 (SemiColonOpt -> epsilon .)
    LOGICAL_OR      reduce using rule 218 (SemiColonOpt -> epsilon .)
    LOGICAL_AND     reduce using rule 218 (SemiColonOpt -> epsilon .)
    EQUALS          reduce using rule 218 (SemiColonOpt -> epsilon .)
    NOT_ASSIGN      reduce using rule 218 (SemiColonOpt -> epsilon .)
    LESSER          reduce using rule 218 (SemiColonOpt -> epsilon .)
    GREATER         reduce using rule 218 (SemiColonOpt -> epsilon .)
    LESS_EQUALS     reduce using rule 218 (SemiColonOpt -> epsilon .)
    MORE_EQUALS     reduce using rule 218 (SemiColonOpt -> epsilon .)
    OR              reduce using rule 218 (SemiColonOpt -> epsilon .)
    XOR             reduce using rule 218 (SemiColonOpt -> epsilon .)
    DIVIDE          reduce using rule 218 (SemiColonOpt -> epsilon .)
    MOD             reduce using rule 218 (SemiColonOpt -> epsilon .)
    LSHIFT          reduce using rule 218 (SemiColonOpt -> epsilon .)
    RSHIFT          reduce using rule 218 (SemiColonOpt -> epsilon .)
    PLUS            reduce using rule 218 (SemiColonOpt -> epsilon .)
    MINUS           reduce using rule 218 (SemiColonOpt -> epsilon .)
    STAR            reduce using rule 218 (SemiColonOpt -> epsilon .)
    AND             reduce using rule 218 (SemiColonOpt -> epsilon .)
    RSQUARE         reduce using rule 218 (SemiColonOpt -> epsilon .)
    COMMA           reduce using rule 218 (SemiColonOpt -> epsilon .)
    SEMICOLON       reduce using rule 218 (SemiColonOpt -> epsilon .)
    FUNC            reduce using rule 218 (SemiColonOpt -> epsilon .)
    CONST           reduce using rule 218 (SemiColonOpt -> epsilon .)
    TYPE            reduce using rule 218 (SemiColonOpt -> epsilon .)
    VAR             reduce using rule 218 (SemiColonOpt -> epsilon .)
    $end            reduce using rule 218 (SemiColonOpt -> epsilon .)
    RETURN          reduce using rule 218 (SemiColonOpt -> epsilon .)
    BREAK           reduce using rule 218 (SemiColonOpt -> epsilon .)
    CONTINUE        reduce using rule 218 (SemiColonOpt -> epsilon .)
    GOTO            reduce using rule 218 (SemiColonOpt -> epsilon .)
    IF              reduce using rule 218 (SemiColonOpt -> epsilon .)
    FOR             reduce using rule 218 (SemiColonOpt -> epsilon .)
    PRINT           reduce using rule 218 (SemiColonOpt -> epsilon .)
    SCAN            reduce using rule 218 (SemiColonOpt -> epsilon .)
    IDENTIFIER      reduce using rule 218 (SemiColonOpt -> epsilon .)
    SWITCH          reduce using rule 218 (SemiColonOpt -> epsilon .)
    NOT             reduce using rule 218 (SemiColonOpt -> epsilon .)
    TRUE            reduce using rule 218 (SemiColonOpt -> epsilon .)
    FALSE           reduce using rule 218 (SemiColonOpt -> epsilon .)
    TYPECAST        reduce using rule 218 (SemiColonOpt -> epsilon .)
    LCURL           reduce using rule 218 (SemiColonOpt -> epsilon .)
    INTEGER         reduce using rule 218 (SemiColonOpt -> epsilon .)
    OCTAL           reduce using rule 218 (SemiColonOpt -> epsilon .)
    HEX             reduce using rule 218 (SemiColonOpt -> epsilon .)
    RUNE            reduce using rule 218 (SemiColonOpt -> epsilon .)
    FLOAT           reduce using rule 218 (SemiColonOpt -> epsilon .)
    IMAGINARY       reduce using rule 218 (SemiColonOpt -> epsilon .)
    STRING          reduce using rule 218 (SemiColonOpt -> epsilon .)
    RCURL           reduce using rule 218 (SemiColonOpt -> epsilon .)
    CASE            reduce using rule 218 (SemiColonOpt -> epsilon .)
    DEFAULT         reduce using rule 218 (SemiColonOpt -> epsilon .)
    RPAREN          reduce using rule 218 (SemiColonOpt -> epsilon .)
    COLON           reduce using rule 218 (SemiColonOpt -> epsilon .)
    INCR            reduce using rule 218 (SemiColonOpt -> epsilon .)
    DECR            reduce using rule 218 (SemiColonOpt -> epsilon .)
    PLUS_ASSIGN     reduce using rule 218 (SemiColonOpt -> epsilon .)
    MINUS_ASSIGN    reduce using rule 218 (SemiColonOpt -> epsilon .)
    STAR_ASSIGN     reduce using rule 218 (SemiColonOpt -> epsilon .)
    DIVIDE_ASSIGN   reduce using rule 218 (SemiColonOpt -> epsilon .)
    MOD_ASSIGN      reduce using rule 218 (SemiColonOpt -> epsilon .)
    AND_ASSIGN      reduce using rule 218 (SemiColonOpt -> epsilon .)
    OR_ASSIGN       reduce using rule 218 (SemiColonOpt -> epsilon .)
    XOR_ASSIGN      reduce using rule 218 (SemiColonOpt -> epsilon .)
    LSHIFT_ASSIGN   reduce using rule 218 (SemiColonOpt -> epsilon .)
    RSHIFT_ASSIGN   reduce using rule 218 (SemiColonOpt -> epsilon .)
    ASSIGN          reduce using rule 218 (SemiColonOpt -> epsilon .)
    IMPORT          reduce using rule 218 (SemiColonOpt -> epsilon .)


state 7

    (219) SourceFile -> PackageClause SemiColonOpt . ImportDeclRep TopLevelDeclRep
    (220) ImportDeclRep -> . epsilon
    (221) ImportDeclRep -> . ImportDeclRep ImportDecl SemiColonOpt
    (235) epsilon -> .

    IMPORT          reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 10
    ImportDeclRep                  shift and go to state 11

state 8

    (224) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    IMPORT          reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    FUNC            reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    CONST           reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    TYPE            reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    VAR             reduce using rule 224 (PackageClause -> PACKAGE PackageName .)
    $end            reduce using rule 224 (PackageClause -> PACKAGE PackageName .)


state 9

    (225) PackageName -> IDENTIFIER .

    STRING          reduce using rule 225 (PackageName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 225 (PackageName -> IDENTIFIER .)
    IMPORT          reduce using rule 225 (PackageName -> IDENTIFIER .)
    FUNC            reduce using rule 225 (PackageName -> IDENTIFIER .)
    CONST           reduce using rule 225 (PackageName -> IDENTIFIER .)
    TYPE            reduce using rule 225 (PackageName -> IDENTIFIER .)
    VAR             reduce using rule 225 (PackageName -> IDENTIFIER .)
    $end            reduce using rule 225 (PackageName -> IDENTIFIER .)


state 10

    (220) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 220 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 220 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 220 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 220 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 220 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 220 (ImportDeclRep -> epsilon .)


state 11

    (219) SourceFile -> PackageClause SemiColonOpt ImportDeclRep . TopLevelDeclRep
    (221) ImportDeclRep -> ImportDeclRep . ImportDecl SemiColonOpt
    (222) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SemiColonOpt
    (223) TopLevelDeclRep -> . epsilon
    (226) ImportDecl -> . IMPORT ImportSpec
    (227) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (235) epsilon -> .

    IMPORT          shift and go to state 14
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 12
    epsilon                        shift and go to state 13
    ImportDecl                     shift and go to state 15

state 12

    (219) SourceFile -> PackageClause SemiColonOpt ImportDeclRep TopLevelDeclRep .
    (222) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SemiColonOpt
    (46) TopLevelDecl -> . Declaration
    (47) TopLevelDecl -> . FunctionDecl
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (74) FunctionDecl -> . FUNC FunctionName CreateScope Function EndScope
    (75) FunctionDecl -> . FUNC FunctionName CreateScope Signature EndScope
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 219 (SourceFile -> PackageClause SemiColonOpt ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 22
    CONST           shift and go to state 16
    TYPE            shift and go to state 25
    VAR             shift and go to state 23

    TypeDecl                       shift and go to state 21
    VarDecl                        shift and go to state 24
    FunctionDecl                   shift and go to state 17
    TopLevelDecl                   shift and go to state 18
    Declaration                    shift and go to state 19
    ConstDecl                      shift and go to state 20

state 13

    (223) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 223 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 223 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 223 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 223 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 223 (TopLevelDeclRep -> epsilon .)


state 14

    (226) ImportDecl -> IMPORT . ImportSpec
    (227) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (230) ImportSpec -> . PackageNameDotOpt ImportPath
    (231) PackageNameDotOpt -> . DOT
    (232) PackageNameDotOpt -> . PackageName
    (233) PackageNameDotOpt -> . epsilon
    (225) PackageName -> . IDENTIFIER
    (235) epsilon -> .

    LPAREN          shift and go to state 26
    DOT             shift and go to state 31
    IDENTIFIER      shift and go to state 9
    STRING          reduce using rule 235 (epsilon -> .)

    ImportSpec                     shift and go to state 27
    epsilon                        shift and go to state 28
    PackageName                    shift and go to state 29
    PackageNameDotOpt              shift and go to state 30

state 15

    (221) ImportDeclRep -> ImportDeclRep ImportDecl . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    IMPORT          reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 6
    SemiColonOpt                   shift and go to state 32

state 16

    (48) ConstDecl -> CONST . ConstSpec
    (49) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (52) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 34
    IDENTIFIER      shift and go to state 36

    ConstSpec                      shift and go to state 33
    IdentifierList                 shift and go to state 35

state 17

    (47) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 47 (TopLevelDecl -> FunctionDecl .)
    FUNC            reduce using rule 47 (TopLevelDecl -> FunctionDecl .)
    CONST           reduce using rule 47 (TopLevelDecl -> FunctionDecl .)
    TYPE            reduce using rule 47 (TopLevelDecl -> FunctionDecl .)
    VAR             reduce using rule 47 (TopLevelDecl -> FunctionDecl .)
    $end            reduce using rule 47 (TopLevelDecl -> FunctionDecl .)


state 18

    (222) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 37
    epsilon                        shift and go to state 6

state 19

    (46) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 46 (TopLevelDecl -> Declaration .)
    FUNC            reduce using rule 46 (TopLevelDecl -> Declaration .)
    CONST           reduce using rule 46 (TopLevelDecl -> Declaration .)
    TYPE            reduce using rule 46 (TopLevelDecl -> Declaration .)
    VAR             reduce using rule 46 (TopLevelDecl -> Declaration .)
    $end            reduce using rule 46 (TopLevelDecl -> Declaration .)


state 20

    (43) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 43 (Declaration -> ConstDecl .)
    RETURN          reduce using rule 43 (Declaration -> ConstDecl .)
    BREAK           reduce using rule 43 (Declaration -> ConstDecl .)
    CONTINUE        reduce using rule 43 (Declaration -> ConstDecl .)
    GOTO            reduce using rule 43 (Declaration -> ConstDecl .)
    IF              reduce using rule 43 (Declaration -> ConstDecl .)
    FOR             reduce using rule 43 (Declaration -> ConstDecl .)
    PRINT           reduce using rule 43 (Declaration -> ConstDecl .)
    SCAN            reduce using rule 43 (Declaration -> ConstDecl .)
    CONST           reduce using rule 43 (Declaration -> ConstDecl .)
    TYPE            reduce using rule 43 (Declaration -> ConstDecl .)
    VAR             reduce using rule 43 (Declaration -> ConstDecl .)
    IDENTIFIER      reduce using rule 43 (Declaration -> ConstDecl .)
    SWITCH          reduce using rule 43 (Declaration -> ConstDecl .)
    NOT             reduce using rule 43 (Declaration -> ConstDecl .)
    PLUS            reduce using rule 43 (Declaration -> ConstDecl .)
    MINUS           reduce using rule 43 (Declaration -> ConstDecl .)
    STAR            reduce using rule 43 (Declaration -> ConstDecl .)
    AND             reduce using rule 43 (Declaration -> ConstDecl .)
    LPAREN          reduce using rule 43 (Declaration -> ConstDecl .)
    TRUE            reduce using rule 43 (Declaration -> ConstDecl .)
    FALSE           reduce using rule 43 (Declaration -> ConstDecl .)
    TYPECAST        reduce using rule 43 (Declaration -> ConstDecl .)
    LCURL           reduce using rule 43 (Declaration -> ConstDecl .)
    INTEGER         reduce using rule 43 (Declaration -> ConstDecl .)
    OCTAL           reduce using rule 43 (Declaration -> ConstDecl .)
    HEX             reduce using rule 43 (Declaration -> ConstDecl .)
    RUNE            reduce using rule 43 (Declaration -> ConstDecl .)
    FLOAT           reduce using rule 43 (Declaration -> ConstDecl .)
    IMAGINARY       reduce using rule 43 (Declaration -> ConstDecl .)
    STRING          reduce using rule 43 (Declaration -> ConstDecl .)
    RCURL           reduce using rule 43 (Declaration -> ConstDecl .)
    CASE            reduce using rule 43 (Declaration -> ConstDecl .)
    DEFAULT         reduce using rule 43 (Declaration -> ConstDecl .)
    FUNC            reduce using rule 43 (Declaration -> ConstDecl .)
    $end            reduce using rule 43 (Declaration -> ConstDecl .)


state 21

    (44) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 44 (Declaration -> TypeDecl .)
    RETURN          reduce using rule 44 (Declaration -> TypeDecl .)
    BREAK           reduce using rule 44 (Declaration -> TypeDecl .)
    CONTINUE        reduce using rule 44 (Declaration -> TypeDecl .)
    GOTO            reduce using rule 44 (Declaration -> TypeDecl .)
    IF              reduce using rule 44 (Declaration -> TypeDecl .)
    FOR             reduce using rule 44 (Declaration -> TypeDecl .)
    PRINT           reduce using rule 44 (Declaration -> TypeDecl .)
    SCAN            reduce using rule 44 (Declaration -> TypeDecl .)
    CONST           reduce using rule 44 (Declaration -> TypeDecl .)
    TYPE            reduce using rule 44 (Declaration -> TypeDecl .)
    VAR             reduce using rule 44 (Declaration -> TypeDecl .)
    IDENTIFIER      reduce using rule 44 (Declaration -> TypeDecl .)
    SWITCH          reduce using rule 44 (Declaration -> TypeDecl .)
    NOT             reduce using rule 44 (Declaration -> TypeDecl .)
    PLUS            reduce using rule 44 (Declaration -> TypeDecl .)
    MINUS           reduce using rule 44 (Declaration -> TypeDecl .)
    STAR            reduce using rule 44 (Declaration -> TypeDecl .)
    AND             reduce using rule 44 (Declaration -> TypeDecl .)
    LPAREN          reduce using rule 44 (Declaration -> TypeDecl .)
    TRUE            reduce using rule 44 (Declaration -> TypeDecl .)
    FALSE           reduce using rule 44 (Declaration -> TypeDecl .)
    TYPECAST        reduce using rule 44 (Declaration -> TypeDecl .)
    LCURL           reduce using rule 44 (Declaration -> TypeDecl .)
    INTEGER         reduce using rule 44 (Declaration -> TypeDecl .)
    OCTAL           reduce using rule 44 (Declaration -> TypeDecl .)
    HEX             reduce using rule 44 (Declaration -> TypeDecl .)
    RUNE            reduce using rule 44 (Declaration -> TypeDecl .)
    FLOAT           reduce using rule 44 (Declaration -> TypeDecl .)
    IMAGINARY       reduce using rule 44 (Declaration -> TypeDecl .)
    STRING          reduce using rule 44 (Declaration -> TypeDecl .)
    RCURL           reduce using rule 44 (Declaration -> TypeDecl .)
    CASE            reduce using rule 44 (Declaration -> TypeDecl .)
    DEFAULT         reduce using rule 44 (Declaration -> TypeDecl .)
    FUNC            reduce using rule 44 (Declaration -> TypeDecl .)
    $end            reduce using rule 44 (Declaration -> TypeDecl .)


state 22

    (74) FunctionDecl -> FUNC . FunctionName CreateScope Function EndScope
    (75) FunctionDecl -> FUNC . FunctionName CreateScope Signature EndScope
    (79) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 38

    FunctionName                   shift and go to state 39

state 23

    (65) VarDecl -> VAR . VarSpec
    (66) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (69) VarSpec -> . IdentifierList Type ExpressionListOpt
    (70) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 41
    IDENTIFIER      shift and go to state 36

    VarSpec                        shift and go to state 40
    IdentifierList                 shift and go to state 42

state 24

    (45) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 45 (Declaration -> VarDecl .)
    RETURN          reduce using rule 45 (Declaration -> VarDecl .)
    BREAK           reduce using rule 45 (Declaration -> VarDecl .)
    CONTINUE        reduce using rule 45 (Declaration -> VarDecl .)
    GOTO            reduce using rule 45 (Declaration -> VarDecl .)
    IF              reduce using rule 45 (Declaration -> VarDecl .)
    FOR             reduce using rule 45 (Declaration -> VarDecl .)
    PRINT           reduce using rule 45 (Declaration -> VarDecl .)
    SCAN            reduce using rule 45 (Declaration -> VarDecl .)
    CONST           reduce using rule 45 (Declaration -> VarDecl .)
    TYPE            reduce using rule 45 (Declaration -> VarDecl .)
    VAR             reduce using rule 45 (Declaration -> VarDecl .)
    IDENTIFIER      reduce using rule 45 (Declaration -> VarDecl .)
    SWITCH          reduce using rule 45 (Declaration -> VarDecl .)
    NOT             reduce using rule 45 (Declaration -> VarDecl .)
    PLUS            reduce using rule 45 (Declaration -> VarDecl .)
    MINUS           reduce using rule 45 (Declaration -> VarDecl .)
    STAR            reduce using rule 45 (Declaration -> VarDecl .)
    AND             reduce using rule 45 (Declaration -> VarDecl .)
    LPAREN          reduce using rule 45 (Declaration -> VarDecl .)
    TRUE            reduce using rule 45 (Declaration -> VarDecl .)
    FALSE           reduce using rule 45 (Declaration -> VarDecl .)
    TYPECAST        reduce using rule 45 (Declaration -> VarDecl .)
    LCURL           reduce using rule 45 (Declaration -> VarDecl .)
    INTEGER         reduce using rule 45 (Declaration -> VarDecl .)
    OCTAL           reduce using rule 45 (Declaration -> VarDecl .)
    HEX             reduce using rule 45 (Declaration -> VarDecl .)
    RUNE            reduce using rule 45 (Declaration -> VarDecl .)
    FLOAT           reduce using rule 45 (Declaration -> VarDecl .)
    IMAGINARY       reduce using rule 45 (Declaration -> VarDecl .)
    STRING          reduce using rule 45 (Declaration -> VarDecl .)
    RCURL           reduce using rule 45 (Declaration -> VarDecl .)
    CASE            reduce using rule 45 (Declaration -> VarDecl .)
    DEFAULT         reduce using rule 45 (Declaration -> VarDecl .)
    FUNC            reduce using rule 45 (Declaration -> VarDecl .)
    $end            reduce using rule 45 (Declaration -> VarDecl .)


state 25

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . TypeDef
    (64) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 44
    IDENTIFIER      shift and go to state 46

    TypeSpec                       shift and go to state 45
    TypeDef                        shift and go to state 43

state 26

    (227) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (228) ImportSpecRep -> . ImportSpecRep ImportSpec SemiColonOpt
    (229) ImportSpecRep -> . epsilon
    (235) epsilon -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    DOT             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 47
    ImportSpecRep                  shift and go to state 48

state 27

    (226) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    IMPORT          reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    FUNC            reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    CONST           reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    TYPE            reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    VAR             reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)
    $end            reduce using rule 226 (ImportDecl -> IMPORT ImportSpec .)


state 28

    (233) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 233 (PackageNameDotOpt -> epsilon .)


state 29

    (232) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 232 (PackageNameDotOpt -> PackageName .)


state 30

    (230) ImportSpec -> PackageNameDotOpt . ImportPath
    (234) ImportPath -> . STRING

    STRING          shift and go to state 50

    ImportPath                     shift and go to state 49

state 31

    (231) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 231 (PackageNameDotOpt -> DOT .)


state 32

    (221) ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .

    IMPORT          reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)
    FUNC            reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)
    CONST           reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)
    TYPE            reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)
    VAR             reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)
    $end            reduce using rule 221 (ImportDeclRep -> ImportDeclRep ImportDecl SemiColonOpt .)


state 33

    (48) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    FUNC            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    CONST           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    TYPE            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    VAR             reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    $end            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    RETURN          reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    BREAK           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    CONTINUE        reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    GOTO            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    IF              reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    FOR             reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    PRINT           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    SCAN            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    IDENTIFIER      reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    SWITCH          reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    NOT             reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    PLUS            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    MINUS           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    STAR            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    AND             reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    LPAREN          reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    TRUE            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    FALSE           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    TYPECAST        reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    LCURL           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    INTEGER         reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    OCTAL           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    HEX             reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    RUNE            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    FLOAT           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    IMAGINARY       reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    STRING          reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    RCURL           reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    CASE            reduce using rule 48 (ConstDecl -> CONST ConstSpec .)
    DEFAULT         reduce using rule 48 (ConstDecl -> CONST ConstSpec .)


state 34

    (49) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (50) ConstSpecRep -> . ConstSpecRep ConstSpec SemiColonOpt
    (51) ConstSpecRep -> . epsilon
    (235) epsilon -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    ConstSpecRep                   shift and go to state 51
    epsilon                        shift and go to state 52

state 35

    (52) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 57
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 36

    (53) IdentifierList -> IDENTIFIER . IdentifierRep
    (54) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (55) IdentifierRep -> . epsilon
    (235) epsilon -> .

    COMMA           reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    INT             reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    UINT            reduce using rule 235 (epsilon -> .)
    COMPLEX         reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    BOOL            reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    LSQUARE         reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    STRUCT          reduce using rule 235 (epsilon -> .)
    ASSIGN          reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 74
    IdentifierRep                  shift and go to state 75

state 37

    (222) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .

    FUNC            reduce using rule 222 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .)
    CONST           reduce using rule 222 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .)
    TYPE            reduce using rule 222 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .)
    VAR             reduce using rule 222 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .)
    $end            reduce using rule 222 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SemiColonOpt .)


state 38

    (79) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 79 (FunctionName -> IDENTIFIER .)


state 39

    (74) FunctionDecl -> FUNC FunctionName . CreateScope Function EndScope
    (75) FunctionDecl -> FUNC FunctionName . CreateScope Signature EndScope
    (77) CreateScope -> .

    LPAREN          reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 76

state 40

    (65) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 65 (VarDecl -> VAR VarSpec .)
    RETURN          reduce using rule 65 (VarDecl -> VAR VarSpec .)
    BREAK           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    CONTINUE        reduce using rule 65 (VarDecl -> VAR VarSpec .)
    GOTO            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    IF              reduce using rule 65 (VarDecl -> VAR VarSpec .)
    FOR             reduce using rule 65 (VarDecl -> VAR VarSpec .)
    PRINT           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    SCAN            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    CONST           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    TYPE            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    VAR             reduce using rule 65 (VarDecl -> VAR VarSpec .)
    IDENTIFIER      reduce using rule 65 (VarDecl -> VAR VarSpec .)
    SWITCH          reduce using rule 65 (VarDecl -> VAR VarSpec .)
    NOT             reduce using rule 65 (VarDecl -> VAR VarSpec .)
    PLUS            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    MINUS           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    STAR            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    AND             reduce using rule 65 (VarDecl -> VAR VarSpec .)
    LPAREN          reduce using rule 65 (VarDecl -> VAR VarSpec .)
    TRUE            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    FALSE           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    TYPECAST        reduce using rule 65 (VarDecl -> VAR VarSpec .)
    LCURL           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    INTEGER         reduce using rule 65 (VarDecl -> VAR VarSpec .)
    OCTAL           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    HEX             reduce using rule 65 (VarDecl -> VAR VarSpec .)
    RUNE            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    FLOAT           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    IMAGINARY       reduce using rule 65 (VarDecl -> VAR VarSpec .)
    STRING          reduce using rule 65 (VarDecl -> VAR VarSpec .)
    RCURL           reduce using rule 65 (VarDecl -> VAR VarSpec .)
    CASE            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    DEFAULT         reduce using rule 65 (VarDecl -> VAR VarSpec .)
    FUNC            reduce using rule 65 (VarDecl -> VAR VarSpec .)
    $end            reduce using rule 65 (VarDecl -> VAR VarSpec .)


state 41

    (66) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (67) VarSpecRep -> . VarSpecRep VarSpec SemiColonOpt
    (68) VarSpecRep -> . epsilon
    (235) epsilon -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    VarSpecRep                     shift and go to state 77
    epsilon                        shift and go to state 78

state 42

    (69) VarSpec -> IdentifierList . Type ExpressionListOpt
    (70) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    ASSIGN          shift and go to state 80
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    Type                           shift and go to state 79
    TypeToken                      shift and go to state 59
    TypeLit                        shift and go to state 60
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 43

    (63) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 63 (TypeSpec -> TypeDef .)
    RPAREN          reduce using rule 63 (TypeSpec -> TypeDef .)
    IDENTIFIER      reduce using rule 63 (TypeSpec -> TypeDef .)
    FUNC            reduce using rule 63 (TypeSpec -> TypeDef .)
    CONST           reduce using rule 63 (TypeSpec -> TypeDef .)
    TYPE            reduce using rule 63 (TypeSpec -> TypeDef .)
    VAR             reduce using rule 63 (TypeSpec -> TypeDef .)
    $end            reduce using rule 63 (TypeSpec -> TypeDef .)
    RETURN          reduce using rule 63 (TypeSpec -> TypeDef .)
    BREAK           reduce using rule 63 (TypeSpec -> TypeDef .)
    CONTINUE        reduce using rule 63 (TypeSpec -> TypeDef .)
    GOTO            reduce using rule 63 (TypeSpec -> TypeDef .)
    IF              reduce using rule 63 (TypeSpec -> TypeDef .)
    FOR             reduce using rule 63 (TypeSpec -> TypeDef .)
    PRINT           reduce using rule 63 (TypeSpec -> TypeDef .)
    SCAN            reduce using rule 63 (TypeSpec -> TypeDef .)
    SWITCH          reduce using rule 63 (TypeSpec -> TypeDef .)
    NOT             reduce using rule 63 (TypeSpec -> TypeDef .)
    PLUS            reduce using rule 63 (TypeSpec -> TypeDef .)
    MINUS           reduce using rule 63 (TypeSpec -> TypeDef .)
    STAR            reduce using rule 63 (TypeSpec -> TypeDef .)
    AND             reduce using rule 63 (TypeSpec -> TypeDef .)
    LPAREN          reduce using rule 63 (TypeSpec -> TypeDef .)
    TRUE            reduce using rule 63 (TypeSpec -> TypeDef .)
    FALSE           reduce using rule 63 (TypeSpec -> TypeDef .)
    TYPECAST        reduce using rule 63 (TypeSpec -> TypeDef .)
    LCURL           reduce using rule 63 (TypeSpec -> TypeDef .)
    INTEGER         reduce using rule 63 (TypeSpec -> TypeDef .)
    OCTAL           reduce using rule 63 (TypeSpec -> TypeDef .)
    HEX             reduce using rule 63 (TypeSpec -> TypeDef .)
    RUNE            reduce using rule 63 (TypeSpec -> TypeDef .)
    FLOAT           reduce using rule 63 (TypeSpec -> TypeDef .)
    IMAGINARY       reduce using rule 63 (TypeSpec -> TypeDef .)
    STRING          reduce using rule 63 (TypeSpec -> TypeDef .)
    RCURL           reduce using rule 63 (TypeSpec -> TypeDef .)
    CASE            reduce using rule 63 (TypeSpec -> TypeDef .)
    DEFAULT         reduce using rule 63 (TypeSpec -> TypeDef .)


state 44

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SemiColonOpt
    (62) TypeSpecRep -> . epsilon
    (235) epsilon -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    TypeSpecRep                    shift and go to state 81
    epsilon                        shift and go to state 82

state 45

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    RETURN          reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    BREAK           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    CONTINUE        reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    GOTO            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    IF              reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    FOR             reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    PRINT           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    SCAN            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    CONST           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    TYPE            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    VAR             reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    IDENTIFIER      reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    SWITCH          reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    NOT             reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    PLUS            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    MINUS           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    STAR            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    AND             reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    LPAREN          reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    TRUE            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    FALSE           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    TYPECAST        reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    LCURL           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    INTEGER         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    OCTAL           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    HEX             reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    RUNE            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    FLOAT           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    IMAGINARY       reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    STRING          reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    RCURL           reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    CASE            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    DEFAULT         reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    FUNC            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)
    $end            reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 46

    (64) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 83
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 47

    (229) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 229 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 229 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 229 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 229 (ImportSpecRep -> epsilon .)


state 48

    (227) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (228) ImportSpecRep -> ImportSpecRep . ImportSpec SemiColonOpt
    (230) ImportSpec -> . PackageNameDotOpt ImportPath
    (231) PackageNameDotOpt -> . DOT
    (232) PackageNameDotOpt -> . PackageName
    (233) PackageNameDotOpt -> . epsilon
    (225) PackageName -> . IDENTIFIER
    (235) epsilon -> .

    RPAREN          shift and go to state 84
    DOT             shift and go to state 31
    IDENTIFIER      shift and go to state 9
    STRING          reduce using rule 235 (epsilon -> .)

    ImportSpec                     shift and go to state 85
    epsilon                        shift and go to state 28
    PackageName                    shift and go to state 29
    PackageNameDotOpt              shift and go to state 30

state 49

    (230) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    RPAREN          reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    DOT             reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    IDENTIFIER      reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    STRING          reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    IMPORT          reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    FUNC            reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    CONST           reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    TYPE            reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    VAR             reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)
    $end            reduce using rule 230 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 50

    (234) ImportPath -> STRING .

    SEMICOLON       reduce using rule 234 (ImportPath -> STRING .)
    IMPORT          reduce using rule 234 (ImportPath -> STRING .)
    FUNC            reduce using rule 234 (ImportPath -> STRING .)
    CONST           reduce using rule 234 (ImportPath -> STRING .)
    TYPE            reduce using rule 234 (ImportPath -> STRING .)
    VAR             reduce using rule 234 (ImportPath -> STRING .)
    $end            reduce using rule 234 (ImportPath -> STRING .)
    RPAREN          reduce using rule 234 (ImportPath -> STRING .)
    DOT             reduce using rule 234 (ImportPath -> STRING .)
    IDENTIFIER      reduce using rule 234 (ImportPath -> STRING .)
    STRING          reduce using rule 234 (ImportPath -> STRING .)


state 51

    (49) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (50) ConstSpecRep -> ConstSpecRep . ConstSpec SemiColonOpt
    (52) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 87
    IDENTIFIER      shift and go to state 36

    ConstSpec                      shift and go to state 86
    IdentifierList                 shift and go to state 35

state 52

    (51) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 51 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> epsilon .)


state 53

    (27) PointerType -> STAR . BaseType
    (28) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    BaseType                       shift and go to state 89
    Type                           shift and go to state 88
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 54

    (20) ArrayType -> LSQUARE . ArrayLength RSQUARE ElementType
    (21) ArrayLength -> . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ArrayLength                    shift and go to state 106
    Expression                     shift and go to state 107
    Operand                        shift and go to state 114

state 55

    (15) TypeLit -> ArrayType .

    COMMA           reduce using rule 15 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 15 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 15 (TypeLit -> ArrayType .)
    LCURL           reduce using rule 15 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> ArrayType .)
    FUNC            reduce using rule 15 (TypeLit -> ArrayType .)
    CONST           reduce using rule 15 (TypeLit -> ArrayType .)
    TYPE            reduce using rule 15 (TypeLit -> ArrayType .)
    VAR             reduce using rule 15 (TypeLit -> ArrayType .)
    $end            reduce using rule 15 (TypeLit -> ArrayType .)
    ASSIGN          reduce using rule 15 (TypeLit -> ArrayType .)
    RETURN          reduce using rule 15 (TypeLit -> ArrayType .)
    BREAK           reduce using rule 15 (TypeLit -> ArrayType .)
    CONTINUE        reduce using rule 15 (TypeLit -> ArrayType .)
    GOTO            reduce using rule 15 (TypeLit -> ArrayType .)
    IF              reduce using rule 15 (TypeLit -> ArrayType .)
    FOR             reduce using rule 15 (TypeLit -> ArrayType .)
    PRINT           reduce using rule 15 (TypeLit -> ArrayType .)
    SCAN            reduce using rule 15 (TypeLit -> ArrayType .)
    IDENTIFIER      reduce using rule 15 (TypeLit -> ArrayType .)
    SWITCH          reduce using rule 15 (TypeLit -> ArrayType .)
    NOT             reduce using rule 15 (TypeLit -> ArrayType .)
    PLUS            reduce using rule 15 (TypeLit -> ArrayType .)
    MINUS           reduce using rule 15 (TypeLit -> ArrayType .)
    STAR            reduce using rule 15 (TypeLit -> ArrayType .)
    AND             reduce using rule 15 (TypeLit -> ArrayType .)
    TRUE            reduce using rule 15 (TypeLit -> ArrayType .)
    FALSE           reduce using rule 15 (TypeLit -> ArrayType .)
    TYPECAST        reduce using rule 15 (TypeLit -> ArrayType .)
    INTEGER         reduce using rule 15 (TypeLit -> ArrayType .)
    OCTAL           reduce using rule 15 (TypeLit -> ArrayType .)
    HEX             reduce using rule 15 (TypeLit -> ArrayType .)
    RUNE            reduce using rule 15 (TypeLit -> ArrayType .)
    FLOAT           reduce using rule 15 (TypeLit -> ArrayType .)
    IMAGINARY       reduce using rule 15 (TypeLit -> ArrayType .)
    STRING          reduce using rule 15 (TypeLit -> ArrayType .)
    RCURL           reduce using rule 15 (TypeLit -> ArrayType .)
    CASE            reduce using rule 15 (TypeLit -> ArrayType .)
    DEFAULT         reduce using rule 15 (TypeLit -> ArrayType .)


state 56

    (10) TypeToken -> COMPLEX .

    RPAREN          reduce using rule 10 (TypeToken -> COMPLEX .)
    ASSIGN          reduce using rule 10 (TypeToken -> COMPLEX .)
    SEMICOLON       reduce using rule 10 (TypeToken -> COMPLEX .)
    FUNC            reduce using rule 10 (TypeToken -> COMPLEX .)
    CONST           reduce using rule 10 (TypeToken -> COMPLEX .)
    TYPE            reduce using rule 10 (TypeToken -> COMPLEX .)
    VAR             reduce using rule 10 (TypeToken -> COMPLEX .)
    $end            reduce using rule 10 (TypeToken -> COMPLEX .)
    RETURN          reduce using rule 10 (TypeToken -> COMPLEX .)
    BREAK           reduce using rule 10 (TypeToken -> COMPLEX .)
    CONTINUE        reduce using rule 10 (TypeToken -> COMPLEX .)
    GOTO            reduce using rule 10 (TypeToken -> COMPLEX .)
    IF              reduce using rule 10 (TypeToken -> COMPLEX .)
    FOR             reduce using rule 10 (TypeToken -> COMPLEX .)
    PRINT           reduce using rule 10 (TypeToken -> COMPLEX .)
    SCAN            reduce using rule 10 (TypeToken -> COMPLEX .)
    IDENTIFIER      reduce using rule 10 (TypeToken -> COMPLEX .)
    SWITCH          reduce using rule 10 (TypeToken -> COMPLEX .)
    NOT             reduce using rule 10 (TypeToken -> COMPLEX .)
    PLUS            reduce using rule 10 (TypeToken -> COMPLEX .)
    MINUS           reduce using rule 10 (TypeToken -> COMPLEX .)
    STAR            reduce using rule 10 (TypeToken -> COMPLEX .)
    AND             reduce using rule 10 (TypeToken -> COMPLEX .)
    LPAREN          reduce using rule 10 (TypeToken -> COMPLEX .)
    TRUE            reduce using rule 10 (TypeToken -> COMPLEX .)
    FALSE           reduce using rule 10 (TypeToken -> COMPLEX .)
    TYPECAST        reduce using rule 10 (TypeToken -> COMPLEX .)
    LCURL           reduce using rule 10 (TypeToken -> COMPLEX .)
    INTEGER         reduce using rule 10 (TypeToken -> COMPLEX .)
    OCTAL           reduce using rule 10 (TypeToken -> COMPLEX .)
    HEX             reduce using rule 10 (TypeToken -> COMPLEX .)
    RUNE            reduce using rule 10 (TypeToken -> COMPLEX .)
    FLOAT           reduce using rule 10 (TypeToken -> COMPLEX .)
    IMAGINARY       reduce using rule 10 (TypeToken -> COMPLEX .)
    STRING          reduce using rule 10 (TypeToken -> COMPLEX .)
    RCURL           reduce using rule 10 (TypeToken -> COMPLEX .)
    CASE            reduce using rule 10 (TypeToken -> COMPLEX .)
    DEFAULT         reduce using rule 10 (TypeToken -> COMPLEX .)
    COMMA           reduce using rule 10 (TypeToken -> COMPLEX .)


state 57

    (52) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 115


state 58

    (23) StructType -> CreateFuncScope . STRUCT LCURL FieldDeclRep RCURL EndScope

    STRUCT          shift and go to state 116


state 59

    (5) TypeName -> TypeToken .

    ASSIGN          reduce using rule 5 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 5 (TypeName -> TypeToken .)
    FUNC            reduce using rule 5 (TypeName -> TypeToken .)
    CONST           reduce using rule 5 (TypeName -> TypeToken .)
    TYPE            reduce using rule 5 (TypeName -> TypeToken .)
    VAR             reduce using rule 5 (TypeName -> TypeToken .)
    $end            reduce using rule 5 (TypeName -> TypeToken .)
    RETURN          reduce using rule 5 (TypeName -> TypeToken .)
    BREAK           reduce using rule 5 (TypeName -> TypeToken .)
    CONTINUE        reduce using rule 5 (TypeName -> TypeToken .)
    GOTO            reduce using rule 5 (TypeName -> TypeToken .)
    IF              reduce using rule 5 (TypeName -> TypeToken .)
    FOR             reduce using rule 5 (TypeName -> TypeToken .)
    PRINT           reduce using rule 5 (TypeName -> TypeToken .)
    SCAN            reduce using rule 5 (TypeName -> TypeToken .)
    IDENTIFIER      reduce using rule 5 (TypeName -> TypeToken .)
    SWITCH          reduce using rule 5 (TypeName -> TypeToken .)
    NOT             reduce using rule 5 (TypeName -> TypeToken .)
    PLUS            reduce using rule 5 (TypeName -> TypeToken .)
    MINUS           reduce using rule 5 (TypeName -> TypeToken .)
    STAR            reduce using rule 5 (TypeName -> TypeToken .)
    AND             reduce using rule 5 (TypeName -> TypeToken .)
    LPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    TRUE            reduce using rule 5 (TypeName -> TypeToken .)
    FALSE           reduce using rule 5 (TypeName -> TypeToken .)
    TYPECAST        reduce using rule 5 (TypeName -> TypeToken .)
    LCURL           reduce using rule 5 (TypeName -> TypeToken .)
    INTEGER         reduce using rule 5 (TypeName -> TypeToken .)
    OCTAL           reduce using rule 5 (TypeName -> TypeToken .)
    HEX             reduce using rule 5 (TypeName -> TypeToken .)
    RUNE            reduce using rule 5 (TypeName -> TypeToken .)
    FLOAT           reduce using rule 5 (TypeName -> TypeToken .)
    IMAGINARY       reduce using rule 5 (TypeName -> TypeToken .)
    STRING          reduce using rule 5 (TypeName -> TypeToken .)
    RCURL           reduce using rule 5 (TypeName -> TypeToken .)
    CASE            reduce using rule 5 (TypeName -> TypeToken .)
    DEFAULT         reduce using rule 5 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    COMMA           reduce using rule 5 (TypeName -> TypeToken .)


state 60

    (3) Type -> TypeLit .

    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)
    LCURL           reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    FUNC            reduce using rule 3 (Type -> TypeLit .)
    CONST           reduce using rule 3 (Type -> TypeLit .)
    TYPE            reduce using rule 3 (Type -> TypeLit .)
    VAR             reduce using rule 3 (Type -> TypeLit .)
    $end            reduce using rule 3 (Type -> TypeLit .)
    ASSIGN          reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    RETURN          reduce using rule 3 (Type -> TypeLit .)
    BREAK           reduce using rule 3 (Type -> TypeLit .)
    CONTINUE        reduce using rule 3 (Type -> TypeLit .)
    GOTO            reduce using rule 3 (Type -> TypeLit .)
    IF              reduce using rule 3 (Type -> TypeLit .)
    FOR             reduce using rule 3 (Type -> TypeLit .)
    PRINT           reduce using rule 3 (Type -> TypeLit .)
    SCAN            reduce using rule 3 (Type -> TypeLit .)
    IDENTIFIER      reduce using rule 3 (Type -> TypeLit .)
    SWITCH          reduce using rule 3 (Type -> TypeLit .)
    NOT             reduce using rule 3 (Type -> TypeLit .)
    PLUS            reduce using rule 3 (Type -> TypeLit .)
    MINUS           reduce using rule 3 (Type -> TypeLit .)
    STAR            reduce using rule 3 (Type -> TypeLit .)
    AND             reduce using rule 3 (Type -> TypeLit .)
    TRUE            reduce using rule 3 (Type -> TypeLit .)
    FALSE           reduce using rule 3 (Type -> TypeLit .)
    TYPECAST        reduce using rule 3 (Type -> TypeLit .)
    INTEGER         reduce using rule 3 (Type -> TypeLit .)
    OCTAL           reduce using rule 3 (Type -> TypeLit .)
    HEX             reduce using rule 3 (Type -> TypeLit .)
    RUNE            reduce using rule 3 (Type -> TypeLit .)
    FLOAT           reduce using rule 3 (Type -> TypeLit .)
    IMAGINARY       reduce using rule 3 (Type -> TypeLit .)
    STRING          reduce using rule 3 (Type -> TypeLit .)
    RCURL           reduce using rule 3 (Type -> TypeLit .)
    CASE            reduce using rule 3 (Type -> TypeLit .)
    DEFAULT         reduce using rule 3 (Type -> TypeLit .)


state 61

    (2) Type -> TypeName .

    RPAREN          reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)
    LCURL           reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    FUNC            reduce using rule 2 (Type -> TypeName .)
    CONST           reduce using rule 2 (Type -> TypeName .)
    TYPE            reduce using rule 2 (Type -> TypeName .)
    VAR             reduce using rule 2 (Type -> TypeName .)
    $end            reduce using rule 2 (Type -> TypeName .)
    ASSIGN          reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    RETURN          reduce using rule 2 (Type -> TypeName .)
    BREAK           reduce using rule 2 (Type -> TypeName .)
    CONTINUE        reduce using rule 2 (Type -> TypeName .)
    GOTO            reduce using rule 2 (Type -> TypeName .)
    IF              reduce using rule 2 (Type -> TypeName .)
    FOR             reduce using rule 2 (Type -> TypeName .)
    PRINT           reduce using rule 2 (Type -> TypeName .)
    SCAN            reduce using rule 2 (Type -> TypeName .)
    IDENTIFIER      reduce using rule 2 (Type -> TypeName .)
    SWITCH          reduce using rule 2 (Type -> TypeName .)
    NOT             reduce using rule 2 (Type -> TypeName .)
    PLUS            reduce using rule 2 (Type -> TypeName .)
    MINUS           reduce using rule 2 (Type -> TypeName .)
    STAR            reduce using rule 2 (Type -> TypeName .)
    AND             reduce using rule 2 (Type -> TypeName .)
    TRUE            reduce using rule 2 (Type -> TypeName .)
    FALSE           reduce using rule 2 (Type -> TypeName .)
    TYPECAST        reduce using rule 2 (Type -> TypeName .)
    INTEGER         reduce using rule 2 (Type -> TypeName .)
    OCTAL           reduce using rule 2 (Type -> TypeName .)
    HEX             reduce using rule 2 (Type -> TypeName .)
    RUNE            reduce using rule 2 (Type -> TypeName .)
    FLOAT           reduce using rule 2 (Type -> TypeName .)
    IMAGINARY       reduce using rule 2 (Type -> TypeName .)
    STRING          reduce using rule 2 (Type -> TypeName .)
    RCURL           reduce using rule 2 (Type -> TypeName .)
    CASE            reduce using rule 2 (Type -> TypeName .)
    DEFAULT         reduce using rule 2 (Type -> TypeName .)


state 62

    (11) TypeToken -> RUNE .

    RPAREN          reduce using rule 11 (TypeToken -> RUNE .)
    ASSIGN          reduce using rule 11 (TypeToken -> RUNE .)
    SEMICOLON       reduce using rule 11 (TypeToken -> RUNE .)
    FUNC            reduce using rule 11 (TypeToken -> RUNE .)
    CONST           reduce using rule 11 (TypeToken -> RUNE .)
    TYPE            reduce using rule 11 (TypeToken -> RUNE .)
    VAR             reduce using rule 11 (TypeToken -> RUNE .)
    $end            reduce using rule 11 (TypeToken -> RUNE .)
    RETURN          reduce using rule 11 (TypeToken -> RUNE .)
    BREAK           reduce using rule 11 (TypeToken -> RUNE .)
    CONTINUE        reduce using rule 11 (TypeToken -> RUNE .)
    GOTO            reduce using rule 11 (TypeToken -> RUNE .)
    IF              reduce using rule 11 (TypeToken -> RUNE .)
    FOR             reduce using rule 11 (TypeToken -> RUNE .)
    PRINT           reduce using rule 11 (TypeToken -> RUNE .)
    SCAN            reduce using rule 11 (TypeToken -> RUNE .)
    IDENTIFIER      reduce using rule 11 (TypeToken -> RUNE .)
    SWITCH          reduce using rule 11 (TypeToken -> RUNE .)
    NOT             reduce using rule 11 (TypeToken -> RUNE .)
    PLUS            reduce using rule 11 (TypeToken -> RUNE .)
    MINUS           reduce using rule 11 (TypeToken -> RUNE .)
    STAR            reduce using rule 11 (TypeToken -> RUNE .)
    AND             reduce using rule 11 (TypeToken -> RUNE .)
    LPAREN          reduce using rule 11 (TypeToken -> RUNE .)
    TRUE            reduce using rule 11 (TypeToken -> RUNE .)
    FALSE           reduce using rule 11 (TypeToken -> RUNE .)
    TYPECAST        reduce using rule 11 (TypeToken -> RUNE .)
    LCURL           reduce using rule 11 (TypeToken -> RUNE .)
    INTEGER         reduce using rule 11 (TypeToken -> RUNE .)
    OCTAL           reduce using rule 11 (TypeToken -> RUNE .)
    HEX             reduce using rule 11 (TypeToken -> RUNE .)
    RUNE            reduce using rule 11 (TypeToken -> RUNE .)
    FLOAT           reduce using rule 11 (TypeToken -> RUNE .)
    IMAGINARY       reduce using rule 11 (TypeToken -> RUNE .)
    STRING          reduce using rule 11 (TypeToken -> RUNE .)
    RCURL           reduce using rule 11 (TypeToken -> RUNE .)
    CASE            reduce using rule 11 (TypeToken -> RUNE .)
    DEFAULT         reduce using rule 11 (TypeToken -> RUNE .)
    COMMA           reduce using rule 11 (TypeToken -> RUNE .)


state 63

    (100) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             shift and go to state 117


state 64

    (16) TypeLit -> StructType .

    COMMA           reduce using rule 16 (TypeLit -> StructType .)
    RPAREN          reduce using rule 16 (TypeLit -> StructType .)
    LPAREN          reduce using rule 16 (TypeLit -> StructType .)
    LCURL           reduce using rule 16 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 16 (TypeLit -> StructType .)
    FUNC            reduce using rule 16 (TypeLit -> StructType .)
    CONST           reduce using rule 16 (TypeLit -> StructType .)
    TYPE            reduce using rule 16 (TypeLit -> StructType .)
    VAR             reduce using rule 16 (TypeLit -> StructType .)
    $end            reduce using rule 16 (TypeLit -> StructType .)
    ASSIGN          reduce using rule 16 (TypeLit -> StructType .)
    RETURN          reduce using rule 16 (TypeLit -> StructType .)
    BREAK           reduce using rule 16 (TypeLit -> StructType .)
    CONTINUE        reduce using rule 16 (TypeLit -> StructType .)
    GOTO            reduce using rule 16 (TypeLit -> StructType .)
    IF              reduce using rule 16 (TypeLit -> StructType .)
    FOR             reduce using rule 16 (TypeLit -> StructType .)
    PRINT           reduce using rule 16 (TypeLit -> StructType .)
    SCAN            reduce using rule 16 (TypeLit -> StructType .)
    IDENTIFIER      reduce using rule 16 (TypeLit -> StructType .)
    SWITCH          reduce using rule 16 (TypeLit -> StructType .)
    NOT             reduce using rule 16 (TypeLit -> StructType .)
    PLUS            reduce using rule 16 (TypeLit -> StructType .)
    MINUS           reduce using rule 16 (TypeLit -> StructType .)
    STAR            reduce using rule 16 (TypeLit -> StructType .)
    AND             reduce using rule 16 (TypeLit -> StructType .)
    TRUE            reduce using rule 16 (TypeLit -> StructType .)
    FALSE           reduce using rule 16 (TypeLit -> StructType .)
    TYPECAST        reduce using rule 16 (TypeLit -> StructType .)
    INTEGER         reduce using rule 16 (TypeLit -> StructType .)
    OCTAL           reduce using rule 16 (TypeLit -> StructType .)
    HEX             reduce using rule 16 (TypeLit -> StructType .)
    RUNE            reduce using rule 16 (TypeLit -> StructType .)
    FLOAT           reduce using rule 16 (TypeLit -> StructType .)
    IMAGINARY       reduce using rule 16 (TypeLit -> StructType .)
    STRING          reduce using rule 16 (TypeLit -> StructType .)
    RCURL           reduce using rule 16 (TypeLit -> StructType .)
    CASE            reduce using rule 16 (TypeLit -> StructType .)
    DEFAULT         reduce using rule 16 (TypeLit -> StructType .)


state 65

    (13) TypeToken -> STRING .

    RPAREN          reduce using rule 13 (TypeToken -> STRING .)
    ASSIGN          reduce using rule 13 (TypeToken -> STRING .)
    SEMICOLON       reduce using rule 13 (TypeToken -> STRING .)
    FUNC            reduce using rule 13 (TypeToken -> STRING .)
    CONST           reduce using rule 13 (TypeToken -> STRING .)
    TYPE            reduce using rule 13 (TypeToken -> STRING .)
    VAR             reduce using rule 13 (TypeToken -> STRING .)
    $end            reduce using rule 13 (TypeToken -> STRING .)
    RETURN          reduce using rule 13 (TypeToken -> STRING .)
    BREAK           reduce using rule 13 (TypeToken -> STRING .)
    CONTINUE        reduce using rule 13 (TypeToken -> STRING .)
    GOTO            reduce using rule 13 (TypeToken -> STRING .)
    IF              reduce using rule 13 (TypeToken -> STRING .)
    FOR             reduce using rule 13 (TypeToken -> STRING .)
    PRINT           reduce using rule 13 (TypeToken -> STRING .)
    SCAN            reduce using rule 13 (TypeToken -> STRING .)
    IDENTIFIER      reduce using rule 13 (TypeToken -> STRING .)
    SWITCH          reduce using rule 13 (TypeToken -> STRING .)
    NOT             reduce using rule 13 (TypeToken -> STRING .)
    PLUS            reduce using rule 13 (TypeToken -> STRING .)
    MINUS           reduce using rule 13 (TypeToken -> STRING .)
    STAR            reduce using rule 13 (TypeToken -> STRING .)
    AND             reduce using rule 13 (TypeToken -> STRING .)
    LPAREN          reduce using rule 13 (TypeToken -> STRING .)
    TRUE            reduce using rule 13 (TypeToken -> STRING .)
    FALSE           reduce using rule 13 (TypeToken -> STRING .)
    TYPECAST        reduce using rule 13 (TypeToken -> STRING .)
    LCURL           reduce using rule 13 (TypeToken -> STRING .)
    INTEGER         reduce using rule 13 (TypeToken -> STRING .)
    OCTAL           reduce using rule 13 (TypeToken -> STRING .)
    HEX             reduce using rule 13 (TypeToken -> STRING .)
    RUNE            reduce using rule 13 (TypeToken -> STRING .)
    FLOAT           reduce using rule 13 (TypeToken -> STRING .)
    IMAGINARY       reduce using rule 13 (TypeToken -> STRING .)
    STRING          reduce using rule 13 (TypeToken -> STRING .)
    RCURL           reduce using rule 13 (TypeToken -> STRING .)
    CASE            reduce using rule 13 (TypeToken -> STRING .)
    DEFAULT         reduce using rule 13 (TypeToken -> STRING .)
    COMMA           reduce using rule 13 (TypeToken -> STRING .)


state 66

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 118
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 67

    (7) TypeToken -> INT .

    RPAREN          reduce using rule 7 (TypeToken -> INT .)
    ASSIGN          reduce using rule 7 (TypeToken -> INT .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT .)
    FUNC            reduce using rule 7 (TypeToken -> INT .)
    CONST           reduce using rule 7 (TypeToken -> INT .)
    TYPE            reduce using rule 7 (TypeToken -> INT .)
    VAR             reduce using rule 7 (TypeToken -> INT .)
    $end            reduce using rule 7 (TypeToken -> INT .)
    RETURN          reduce using rule 7 (TypeToken -> INT .)
    BREAK           reduce using rule 7 (TypeToken -> INT .)
    CONTINUE        reduce using rule 7 (TypeToken -> INT .)
    GOTO            reduce using rule 7 (TypeToken -> INT .)
    IF              reduce using rule 7 (TypeToken -> INT .)
    FOR             reduce using rule 7 (TypeToken -> INT .)
    PRINT           reduce using rule 7 (TypeToken -> INT .)
    SCAN            reduce using rule 7 (TypeToken -> INT .)
    IDENTIFIER      reduce using rule 7 (TypeToken -> INT .)
    SWITCH          reduce using rule 7 (TypeToken -> INT .)
    NOT             reduce using rule 7 (TypeToken -> INT .)
    PLUS            reduce using rule 7 (TypeToken -> INT .)
    MINUS           reduce using rule 7 (TypeToken -> INT .)
    STAR            reduce using rule 7 (TypeToken -> INT .)
    AND             reduce using rule 7 (TypeToken -> INT .)
    LPAREN          reduce using rule 7 (TypeToken -> INT .)
    TRUE            reduce using rule 7 (TypeToken -> INT .)
    FALSE           reduce using rule 7 (TypeToken -> INT .)
    TYPECAST        reduce using rule 7 (TypeToken -> INT .)
    LCURL           reduce using rule 7 (TypeToken -> INT .)
    INTEGER         reduce using rule 7 (TypeToken -> INT .)
    OCTAL           reduce using rule 7 (TypeToken -> INT .)
    HEX             reduce using rule 7 (TypeToken -> INT .)
    RUNE            reduce using rule 7 (TypeToken -> INT .)
    FLOAT           reduce using rule 7 (TypeToken -> INT .)
    IMAGINARY       reduce using rule 7 (TypeToken -> INT .)
    STRING          reduce using rule 7 (TypeToken -> INT .)
    RCURL           reduce using rule 7 (TypeToken -> INT .)
    CASE            reduce using rule 7 (TypeToken -> INT .)
    DEFAULT         reduce using rule 7 (TypeToken -> INT .)
    COMMA           reduce using rule 7 (TypeToken -> INT .)


state 68

    (8) TypeToken -> FLOAT .

    RPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    ASSIGN          reduce using rule 8 (TypeToken -> FLOAT .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT .)
    FUNC            reduce using rule 8 (TypeToken -> FLOAT .)
    CONST           reduce using rule 8 (TypeToken -> FLOAT .)
    TYPE            reduce using rule 8 (TypeToken -> FLOAT .)
    VAR             reduce using rule 8 (TypeToken -> FLOAT .)
    $end            reduce using rule 8 (TypeToken -> FLOAT .)
    RETURN          reduce using rule 8 (TypeToken -> FLOAT .)
    BREAK           reduce using rule 8 (TypeToken -> FLOAT .)
    CONTINUE        reduce using rule 8 (TypeToken -> FLOAT .)
    GOTO            reduce using rule 8 (TypeToken -> FLOAT .)
    IF              reduce using rule 8 (TypeToken -> FLOAT .)
    FOR             reduce using rule 8 (TypeToken -> FLOAT .)
    PRINT           reduce using rule 8 (TypeToken -> FLOAT .)
    SCAN            reduce using rule 8 (TypeToken -> FLOAT .)
    IDENTIFIER      reduce using rule 8 (TypeToken -> FLOAT .)
    SWITCH          reduce using rule 8 (TypeToken -> FLOAT .)
    NOT             reduce using rule 8 (TypeToken -> FLOAT .)
    PLUS            reduce using rule 8 (TypeToken -> FLOAT .)
    MINUS           reduce using rule 8 (TypeToken -> FLOAT .)
    STAR            reduce using rule 8 (TypeToken -> FLOAT .)
    AND             reduce using rule 8 (TypeToken -> FLOAT .)
    LPAREN          reduce using rule 8 (TypeToken -> FLOAT .)
    TRUE            reduce using rule 8 (TypeToken -> FLOAT .)
    FALSE           reduce using rule 8 (TypeToken -> FLOAT .)
    TYPECAST        reduce using rule 8 (TypeToken -> FLOAT .)
    LCURL           reduce using rule 8 (TypeToken -> FLOAT .)
    INTEGER         reduce using rule 8 (TypeToken -> FLOAT .)
    OCTAL           reduce using rule 8 (TypeToken -> FLOAT .)
    HEX             reduce using rule 8 (TypeToken -> FLOAT .)
    RUNE            reduce using rule 8 (TypeToken -> FLOAT .)
    FLOAT           reduce using rule 8 (TypeToken -> FLOAT .)
    IMAGINARY       reduce using rule 8 (TypeToken -> FLOAT .)
    STRING          reduce using rule 8 (TypeToken -> FLOAT .)
    RCURL           reduce using rule 8 (TypeToken -> FLOAT .)
    CASE            reduce using rule 8 (TypeToken -> FLOAT .)
    DEFAULT         reduce using rule 8 (TypeToken -> FLOAT .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT .)


state 69

    (12) TypeToken -> BOOL .

    RPAREN          reduce using rule 12 (TypeToken -> BOOL .)
    ASSIGN          reduce using rule 12 (TypeToken -> BOOL .)
    SEMICOLON       reduce using rule 12 (TypeToken -> BOOL .)
    FUNC            reduce using rule 12 (TypeToken -> BOOL .)
    CONST           reduce using rule 12 (TypeToken -> BOOL .)
    TYPE            reduce using rule 12 (TypeToken -> BOOL .)
    VAR             reduce using rule 12 (TypeToken -> BOOL .)
    $end            reduce using rule 12 (TypeToken -> BOOL .)
    RETURN          reduce using rule 12 (TypeToken -> BOOL .)
    BREAK           reduce using rule 12 (TypeToken -> BOOL .)
    CONTINUE        reduce using rule 12 (TypeToken -> BOOL .)
    GOTO            reduce using rule 12 (TypeToken -> BOOL .)
    IF              reduce using rule 12 (TypeToken -> BOOL .)
    FOR             reduce using rule 12 (TypeToken -> BOOL .)
    PRINT           reduce using rule 12 (TypeToken -> BOOL .)
    SCAN            reduce using rule 12 (TypeToken -> BOOL .)
    IDENTIFIER      reduce using rule 12 (TypeToken -> BOOL .)
    SWITCH          reduce using rule 12 (TypeToken -> BOOL .)
    NOT             reduce using rule 12 (TypeToken -> BOOL .)
    PLUS            reduce using rule 12 (TypeToken -> BOOL .)
    MINUS           reduce using rule 12 (TypeToken -> BOOL .)
    STAR            reduce using rule 12 (TypeToken -> BOOL .)
    AND             reduce using rule 12 (TypeToken -> BOOL .)
    LPAREN          reduce using rule 12 (TypeToken -> BOOL .)
    TRUE            reduce using rule 12 (TypeToken -> BOOL .)
    FALSE           reduce using rule 12 (TypeToken -> BOOL .)
    TYPECAST        reduce using rule 12 (TypeToken -> BOOL .)
    LCURL           reduce using rule 12 (TypeToken -> BOOL .)
    INTEGER         reduce using rule 12 (TypeToken -> BOOL .)
    OCTAL           reduce using rule 12 (TypeToken -> BOOL .)
    HEX             reduce using rule 12 (TypeToken -> BOOL .)
    RUNE            reduce using rule 12 (TypeToken -> BOOL .)
    FLOAT           reduce using rule 12 (TypeToken -> BOOL .)
    IMAGINARY       reduce using rule 12 (TypeToken -> BOOL .)
    STRING          reduce using rule 12 (TypeToken -> BOOL .)
    RCURL           reduce using rule 12 (TypeToken -> BOOL .)
    CASE            reduce using rule 12 (TypeToken -> BOOL .)
    DEFAULT         reduce using rule 12 (TypeToken -> BOOL .)
    COMMA           reduce using rule 12 (TypeToken -> BOOL .)


state 70

    (17) TypeLit -> PointerType .

    COMMA           reduce using rule 17 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 17 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 17 (TypeLit -> PointerType .)
    LCURL           reduce using rule 17 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 17 (TypeLit -> PointerType .)
    FUNC            reduce using rule 17 (TypeLit -> PointerType .)
    CONST           reduce using rule 17 (TypeLit -> PointerType .)
    TYPE            reduce using rule 17 (TypeLit -> PointerType .)
    VAR             reduce using rule 17 (TypeLit -> PointerType .)
    $end            reduce using rule 17 (TypeLit -> PointerType .)
    ASSIGN          reduce using rule 17 (TypeLit -> PointerType .)
    RETURN          reduce using rule 17 (TypeLit -> PointerType .)
    BREAK           reduce using rule 17 (TypeLit -> PointerType .)
    CONTINUE        reduce using rule 17 (TypeLit -> PointerType .)
    GOTO            reduce using rule 17 (TypeLit -> PointerType .)
    IF              reduce using rule 17 (TypeLit -> PointerType .)
    FOR             reduce using rule 17 (TypeLit -> PointerType .)
    PRINT           reduce using rule 17 (TypeLit -> PointerType .)
    SCAN            reduce using rule 17 (TypeLit -> PointerType .)
    IDENTIFIER      reduce using rule 17 (TypeLit -> PointerType .)
    SWITCH          reduce using rule 17 (TypeLit -> PointerType .)
    NOT             reduce using rule 17 (TypeLit -> PointerType .)
    PLUS            reduce using rule 17 (TypeLit -> PointerType .)
    MINUS           reduce using rule 17 (TypeLit -> PointerType .)
    STAR            reduce using rule 17 (TypeLit -> PointerType .)
    AND             reduce using rule 17 (TypeLit -> PointerType .)
    TRUE            reduce using rule 17 (TypeLit -> PointerType .)
    FALSE           reduce using rule 17 (TypeLit -> PointerType .)
    TYPECAST        reduce using rule 17 (TypeLit -> PointerType .)
    INTEGER         reduce using rule 17 (TypeLit -> PointerType .)
    OCTAL           reduce using rule 17 (TypeLit -> PointerType .)
    HEX             reduce using rule 17 (TypeLit -> PointerType .)
    RUNE            reduce using rule 17 (TypeLit -> PointerType .)
    FLOAT           reduce using rule 17 (TypeLit -> PointerType .)
    IMAGINARY       reduce using rule 17 (TypeLit -> PointerType .)
    STRING          reduce using rule 17 (TypeLit -> PointerType .)
    RCURL           reduce using rule 17 (TypeLit -> PointerType .)
    CASE            reduce using rule 17 (TypeLit -> PointerType .)
    DEFAULT         reduce using rule 17 (TypeLit -> PointerType .)


state 71

    (9) TypeToken -> UINT .

    RPAREN          reduce using rule 9 (TypeToken -> UINT .)
    ASSIGN          reduce using rule 9 (TypeToken -> UINT .)
    SEMICOLON       reduce using rule 9 (TypeToken -> UINT .)
    FUNC            reduce using rule 9 (TypeToken -> UINT .)
    CONST           reduce using rule 9 (TypeToken -> UINT .)
    TYPE            reduce using rule 9 (TypeToken -> UINT .)
    VAR             reduce using rule 9 (TypeToken -> UINT .)
    $end            reduce using rule 9 (TypeToken -> UINT .)
    RETURN          reduce using rule 9 (TypeToken -> UINT .)
    BREAK           reduce using rule 9 (TypeToken -> UINT .)
    CONTINUE        reduce using rule 9 (TypeToken -> UINT .)
    GOTO            reduce using rule 9 (TypeToken -> UINT .)
    IF              reduce using rule 9 (TypeToken -> UINT .)
    FOR             reduce using rule 9 (TypeToken -> UINT .)
    PRINT           reduce using rule 9 (TypeToken -> UINT .)
    SCAN            reduce using rule 9 (TypeToken -> UINT .)
    IDENTIFIER      reduce using rule 9 (TypeToken -> UINT .)
    SWITCH          reduce using rule 9 (TypeToken -> UINT .)
    NOT             reduce using rule 9 (TypeToken -> UINT .)
    PLUS            reduce using rule 9 (TypeToken -> UINT .)
    MINUS           reduce using rule 9 (TypeToken -> UINT .)
    STAR            reduce using rule 9 (TypeToken -> UINT .)
    AND             reduce using rule 9 (TypeToken -> UINT .)
    LPAREN          reduce using rule 9 (TypeToken -> UINT .)
    TRUE            reduce using rule 9 (TypeToken -> UINT .)
    FALSE           reduce using rule 9 (TypeToken -> UINT .)
    TYPECAST        reduce using rule 9 (TypeToken -> UINT .)
    LCURL           reduce using rule 9 (TypeToken -> UINT .)
    INTEGER         reduce using rule 9 (TypeToken -> UINT .)
    OCTAL           reduce using rule 9 (TypeToken -> UINT .)
    HEX             reduce using rule 9 (TypeToken -> UINT .)
    RUNE            reduce using rule 9 (TypeToken -> UINT .)
    FLOAT           reduce using rule 9 (TypeToken -> UINT .)
    IMAGINARY       reduce using rule 9 (TypeToken -> UINT .)
    STRING          reduce using rule 9 (TypeToken -> UINT .)
    RCURL           reduce using rule 9 (TypeToken -> UINT .)
    CASE            reduce using rule 9 (TypeToken -> UINT .)
    DEFAULT         reduce using rule 9 (TypeToken -> UINT .)
    COMMA           reduce using rule 9 (TypeToken -> UINT .)


state 72

    (14) TypeToken -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 119


state 73

    (6) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 6 (TypeName -> QualifiedIdent .)
    FUNC            reduce using rule 6 (TypeName -> QualifiedIdent .)
    CONST           reduce using rule 6 (TypeName -> QualifiedIdent .)
    TYPE            reduce using rule 6 (TypeName -> QualifiedIdent .)
    VAR             reduce using rule 6 (TypeName -> QualifiedIdent .)
    $end            reduce using rule 6 (TypeName -> QualifiedIdent .)
    RETURN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    BREAK           reduce using rule 6 (TypeName -> QualifiedIdent .)
    CONTINUE        reduce using rule 6 (TypeName -> QualifiedIdent .)
    GOTO            reduce using rule 6 (TypeName -> QualifiedIdent .)
    IF              reduce using rule 6 (TypeName -> QualifiedIdent .)
    FOR             reduce using rule 6 (TypeName -> QualifiedIdent .)
    PRINT           reduce using rule 6 (TypeName -> QualifiedIdent .)
    SCAN            reduce using rule 6 (TypeName -> QualifiedIdent .)
    IDENTIFIER      reduce using rule 6 (TypeName -> QualifiedIdent .)
    SWITCH          reduce using rule 6 (TypeName -> QualifiedIdent .)
    NOT             reduce using rule 6 (TypeName -> QualifiedIdent .)
    PLUS            reduce using rule 6 (TypeName -> QualifiedIdent .)
    MINUS           reduce using rule 6 (TypeName -> QualifiedIdent .)
    STAR            reduce using rule 6 (TypeName -> QualifiedIdent .)
    AND             reduce using rule 6 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    TRUE            reduce using rule 6 (TypeName -> QualifiedIdent .)
    FALSE           reduce using rule 6 (TypeName -> QualifiedIdent .)
    TYPECAST        reduce using rule 6 (TypeName -> QualifiedIdent .)
    LCURL           reduce using rule 6 (TypeName -> QualifiedIdent .)
    INTEGER         reduce using rule 6 (TypeName -> QualifiedIdent .)
    OCTAL           reduce using rule 6 (TypeName -> QualifiedIdent .)
    HEX             reduce using rule 6 (TypeName -> QualifiedIdent .)
    RUNE            reduce using rule 6 (TypeName -> QualifiedIdent .)
    FLOAT           reduce using rule 6 (TypeName -> QualifiedIdent .)
    IMAGINARY       reduce using rule 6 (TypeName -> QualifiedIdent .)
    STRING          reduce using rule 6 (TypeName -> QualifiedIdent .)
    RCURL           reduce using rule 6 (TypeName -> QualifiedIdent .)
    CASE            reduce using rule 6 (TypeName -> QualifiedIdent .)
    DEFAULT         reduce using rule 6 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 6 (TypeName -> QualifiedIdent .)


state 74

    (55) IdentifierRep -> epsilon .

    COMMA           reduce using rule 55 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 55 (IdentifierRep -> epsilon .)
    INT             reduce using rule 55 (IdentifierRep -> epsilon .)
    FLOAT           reduce using rule 55 (IdentifierRep -> epsilon .)
    UINT            reduce using rule 55 (IdentifierRep -> epsilon .)
    COMPLEX         reduce using rule 55 (IdentifierRep -> epsilon .)
    RUNE            reduce using rule 55 (IdentifierRep -> epsilon .)
    BOOL            reduce using rule 55 (IdentifierRep -> epsilon .)
    STRING          reduce using rule 55 (IdentifierRep -> epsilon .)
    TYPE            reduce using rule 55 (IdentifierRep -> epsilon .)
    IDENTIFIER      reduce using rule 55 (IdentifierRep -> epsilon .)
    LSQUARE         reduce using rule 55 (IdentifierRep -> epsilon .)
    STAR            reduce using rule 55 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 55 (IdentifierRep -> epsilon .)
    ASSIGN          reduce using rule 55 (IdentifierRep -> epsilon .)


state 75

    (53) IdentifierList -> IDENTIFIER IdentifierRep .
    (54) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    ASSIGN          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LPAREN          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    INT             reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FLOAT           reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    UINT            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMPLEX         reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    RUNE            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    BOOL            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRING          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPE            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    IDENTIFIER      reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LSQUARE         reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STAR            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 120


state 76

    (74) FunctionDecl -> FUNC FunctionName CreateScope . Function EndScope
    (75) FunctionDecl -> FUNC FunctionName CreateScope . Signature EndScope
    (80) Function -> . Signature FunctionBody
    (29) Signature -> . Parameters TypeOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 124

    Function                       shift and go to state 121
    Parameters                     shift and go to state 122
    Signature                      shift and go to state 123

state 77

    (66) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (67) VarSpecRep -> VarSpecRep . VarSpec SemiColonOpt
    (69) VarSpec -> . IdentifierList Type ExpressionListOpt
    (70) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 125
    IDENTIFIER      shift and go to state 36

    VarSpec                        shift and go to state 126
    IdentifierList                 shift and go to state 42

state 78

    (68) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 68 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 68 (VarSpecRep -> epsilon .)


state 79

    (69) VarSpec -> IdentifierList Type . ExpressionListOpt
    (71) ExpressionListOpt -> . ASSIGN ExpressionList
    (72) ExpressionListOpt -> . epsilon
    (235) epsilon -> .

    ASSIGN          shift and go to state 129
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)
    RPAREN          reduce using rule 235 (epsilon -> .)

    ExpressionListOpt              shift and go to state 128
    epsilon                        shift and go to state 127

state 80

    (70) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 130
    Expression                     shift and go to state 131
    Operand                        shift and go to state 114

state 81

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SemiColonOpt
    (63) TypeSpec -> . TypeDef
    (64) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 132
    IDENTIFIER      shift and go to state 46

    TypeDef                        shift and go to state 43
    TypeSpec                       shift and go to state 133

state 82

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 83

    (64) TypeDef -> IDENTIFIER Type .

    SEMICOLON       reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    FUNC            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    CONST           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    TYPE            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    VAR             reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    $end            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    RETURN          reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    BREAK           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    CONTINUE        reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    GOTO            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    IF              reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    FOR             reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    PRINT           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    SCAN            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    IDENTIFIER      reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    SWITCH          reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    NOT             reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    PLUS            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    MINUS           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    STAR            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    AND             reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    LPAREN          reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    TRUE            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    FALSE           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    TYPECAST        reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    LCURL           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    INTEGER         reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    OCTAL           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    HEX             reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    RUNE            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    FLOAT           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    IMAGINARY       reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    STRING          reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    RCURL           reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    CASE            reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    DEFAULT         reduce using rule 64 (TypeDef -> IDENTIFIER Type .)
    RPAREN          reduce using rule 64 (TypeDef -> IDENTIFIER Type .)


state 84

    (227) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    IMPORT          reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    FUNC            reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    CONST           reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    TYPE            reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    VAR             reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)
    $end            reduce using rule 227 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 85

    (228) ImportSpecRep -> ImportSpecRep ImportSpec . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    RPAREN          reduce using rule 235 (epsilon -> .)
    DOT             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 6
    SemiColonOpt                   shift and go to state 134

state 86

    (50) ConstSpecRep -> ConstSpecRep ConstSpec . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 135
    epsilon                        shift and go to state 6

state 87

    (49) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    FUNC            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    CONST           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    TYPE            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    VAR             reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    $end            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    RETURN          reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    BREAK           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    CONTINUE        reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    GOTO            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    IF              reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    FOR             reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    PRINT           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    SCAN            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    IDENTIFIER      reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    SWITCH          reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    NOT             reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    PLUS            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    MINUS           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    STAR            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    AND             reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    LPAREN          reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    TRUE            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    FALSE           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    TYPECAST        reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    LCURL           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    INTEGER         reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    OCTAL           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    HEX             reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    RUNE            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    FLOAT           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    IMAGINARY       reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    STRING          reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    RCURL           reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    CASE            reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)
    DEFAULT         reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 88

    (28) BaseType -> Type .

    ASSIGN          reduce using rule 28 (BaseType -> Type .)
    SEMICOLON       reduce using rule 28 (BaseType -> Type .)
    FUNC            reduce using rule 28 (BaseType -> Type .)
    CONST           reduce using rule 28 (BaseType -> Type .)
    TYPE            reduce using rule 28 (BaseType -> Type .)
    VAR             reduce using rule 28 (BaseType -> Type .)
    $end            reduce using rule 28 (BaseType -> Type .)
    RETURN          reduce using rule 28 (BaseType -> Type .)
    BREAK           reduce using rule 28 (BaseType -> Type .)
    CONTINUE        reduce using rule 28 (BaseType -> Type .)
    GOTO            reduce using rule 28 (BaseType -> Type .)
    IF              reduce using rule 28 (BaseType -> Type .)
    FOR             reduce using rule 28 (BaseType -> Type .)
    PRINT           reduce using rule 28 (BaseType -> Type .)
    SCAN            reduce using rule 28 (BaseType -> Type .)
    IDENTIFIER      reduce using rule 28 (BaseType -> Type .)
    SWITCH          reduce using rule 28 (BaseType -> Type .)
    NOT             reduce using rule 28 (BaseType -> Type .)
    PLUS            reduce using rule 28 (BaseType -> Type .)
    MINUS           reduce using rule 28 (BaseType -> Type .)
    STAR            reduce using rule 28 (BaseType -> Type .)
    AND             reduce using rule 28 (BaseType -> Type .)
    LPAREN          reduce using rule 28 (BaseType -> Type .)
    TRUE            reduce using rule 28 (BaseType -> Type .)
    FALSE           reduce using rule 28 (BaseType -> Type .)
    TYPECAST        reduce using rule 28 (BaseType -> Type .)
    LCURL           reduce using rule 28 (BaseType -> Type .)
    INTEGER         reduce using rule 28 (BaseType -> Type .)
    OCTAL           reduce using rule 28 (BaseType -> Type .)
    HEX             reduce using rule 28 (BaseType -> Type .)
    RUNE            reduce using rule 28 (BaseType -> Type .)
    FLOAT           reduce using rule 28 (BaseType -> Type .)
    IMAGINARY       reduce using rule 28 (BaseType -> Type .)
    STRING          reduce using rule 28 (BaseType -> Type .)
    RCURL           reduce using rule 28 (BaseType -> Type .)
    CASE            reduce using rule 28 (BaseType -> Type .)
    DEFAULT         reduce using rule 28 (BaseType -> Type .)
    RPAREN          reduce using rule 28 (BaseType -> Type .)
    COMMA           reduce using rule 28 (BaseType -> Type .)


state 89

    (27) PointerType -> STAR BaseType .

    COMMA           reduce using rule 27 (PointerType -> STAR BaseType .)
    RPAREN          reduce using rule 27 (PointerType -> STAR BaseType .)
    ASSIGN          reduce using rule 27 (PointerType -> STAR BaseType .)
    SEMICOLON       reduce using rule 27 (PointerType -> STAR BaseType .)
    FUNC            reduce using rule 27 (PointerType -> STAR BaseType .)
    CONST           reduce using rule 27 (PointerType -> STAR BaseType .)
    TYPE            reduce using rule 27 (PointerType -> STAR BaseType .)
    VAR             reduce using rule 27 (PointerType -> STAR BaseType .)
    $end            reduce using rule 27 (PointerType -> STAR BaseType .)
    RETURN          reduce using rule 27 (PointerType -> STAR BaseType .)
    BREAK           reduce using rule 27 (PointerType -> STAR BaseType .)
    CONTINUE        reduce using rule 27 (PointerType -> STAR BaseType .)
    GOTO            reduce using rule 27 (PointerType -> STAR BaseType .)
    IF              reduce using rule 27 (PointerType -> STAR BaseType .)
    FOR             reduce using rule 27 (PointerType -> STAR BaseType .)
    PRINT           reduce using rule 27 (PointerType -> STAR BaseType .)
    SCAN            reduce using rule 27 (PointerType -> STAR BaseType .)
    IDENTIFIER      reduce using rule 27 (PointerType -> STAR BaseType .)
    SWITCH          reduce using rule 27 (PointerType -> STAR BaseType .)
    NOT             reduce using rule 27 (PointerType -> STAR BaseType .)
    PLUS            reduce using rule 27 (PointerType -> STAR BaseType .)
    MINUS           reduce using rule 27 (PointerType -> STAR BaseType .)
    STAR            reduce using rule 27 (PointerType -> STAR BaseType .)
    AND             reduce using rule 27 (PointerType -> STAR BaseType .)
    LPAREN          reduce using rule 27 (PointerType -> STAR BaseType .)
    TRUE            reduce using rule 27 (PointerType -> STAR BaseType .)
    FALSE           reduce using rule 27 (PointerType -> STAR BaseType .)
    TYPECAST        reduce using rule 27 (PointerType -> STAR BaseType .)
    LCURL           reduce using rule 27 (PointerType -> STAR BaseType .)
    INTEGER         reduce using rule 27 (PointerType -> STAR BaseType .)
    OCTAL           reduce using rule 27 (PointerType -> STAR BaseType .)
    HEX             reduce using rule 27 (PointerType -> STAR BaseType .)
    RUNE            reduce using rule 27 (PointerType -> STAR BaseType .)
    FLOAT           reduce using rule 27 (PointerType -> STAR BaseType .)
    IMAGINARY       reduce using rule 27 (PointerType -> STAR BaseType .)
    STRING          reduce using rule 27 (PointerType -> STAR BaseType .)
    RCURL           reduce using rule 27 (PointerType -> STAR BaseType .)
    CASE            reduce using rule 27 (PointerType -> STAR BaseType .)
    DEFAULT         reduce using rule 27 (PointerType -> STAR BaseType .)


state 90

    (104) PrimaryExpr -> Conversion .

    LSQUARE         reduce using rule 104 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 104 (PrimaryExpr -> Conversion .)
    DOT             reduce using rule 104 (PrimaryExpr -> Conversion .)
    LOGICAL_OR      reduce using rule 104 (PrimaryExpr -> Conversion .)
    LOGICAL_AND     reduce using rule 104 (PrimaryExpr -> Conversion .)
    EQUALS          reduce using rule 104 (PrimaryExpr -> Conversion .)
    NOT_ASSIGN      reduce using rule 104 (PrimaryExpr -> Conversion .)
    LESSER          reduce using rule 104 (PrimaryExpr -> Conversion .)
    GREATER         reduce using rule 104 (PrimaryExpr -> Conversion .)
    LESS_EQUALS     reduce using rule 104 (PrimaryExpr -> Conversion .)
    MORE_EQUALS     reduce using rule 104 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 104 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 104 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 104 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 104 (PrimaryExpr -> Conversion .)
    LSHIFT          reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSHIFT          reduce using rule 104 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 104 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 104 (PrimaryExpr -> Conversion .)
    STAR            reduce using rule 104 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSQUARE         reduce using rule 104 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 104 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 104 (PrimaryExpr -> Conversion .)
    FUNC            reduce using rule 104 (PrimaryExpr -> Conversion .)
    CONST           reduce using rule 104 (PrimaryExpr -> Conversion .)
    TYPE            reduce using rule 104 (PrimaryExpr -> Conversion .)
    VAR             reduce using rule 104 (PrimaryExpr -> Conversion .)
    $end            reduce using rule 104 (PrimaryExpr -> Conversion .)
    RETURN          reduce using rule 104 (PrimaryExpr -> Conversion .)
    BREAK           reduce using rule 104 (PrimaryExpr -> Conversion .)
    CONTINUE        reduce using rule 104 (PrimaryExpr -> Conversion .)
    GOTO            reduce using rule 104 (PrimaryExpr -> Conversion .)
    IF              reduce using rule 104 (PrimaryExpr -> Conversion .)
    FOR             reduce using rule 104 (PrimaryExpr -> Conversion .)
    PRINT           reduce using rule 104 (PrimaryExpr -> Conversion .)
    SCAN            reduce using rule 104 (PrimaryExpr -> Conversion .)
    IDENTIFIER      reduce using rule 104 (PrimaryExpr -> Conversion .)
    SWITCH          reduce using rule 104 (PrimaryExpr -> Conversion .)
    NOT             reduce using rule 104 (PrimaryExpr -> Conversion .)
    TRUE            reduce using rule 104 (PrimaryExpr -> Conversion .)
    FALSE           reduce using rule 104 (PrimaryExpr -> Conversion .)
    TYPECAST        reduce using rule 104 (PrimaryExpr -> Conversion .)
    LCURL           reduce using rule 104 (PrimaryExpr -> Conversion .)
    INTEGER         reduce using rule 104 (PrimaryExpr -> Conversion .)
    OCTAL           reduce using rule 104 (PrimaryExpr -> Conversion .)
    HEX             reduce using rule 104 (PrimaryExpr -> Conversion .)
    RUNE            reduce using rule 104 (PrimaryExpr -> Conversion .)
    FLOAT           reduce using rule 104 (PrimaryExpr -> Conversion .)
    IMAGINARY       reduce using rule 104 (PrimaryExpr -> Conversion .)
    STRING          reduce using rule 104 (PrimaryExpr -> Conversion .)
    RCURL           reduce using rule 104 (PrimaryExpr -> Conversion .)
    CASE            reduce using rule 104 (PrimaryExpr -> Conversion .)
    DEFAULT         reduce using rule 104 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 104 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 104 (PrimaryExpr -> Conversion .)
    INCR            reduce using rule 104 (PrimaryExpr -> Conversion .)
    DECR            reduce using rule 104 (PrimaryExpr -> Conversion .)
    PLUS_ASSIGN     reduce using rule 104 (PrimaryExpr -> Conversion .)
    MINUS_ASSIGN    reduce using rule 104 (PrimaryExpr -> Conversion .)
    STAR_ASSIGN     reduce using rule 104 (PrimaryExpr -> Conversion .)
    DIVIDE_ASSIGN   reduce using rule 104 (PrimaryExpr -> Conversion .)
    MOD_ASSIGN      reduce using rule 104 (PrimaryExpr -> Conversion .)
    AND_ASSIGN      reduce using rule 104 (PrimaryExpr -> Conversion .)
    OR_ASSIGN       reduce using rule 104 (PrimaryExpr -> Conversion .)
    XOR_ASSIGN      reduce using rule 104 (PrimaryExpr -> Conversion .)
    LSHIFT_ASSIGN   reduce using rule 104 (PrimaryExpr -> Conversion .)
    RSHIFT_ASSIGN   reduce using rule 104 (PrimaryExpr -> Conversion .)
    ASSIGN          reduce using rule 104 (PrimaryExpr -> Conversion .)


state 91

    (86) Operand -> LPAREN . Expression RPAREN
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 136

state 92

    (142) UnaryExpr -> UnaryOp . UnaryExpr
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 137
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113

state 93

    (102) PrimaryExpr -> BoolConstant .

    LSQUARE         reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    DOT             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LOGICAL_OR      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LOGICAL_AND     reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    EQUALS          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    NOT_ASSIGN      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LESSER          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    GREATER         reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LESS_EQUALS     reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    MORE_EQUALS     reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    OR              reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    XOR             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    MOD             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LSHIFT          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RSHIFT          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    PLUS            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    MINUS           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    STAR            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    AND             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RSQUARE         reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    COMMA           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    SEMICOLON       reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    FUNC            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    CONST           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    TYPE            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    VAR             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    $end            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RETURN          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    BREAK           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    CONTINUE        reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    GOTO            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    IF              reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    FOR             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    PRINT           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    SCAN            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    IDENTIFIER      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    SWITCH          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    NOT             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    TRUE            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    FALSE           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    TYPECAST        reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LCURL           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    INTEGER         reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    OCTAL           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    HEX             reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RUNE            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    FLOAT           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    IMAGINARY       reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    STRING          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RCURL           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    CASE            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    DEFAULT         reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    COLON           reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    INCR            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    DECR            reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    PLUS_ASSIGN     reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    MINUS_ASSIGN    reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    STAR_ASSIGN     reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    DIVIDE_ASSIGN   reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    MOD_ASSIGN      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    AND_ASSIGN      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    OR_ASSIGN       reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    XOR_ASSIGN      reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    LSHIFT_ASSIGN   reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    RSHIFT_ASSIGN   reduce using rule 102 (PrimaryExpr -> BoolConstant .)
    ASSIGN          reduce using rule 102 (PrimaryExpr -> BoolConstant .)


state 94

    (84) Operand -> Literal .

    LSQUARE         reduce using rule 84 (Operand -> Literal .)
    LPAREN          reduce using rule 84 (Operand -> Literal .)
    DOT             reduce using rule 84 (Operand -> Literal .)
    LOGICAL_OR      reduce using rule 84 (Operand -> Literal .)
    LOGICAL_AND     reduce using rule 84 (Operand -> Literal .)
    EQUALS          reduce using rule 84 (Operand -> Literal .)
    NOT_ASSIGN      reduce using rule 84 (Operand -> Literal .)
    LESSER          reduce using rule 84 (Operand -> Literal .)
    GREATER         reduce using rule 84 (Operand -> Literal .)
    LESS_EQUALS     reduce using rule 84 (Operand -> Literal .)
    MORE_EQUALS     reduce using rule 84 (Operand -> Literal .)
    OR              reduce using rule 84 (Operand -> Literal .)
    XOR             reduce using rule 84 (Operand -> Literal .)
    DIVIDE          reduce using rule 84 (Operand -> Literal .)
    MOD             reduce using rule 84 (Operand -> Literal .)
    LSHIFT          reduce using rule 84 (Operand -> Literal .)
    RSHIFT          reduce using rule 84 (Operand -> Literal .)
    PLUS            reduce using rule 84 (Operand -> Literal .)
    MINUS           reduce using rule 84 (Operand -> Literal .)
    STAR            reduce using rule 84 (Operand -> Literal .)
    AND             reduce using rule 84 (Operand -> Literal .)
    RSQUARE         reduce using rule 84 (Operand -> Literal .)
    COMMA           reduce using rule 84 (Operand -> Literal .)
    SEMICOLON       reduce using rule 84 (Operand -> Literal .)
    FUNC            reduce using rule 84 (Operand -> Literal .)
    CONST           reduce using rule 84 (Operand -> Literal .)
    TYPE            reduce using rule 84 (Operand -> Literal .)
    VAR             reduce using rule 84 (Operand -> Literal .)
    $end            reduce using rule 84 (Operand -> Literal .)
    RETURN          reduce using rule 84 (Operand -> Literal .)
    BREAK           reduce using rule 84 (Operand -> Literal .)
    CONTINUE        reduce using rule 84 (Operand -> Literal .)
    GOTO            reduce using rule 84 (Operand -> Literal .)
    IF              reduce using rule 84 (Operand -> Literal .)
    FOR             reduce using rule 84 (Operand -> Literal .)
    PRINT           reduce using rule 84 (Operand -> Literal .)
    SCAN            reduce using rule 84 (Operand -> Literal .)
    IDENTIFIER      reduce using rule 84 (Operand -> Literal .)
    SWITCH          reduce using rule 84 (Operand -> Literal .)
    NOT             reduce using rule 84 (Operand -> Literal .)
    TRUE            reduce using rule 84 (Operand -> Literal .)
    FALSE           reduce using rule 84 (Operand -> Literal .)
    TYPECAST        reduce using rule 84 (Operand -> Literal .)
    LCURL           reduce using rule 84 (Operand -> Literal .)
    INTEGER         reduce using rule 84 (Operand -> Literal .)
    OCTAL           reduce using rule 84 (Operand -> Literal .)
    HEX             reduce using rule 84 (Operand -> Literal .)
    RUNE            reduce using rule 84 (Operand -> Literal .)
    FLOAT           reduce using rule 84 (Operand -> Literal .)
    IMAGINARY       reduce using rule 84 (Operand -> Literal .)
    STRING          reduce using rule 84 (Operand -> Literal .)
    RCURL           reduce using rule 84 (Operand -> Literal .)
    CASE            reduce using rule 84 (Operand -> Literal .)
    DEFAULT         reduce using rule 84 (Operand -> Literal .)
    RPAREN          reduce using rule 84 (Operand -> Literal .)
    COLON           reduce using rule 84 (Operand -> Literal .)
    INCR            reduce using rule 84 (Operand -> Literal .)
    DECR            reduce using rule 84 (Operand -> Literal .)
    PLUS_ASSIGN     reduce using rule 84 (Operand -> Literal .)
    MINUS_ASSIGN    reduce using rule 84 (Operand -> Literal .)
    STAR_ASSIGN     reduce using rule 84 (Operand -> Literal .)
    DIVIDE_ASSIGN   reduce using rule 84 (Operand -> Literal .)
    MOD_ASSIGN      reduce using rule 84 (Operand -> Literal .)
    AND_ASSIGN      reduce using rule 84 (Operand -> Literal .)
    OR_ASSIGN       reduce using rule 84 (Operand -> Literal .)
    XOR_ASSIGN      reduce using rule 84 (Operand -> Literal .)
    LSHIFT_ASSIGN   reduce using rule 84 (Operand -> Literal .)
    RSHIFT_ASSIGN   reduce using rule 84 (Operand -> Literal .)
    ASSIGN          reduce using rule 84 (Operand -> Literal .)


state 95

    (146) UnaryOp -> STAR .

    NOT             reduce using rule 146 (UnaryOp -> STAR .)
    IDENTIFIER      reduce using rule 146 (UnaryOp -> STAR .)
    PLUS            reduce using rule 146 (UnaryOp -> STAR .)
    MINUS           reduce using rule 146 (UnaryOp -> STAR .)
    STAR            reduce using rule 146 (UnaryOp -> STAR .)
    AND             reduce using rule 146 (UnaryOp -> STAR .)
    LPAREN          reduce using rule 146 (UnaryOp -> STAR .)
    TRUE            reduce using rule 146 (UnaryOp -> STAR .)
    FALSE           reduce using rule 146 (UnaryOp -> STAR .)
    TYPECAST        reduce using rule 146 (UnaryOp -> STAR .)
    INTEGER         reduce using rule 146 (UnaryOp -> STAR .)
    OCTAL           reduce using rule 146 (UnaryOp -> STAR .)
    HEX             reduce using rule 146 (UnaryOp -> STAR .)
    RUNE            reduce using rule 146 (UnaryOp -> STAR .)
    FLOAT           reduce using rule 146 (UnaryOp -> STAR .)
    IMAGINARY       reduce using rule 146 (UnaryOp -> STAR .)
    STRING          reduce using rule 146 (UnaryOp -> STAR .)


state 96

    (82) BoolConstant -> TRUE .

    LSQUARE         reduce using rule 82 (BoolConstant -> TRUE .)
    LPAREN          reduce using rule 82 (BoolConstant -> TRUE .)
    DOT             reduce using rule 82 (BoolConstant -> TRUE .)
    COLON           reduce using rule 82 (BoolConstant -> TRUE .)
    LOGICAL_OR      reduce using rule 82 (BoolConstant -> TRUE .)
    LOGICAL_AND     reduce using rule 82 (BoolConstant -> TRUE .)
    EQUALS          reduce using rule 82 (BoolConstant -> TRUE .)
    NOT_ASSIGN      reduce using rule 82 (BoolConstant -> TRUE .)
    LESSER          reduce using rule 82 (BoolConstant -> TRUE .)
    GREATER         reduce using rule 82 (BoolConstant -> TRUE .)
    LESS_EQUALS     reduce using rule 82 (BoolConstant -> TRUE .)
    MORE_EQUALS     reduce using rule 82 (BoolConstant -> TRUE .)
    OR              reduce using rule 82 (BoolConstant -> TRUE .)
    XOR             reduce using rule 82 (BoolConstant -> TRUE .)
    DIVIDE          reduce using rule 82 (BoolConstant -> TRUE .)
    MOD             reduce using rule 82 (BoolConstant -> TRUE .)
    LSHIFT          reduce using rule 82 (BoolConstant -> TRUE .)
    RSHIFT          reduce using rule 82 (BoolConstant -> TRUE .)
    PLUS            reduce using rule 82 (BoolConstant -> TRUE .)
    MINUS           reduce using rule 82 (BoolConstant -> TRUE .)
    STAR            reduce using rule 82 (BoolConstant -> TRUE .)
    AND             reduce using rule 82 (BoolConstant -> TRUE .)
    RSQUARE         reduce using rule 82 (BoolConstant -> TRUE .)
    SEMICOLON       reduce using rule 82 (BoolConstant -> TRUE .)
    RETURN          reduce using rule 82 (BoolConstant -> TRUE .)
    BREAK           reduce using rule 82 (BoolConstant -> TRUE .)
    CONTINUE        reduce using rule 82 (BoolConstant -> TRUE .)
    GOTO            reduce using rule 82 (BoolConstant -> TRUE .)
    IF              reduce using rule 82 (BoolConstant -> TRUE .)
    FOR             reduce using rule 82 (BoolConstant -> TRUE .)
    PRINT           reduce using rule 82 (BoolConstant -> TRUE .)
    SCAN            reduce using rule 82 (BoolConstant -> TRUE .)
    CONST           reduce using rule 82 (BoolConstant -> TRUE .)
    TYPE            reduce using rule 82 (BoolConstant -> TRUE .)
    VAR             reduce using rule 82 (BoolConstant -> TRUE .)
    IDENTIFIER      reduce using rule 82 (BoolConstant -> TRUE .)
    SWITCH          reduce using rule 82 (BoolConstant -> TRUE .)
    NOT             reduce using rule 82 (BoolConstant -> TRUE .)
    TRUE            reduce using rule 82 (BoolConstant -> TRUE .)
    FALSE           reduce using rule 82 (BoolConstant -> TRUE .)
    TYPECAST        reduce using rule 82 (BoolConstant -> TRUE .)
    LCURL           reduce using rule 82 (BoolConstant -> TRUE .)
    INTEGER         reduce using rule 82 (BoolConstant -> TRUE .)
    OCTAL           reduce using rule 82 (BoolConstant -> TRUE .)
    HEX             reduce using rule 82 (BoolConstant -> TRUE .)
    RUNE            reduce using rule 82 (BoolConstant -> TRUE .)
    FLOAT           reduce using rule 82 (BoolConstant -> TRUE .)
    IMAGINARY       reduce using rule 82 (BoolConstant -> TRUE .)
    STRING          reduce using rule 82 (BoolConstant -> TRUE .)
    RCURL           reduce using rule 82 (BoolConstant -> TRUE .)
    CASE            reduce using rule 82 (BoolConstant -> TRUE .)
    DEFAULT         reduce using rule 82 (BoolConstant -> TRUE .)
    COMMA           reduce using rule 82 (BoolConstant -> TRUE .)
    FUNC            reduce using rule 82 (BoolConstant -> TRUE .)
    $end            reduce using rule 82 (BoolConstant -> TRUE .)
    RPAREN          reduce using rule 82 (BoolConstant -> TRUE .)
    INCR            reduce using rule 82 (BoolConstant -> TRUE .)
    DECR            reduce using rule 82 (BoolConstant -> TRUE .)
    PLUS_ASSIGN     reduce using rule 82 (BoolConstant -> TRUE .)
    MINUS_ASSIGN    reduce using rule 82 (BoolConstant -> TRUE .)
    STAR_ASSIGN     reduce using rule 82 (BoolConstant -> TRUE .)
    DIVIDE_ASSIGN   reduce using rule 82 (BoolConstant -> TRUE .)
    MOD_ASSIGN      reduce using rule 82 (BoolConstant -> TRUE .)
    AND_ASSIGN      reduce using rule 82 (BoolConstant -> TRUE .)
    OR_ASSIGN       reduce using rule 82 (BoolConstant -> TRUE .)
    XOR_ASSIGN      reduce using rule 82 (BoolConstant -> TRUE .)
    LSHIFT_ASSIGN   reduce using rule 82 (BoolConstant -> TRUE .)
    RSHIFT_ASSIGN   reduce using rule 82 (BoolConstant -> TRUE .)
    ASSIGN          reduce using rule 82 (BoolConstant -> TRUE .)


state 97

    (145) UnaryOp -> MINUS .

    NOT             reduce using rule 145 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 145 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 145 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 145 (UnaryOp -> MINUS .)
    STAR            reduce using rule 145 (UnaryOp -> MINUS .)
    AND             reduce using rule 145 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 145 (UnaryOp -> MINUS .)
    TRUE            reduce using rule 145 (UnaryOp -> MINUS .)
    FALSE           reduce using rule 145 (UnaryOp -> MINUS .)
    TYPECAST        reduce using rule 145 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 145 (UnaryOp -> MINUS .)
    OCTAL           reduce using rule 145 (UnaryOp -> MINUS .)
    HEX             reduce using rule 145 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 145 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 145 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 145 (UnaryOp -> MINUS .)
    STRING          reduce using rule 145 (UnaryOp -> MINUS .)


state 98

    (85) Operand -> OperandName .

    LSQUARE         reduce using rule 85 (Operand -> OperandName .)
    LPAREN          reduce using rule 85 (Operand -> OperandName .)
    DOT             reduce using rule 85 (Operand -> OperandName .)
    LOGICAL_OR      reduce using rule 85 (Operand -> OperandName .)
    LOGICAL_AND     reduce using rule 85 (Operand -> OperandName .)
    EQUALS          reduce using rule 85 (Operand -> OperandName .)
    NOT_ASSIGN      reduce using rule 85 (Operand -> OperandName .)
    LESSER          reduce using rule 85 (Operand -> OperandName .)
    GREATER         reduce using rule 85 (Operand -> OperandName .)
    LESS_EQUALS     reduce using rule 85 (Operand -> OperandName .)
    MORE_EQUALS     reduce using rule 85 (Operand -> OperandName .)
    OR              reduce using rule 85 (Operand -> OperandName .)
    XOR             reduce using rule 85 (Operand -> OperandName .)
    DIVIDE          reduce using rule 85 (Operand -> OperandName .)
    MOD             reduce using rule 85 (Operand -> OperandName .)
    LSHIFT          reduce using rule 85 (Operand -> OperandName .)
    RSHIFT          reduce using rule 85 (Operand -> OperandName .)
    PLUS            reduce using rule 85 (Operand -> OperandName .)
    MINUS           reduce using rule 85 (Operand -> OperandName .)
    STAR            reduce using rule 85 (Operand -> OperandName .)
    AND             reduce using rule 85 (Operand -> OperandName .)
    RSQUARE         reduce using rule 85 (Operand -> OperandName .)
    COMMA           reduce using rule 85 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 85 (Operand -> OperandName .)
    FUNC            reduce using rule 85 (Operand -> OperandName .)
    CONST           reduce using rule 85 (Operand -> OperandName .)
    TYPE            reduce using rule 85 (Operand -> OperandName .)
    VAR             reduce using rule 85 (Operand -> OperandName .)
    $end            reduce using rule 85 (Operand -> OperandName .)
    RETURN          reduce using rule 85 (Operand -> OperandName .)
    BREAK           reduce using rule 85 (Operand -> OperandName .)
    CONTINUE        reduce using rule 85 (Operand -> OperandName .)
    GOTO            reduce using rule 85 (Operand -> OperandName .)
    IF              reduce using rule 85 (Operand -> OperandName .)
    FOR             reduce using rule 85 (Operand -> OperandName .)
    PRINT           reduce using rule 85 (Operand -> OperandName .)
    SCAN            reduce using rule 85 (Operand -> OperandName .)
    IDENTIFIER      reduce using rule 85 (Operand -> OperandName .)
    SWITCH          reduce using rule 85 (Operand -> OperandName .)
    NOT             reduce using rule 85 (Operand -> OperandName .)
    TRUE            reduce using rule 85 (Operand -> OperandName .)
    FALSE           reduce using rule 85 (Operand -> OperandName .)
    TYPECAST        reduce using rule 85 (Operand -> OperandName .)
    LCURL           reduce using rule 85 (Operand -> OperandName .)
    INTEGER         reduce using rule 85 (Operand -> OperandName .)
    OCTAL           reduce using rule 85 (Operand -> OperandName .)
    HEX             reduce using rule 85 (Operand -> OperandName .)
    RUNE            reduce using rule 85 (Operand -> OperandName .)
    FLOAT           reduce using rule 85 (Operand -> OperandName .)
    IMAGINARY       reduce using rule 85 (Operand -> OperandName .)
    STRING          reduce using rule 85 (Operand -> OperandName .)
    RCURL           reduce using rule 85 (Operand -> OperandName .)
    CASE            reduce using rule 85 (Operand -> OperandName .)
    DEFAULT         reduce using rule 85 (Operand -> OperandName .)
    RPAREN          reduce using rule 85 (Operand -> OperandName .)
    COLON           reduce using rule 85 (Operand -> OperandName .)
    INCR            reduce using rule 85 (Operand -> OperandName .)
    DECR            reduce using rule 85 (Operand -> OperandName .)
    PLUS_ASSIGN     reduce using rule 85 (Operand -> OperandName .)
    MINUS_ASSIGN    reduce using rule 85 (Operand -> OperandName .)
    STAR_ASSIGN     reduce using rule 85 (Operand -> OperandName .)
    DIVIDE_ASSIGN   reduce using rule 85 (Operand -> OperandName .)
    MOD_ASSIGN      reduce using rule 85 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 85 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 85 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 85 (Operand -> OperandName .)
    LSHIFT_ASSIGN   reduce using rule 85 (Operand -> OperandName .)
    RSHIFT_ASSIGN   reduce using rule 85 (Operand -> OperandName .)
    ASSIGN          reduce using rule 85 (Operand -> OperandName .)


state 99

    (144) UnaryOp -> PLUS .

    NOT             reduce using rule 144 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 144 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 144 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 144 (UnaryOp -> PLUS .)
    STAR            reduce using rule 144 (UnaryOp -> PLUS .)
    AND             reduce using rule 144 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 144 (UnaryOp -> PLUS .)
    TRUE            reduce using rule 144 (UnaryOp -> PLUS .)
    FALSE           reduce using rule 144 (UnaryOp -> PLUS .)
    TYPECAST        reduce using rule 144 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 144 (UnaryOp -> PLUS .)
    OCTAL           reduce using rule 144 (UnaryOp -> PLUS .)
    HEX             reduce using rule 144 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 144 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 144 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 144 (UnaryOp -> PLUS .)
    STRING          reduce using rule 144 (UnaryOp -> PLUS .)


state 100

    (92) BasicLit -> C . IMAGINARY

    IMAGINARY       shift and go to state 138


state 101

    (91) BasicLit -> F . FLOAT

    FLOAT           shift and go to state 139


state 102

    (88) BasicLit -> I . INTEGER
    (89) BasicLit -> I . OCTAL
    (90) BasicLit -> I . HEX
    (93) BasicLit -> I . RUNE

    INTEGER         shift and go to state 140
    OCTAL           shift and go to state 143
    HEX             shift and go to state 142
    RUNE            shift and go to state 141


state 103

    (120) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 120 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 120 (Expression -> UnaryExpr .)
    EQUALS          reduce using rule 120 (Expression -> UnaryExpr .)
    NOT_ASSIGN      reduce using rule 120 (Expression -> UnaryExpr .)
    LESSER          reduce using rule 120 (Expression -> UnaryExpr .)
    GREATER         reduce using rule 120 (Expression -> UnaryExpr .)
    LESS_EQUALS     reduce using rule 120 (Expression -> UnaryExpr .)
    MORE_EQUALS     reduce using rule 120 (Expression -> UnaryExpr .)
    OR              reduce using rule 120 (Expression -> UnaryExpr .)
    XOR             reduce using rule 120 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 120 (Expression -> UnaryExpr .)
    MOD             reduce using rule 120 (Expression -> UnaryExpr .)
    LSHIFT          reduce using rule 120 (Expression -> UnaryExpr .)
    RSHIFT          reduce using rule 120 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 120 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 120 (Expression -> UnaryExpr .)
    STAR            reduce using rule 120 (Expression -> UnaryExpr .)
    AND             reduce using rule 120 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 120 (Expression -> UnaryExpr .)
    RCURL           reduce using rule 120 (Expression -> UnaryExpr .)
    RSQUARE         reduce using rule 120 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 120 (Expression -> UnaryExpr .)
    FUNC            reduce using rule 120 (Expression -> UnaryExpr .)
    CONST           reduce using rule 120 (Expression -> UnaryExpr .)
    TYPE            reduce using rule 120 (Expression -> UnaryExpr .)
    VAR             reduce using rule 120 (Expression -> UnaryExpr .)
    $end            reduce using rule 120 (Expression -> UnaryExpr .)
    RETURN          reduce using rule 120 (Expression -> UnaryExpr .)
    BREAK           reduce using rule 120 (Expression -> UnaryExpr .)
    CONTINUE        reduce using rule 120 (Expression -> UnaryExpr .)
    GOTO            reduce using rule 120 (Expression -> UnaryExpr .)
    IF              reduce using rule 120 (Expression -> UnaryExpr .)
    FOR             reduce using rule 120 (Expression -> UnaryExpr .)
    PRINT           reduce using rule 120 (Expression -> UnaryExpr .)
    SCAN            reduce using rule 120 (Expression -> UnaryExpr .)
    IDENTIFIER      reduce using rule 120 (Expression -> UnaryExpr .)
    SWITCH          reduce using rule 120 (Expression -> UnaryExpr .)
    NOT             reduce using rule 120 (Expression -> UnaryExpr .)
    LPAREN          reduce using rule 120 (Expression -> UnaryExpr .)
    TRUE            reduce using rule 120 (Expression -> UnaryExpr .)
    FALSE           reduce using rule 120 (Expression -> UnaryExpr .)
    TYPECAST        reduce using rule 120 (Expression -> UnaryExpr .)
    LCURL           reduce using rule 120 (Expression -> UnaryExpr .)
    INTEGER         reduce using rule 120 (Expression -> UnaryExpr .)
    OCTAL           reduce using rule 120 (Expression -> UnaryExpr .)
    HEX             reduce using rule 120 (Expression -> UnaryExpr .)
    RUNE            reduce using rule 120 (Expression -> UnaryExpr .)
    FLOAT           reduce using rule 120 (Expression -> UnaryExpr .)
    IMAGINARY       reduce using rule 120 (Expression -> UnaryExpr .)
    STRING          reduce using rule 120 (Expression -> UnaryExpr .)
    CASE            reduce using rule 120 (Expression -> UnaryExpr .)
    DEFAULT         reduce using rule 120 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 120 (Expression -> UnaryExpr .)
    COLON           reduce using rule 120 (Expression -> UnaryExpr .)
    INCR            reduce using rule 120 (Expression -> UnaryExpr .)
    DECR            reduce using rule 120 (Expression -> UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 120 (Expression -> UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 120 (Expression -> UnaryExpr .)
    STAR_ASSIGN     reduce using rule 120 (Expression -> UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 120 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 120 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 120 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 120 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 120 (Expression -> UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 120 (Expression -> UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 120 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 120 (Expression -> UnaryExpr .)


state 104

    (143) UnaryExpr -> NOT . UnaryExpr
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 144
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113

state 105

    (94) BasicLit -> S . STRING

    STRING          shift and go to state 145


state 106

    (20) ArrayType -> LSQUARE ArrayLength . RSQUARE ElementType

    RSQUARE         shift and go to state 146


state 107

    (21) ArrayLength -> Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 21 (ArrayLength -> Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 108

    (148) Conversion -> TYPECAST . Type LPAREN Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    Type                           shift and go to state 165
    TypeToken                      shift and go to state 59
    TypeLit                        shift and go to state 60
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 109

    (147) UnaryOp -> AND .

    NOT             reduce using rule 147 (UnaryOp -> AND .)
    IDENTIFIER      reduce using rule 147 (UnaryOp -> AND .)
    PLUS            reduce using rule 147 (UnaryOp -> AND .)
    MINUS           reduce using rule 147 (UnaryOp -> AND .)
    STAR            reduce using rule 147 (UnaryOp -> AND .)
    AND             reduce using rule 147 (UnaryOp -> AND .)
    LPAREN          reduce using rule 147 (UnaryOp -> AND .)
    TRUE            reduce using rule 147 (UnaryOp -> AND .)
    FALSE           reduce using rule 147 (UnaryOp -> AND .)
    TYPECAST        reduce using rule 147 (UnaryOp -> AND .)
    INTEGER         reduce using rule 147 (UnaryOp -> AND .)
    OCTAL           reduce using rule 147 (UnaryOp -> AND .)
    HEX             reduce using rule 147 (UnaryOp -> AND .)
    RUNE            reduce using rule 147 (UnaryOp -> AND .)
    FLOAT           reduce using rule 147 (UnaryOp -> AND .)
    IMAGINARY       reduce using rule 147 (UnaryOp -> AND .)
    STRING          reduce using rule 147 (UnaryOp -> AND .)


state 110

    (109) PrimaryExpr -> IDENTIFIER . LCURL StructFieldList RCURL SemiColonOpt
    (99) OperandName -> IDENTIFIER .

  ! shift/reduce conflict for LCURL resolved as shift
    LCURL           shift and go to state 166
    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)
    FUNC            reduce using rule 99 (OperandName -> IDENTIFIER .)
    CONST           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TYPE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    VAR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    $end            reduce using rule 99 (OperandName -> IDENTIFIER .)
    RETURN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    BREAK           reduce using rule 99 (OperandName -> IDENTIFIER .)
    CONTINUE        reduce using rule 99 (OperandName -> IDENTIFIER .)
    GOTO            reduce using rule 99 (OperandName -> IDENTIFIER .)
    IF              reduce using rule 99 (OperandName -> IDENTIFIER .)
    FOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    PRINT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SCAN            reduce using rule 99 (OperandName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 99 (OperandName -> IDENTIFIER .)
    SWITCH          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    TRUE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    FALSE           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TYPECAST        reduce using rule 99 (OperandName -> IDENTIFIER .)
    INTEGER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    OCTAL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    HEX             reduce using rule 99 (OperandName -> IDENTIFIER .)
    RUNE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    FLOAT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    IMAGINARY       reduce using rule 99 (OperandName -> IDENTIFIER .)
    STRING          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RCURL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    CASE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DEFAULT         reduce using rule 99 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)

  ! LCURL           [ reduce using rule 99 (OperandName -> IDENTIFIER .) ]


state 111

    (83) BoolConstant -> FALSE .

    LSQUARE         reduce using rule 83 (BoolConstant -> FALSE .)
    LPAREN          reduce using rule 83 (BoolConstant -> FALSE .)
    DOT             reduce using rule 83 (BoolConstant -> FALSE .)
    COLON           reduce using rule 83 (BoolConstant -> FALSE .)
    LOGICAL_OR      reduce using rule 83 (BoolConstant -> FALSE .)
    LOGICAL_AND     reduce using rule 83 (BoolConstant -> FALSE .)
    EQUALS          reduce using rule 83 (BoolConstant -> FALSE .)
    NOT_ASSIGN      reduce using rule 83 (BoolConstant -> FALSE .)
    LESSER          reduce using rule 83 (BoolConstant -> FALSE .)
    GREATER         reduce using rule 83 (BoolConstant -> FALSE .)
    LESS_EQUALS     reduce using rule 83 (BoolConstant -> FALSE .)
    MORE_EQUALS     reduce using rule 83 (BoolConstant -> FALSE .)
    OR              reduce using rule 83 (BoolConstant -> FALSE .)
    XOR             reduce using rule 83 (BoolConstant -> FALSE .)
    DIVIDE          reduce using rule 83 (BoolConstant -> FALSE .)
    MOD             reduce using rule 83 (BoolConstant -> FALSE .)
    LSHIFT          reduce using rule 83 (BoolConstant -> FALSE .)
    RSHIFT          reduce using rule 83 (BoolConstant -> FALSE .)
    PLUS            reduce using rule 83 (BoolConstant -> FALSE .)
    MINUS           reduce using rule 83 (BoolConstant -> FALSE .)
    STAR            reduce using rule 83 (BoolConstant -> FALSE .)
    AND             reduce using rule 83 (BoolConstant -> FALSE .)
    RSQUARE         reduce using rule 83 (BoolConstant -> FALSE .)
    SEMICOLON       reduce using rule 83 (BoolConstant -> FALSE .)
    RETURN          reduce using rule 83 (BoolConstant -> FALSE .)
    BREAK           reduce using rule 83 (BoolConstant -> FALSE .)
    CONTINUE        reduce using rule 83 (BoolConstant -> FALSE .)
    GOTO            reduce using rule 83 (BoolConstant -> FALSE .)
    IF              reduce using rule 83 (BoolConstant -> FALSE .)
    FOR             reduce using rule 83 (BoolConstant -> FALSE .)
    PRINT           reduce using rule 83 (BoolConstant -> FALSE .)
    SCAN            reduce using rule 83 (BoolConstant -> FALSE .)
    CONST           reduce using rule 83 (BoolConstant -> FALSE .)
    TYPE            reduce using rule 83 (BoolConstant -> FALSE .)
    VAR             reduce using rule 83 (BoolConstant -> FALSE .)
    IDENTIFIER      reduce using rule 83 (BoolConstant -> FALSE .)
    SWITCH          reduce using rule 83 (BoolConstant -> FALSE .)
    NOT             reduce using rule 83 (BoolConstant -> FALSE .)
    TRUE            reduce using rule 83 (BoolConstant -> FALSE .)
    FALSE           reduce using rule 83 (BoolConstant -> FALSE .)
    TYPECAST        reduce using rule 83 (BoolConstant -> FALSE .)
    LCURL           reduce using rule 83 (BoolConstant -> FALSE .)
    INTEGER         reduce using rule 83 (BoolConstant -> FALSE .)
    OCTAL           reduce using rule 83 (BoolConstant -> FALSE .)
    HEX             reduce using rule 83 (BoolConstant -> FALSE .)
    RUNE            reduce using rule 83 (BoolConstant -> FALSE .)
    FLOAT           reduce using rule 83 (BoolConstant -> FALSE .)
    IMAGINARY       reduce using rule 83 (BoolConstant -> FALSE .)
    STRING          reduce using rule 83 (BoolConstant -> FALSE .)
    RCURL           reduce using rule 83 (BoolConstant -> FALSE .)
    CASE            reduce using rule 83 (BoolConstant -> FALSE .)
    DEFAULT         reduce using rule 83 (BoolConstant -> FALSE .)
    COMMA           reduce using rule 83 (BoolConstant -> FALSE .)
    FUNC            reduce using rule 83 (BoolConstant -> FALSE .)
    $end            reduce using rule 83 (BoolConstant -> FALSE .)
    RPAREN          reduce using rule 83 (BoolConstant -> FALSE .)
    INCR            reduce using rule 83 (BoolConstant -> FALSE .)
    DECR            reduce using rule 83 (BoolConstant -> FALSE .)
    PLUS_ASSIGN     reduce using rule 83 (BoolConstant -> FALSE .)
    MINUS_ASSIGN    reduce using rule 83 (BoolConstant -> FALSE .)
    STAR_ASSIGN     reduce using rule 83 (BoolConstant -> FALSE .)
    DIVIDE_ASSIGN   reduce using rule 83 (BoolConstant -> FALSE .)
    MOD_ASSIGN      reduce using rule 83 (BoolConstant -> FALSE .)
    AND_ASSIGN      reduce using rule 83 (BoolConstant -> FALSE .)
    OR_ASSIGN       reduce using rule 83 (BoolConstant -> FALSE .)
    XOR_ASSIGN      reduce using rule 83 (BoolConstant -> FALSE .)
    LSHIFT_ASSIGN   reduce using rule 83 (BoolConstant -> FALSE .)
    RSHIFT_ASSIGN   reduce using rule 83 (BoolConstant -> FALSE .)
    ASSIGN          reduce using rule 83 (BoolConstant -> FALSE .)


state 112

    (87) Literal -> BasicLit .

    LSQUARE         reduce using rule 87 (Literal -> BasicLit .)
    LPAREN          reduce using rule 87 (Literal -> BasicLit .)
    DOT             reduce using rule 87 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 87 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 87 (Literal -> BasicLit .)
    EQUALS          reduce using rule 87 (Literal -> BasicLit .)
    NOT_ASSIGN      reduce using rule 87 (Literal -> BasicLit .)
    LESSER          reduce using rule 87 (Literal -> BasicLit .)
    GREATER         reduce using rule 87 (Literal -> BasicLit .)
    LESS_EQUALS     reduce using rule 87 (Literal -> BasicLit .)
    MORE_EQUALS     reduce using rule 87 (Literal -> BasicLit .)
    OR              reduce using rule 87 (Literal -> BasicLit .)
    XOR             reduce using rule 87 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 87 (Literal -> BasicLit .)
    MOD             reduce using rule 87 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 87 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 87 (Literal -> BasicLit .)
    PLUS            reduce using rule 87 (Literal -> BasicLit .)
    MINUS           reduce using rule 87 (Literal -> BasicLit .)
    STAR            reduce using rule 87 (Literal -> BasicLit .)
    AND             reduce using rule 87 (Literal -> BasicLit .)
    RSQUARE         reduce using rule 87 (Literal -> BasicLit .)
    COMMA           reduce using rule 87 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 87 (Literal -> BasicLit .)
    FUNC            reduce using rule 87 (Literal -> BasicLit .)
    CONST           reduce using rule 87 (Literal -> BasicLit .)
    TYPE            reduce using rule 87 (Literal -> BasicLit .)
    VAR             reduce using rule 87 (Literal -> BasicLit .)
    $end            reduce using rule 87 (Literal -> BasicLit .)
    RETURN          reduce using rule 87 (Literal -> BasicLit .)
    BREAK           reduce using rule 87 (Literal -> BasicLit .)
    CONTINUE        reduce using rule 87 (Literal -> BasicLit .)
    GOTO            reduce using rule 87 (Literal -> BasicLit .)
    IF              reduce using rule 87 (Literal -> BasicLit .)
    FOR             reduce using rule 87 (Literal -> BasicLit .)
    PRINT           reduce using rule 87 (Literal -> BasicLit .)
    SCAN            reduce using rule 87 (Literal -> BasicLit .)
    IDENTIFIER      reduce using rule 87 (Literal -> BasicLit .)
    SWITCH          reduce using rule 87 (Literal -> BasicLit .)
    NOT             reduce using rule 87 (Literal -> BasicLit .)
    TRUE            reduce using rule 87 (Literal -> BasicLit .)
    FALSE           reduce using rule 87 (Literal -> BasicLit .)
    TYPECAST        reduce using rule 87 (Literal -> BasicLit .)
    LCURL           reduce using rule 87 (Literal -> BasicLit .)
    INTEGER         reduce using rule 87 (Literal -> BasicLit .)
    OCTAL           reduce using rule 87 (Literal -> BasicLit .)
    HEX             reduce using rule 87 (Literal -> BasicLit .)
    RUNE            reduce using rule 87 (Literal -> BasicLit .)
    FLOAT           reduce using rule 87 (Literal -> BasicLit .)
    IMAGINARY       reduce using rule 87 (Literal -> BasicLit .)
    STRING          reduce using rule 87 (Literal -> BasicLit .)
    RCURL           reduce using rule 87 (Literal -> BasicLit .)
    CASE            reduce using rule 87 (Literal -> BasicLit .)
    DEFAULT         reduce using rule 87 (Literal -> BasicLit .)
    RPAREN          reduce using rule 87 (Literal -> BasicLit .)
    COLON           reduce using rule 87 (Literal -> BasicLit .)
    INCR            reduce using rule 87 (Literal -> BasicLit .)
    DECR            reduce using rule 87 (Literal -> BasicLit .)
    PLUS_ASSIGN     reduce using rule 87 (Literal -> BasicLit .)
    MINUS_ASSIGN    reduce using rule 87 (Literal -> BasicLit .)
    STAR_ASSIGN     reduce using rule 87 (Literal -> BasicLit .)
    DIVIDE_ASSIGN   reduce using rule 87 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 87 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 87 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 87 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 87 (Literal -> BasicLit .)
    LSHIFT_ASSIGN   reduce using rule 87 (Literal -> BasicLit .)
    RSHIFT_ASSIGN   reduce using rule 87 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 87 (Literal -> BasicLit .)


state 113

    (141) UnaryExpr -> PrimaryExpr .
    (103) PrimaryExpr -> PrimaryExpr . Selector
    (105) PrimaryExpr -> PrimaryExpr . LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> PrimaryExpr . Slice
    (107) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (108) PrimaryExpr -> PrimaryExpr . LPAREN ExpressionListTypeOpt RPAREN
    (114) Selector -> . DOT IDENTIFIER
    (115) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (116) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (117) TypeAssertion -> . DOT LPAREN Type RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    LOGICAL_OR      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    EQUALS          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    NOT_ASSIGN      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LESSER          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    GREATER         reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LESS_EQUALS     reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    MORE_EQUALS     reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LSHIFT          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RSHIFT          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    STAR            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RSQUARE         reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    FUNC            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    CONST           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    TYPE            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    VAR             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    $end            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RETURN          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    BREAK           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    CONTINUE        reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    GOTO            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    IF              reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    FOR             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    PRINT           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    SCAN            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    IDENTIFIER      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    SWITCH          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    NOT             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    TRUE            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    FALSE           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    TYPECAST        reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LCURL           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    INTEGER         reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    OCTAL           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    HEX             reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RUNE            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    FLOAT           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    IMAGINARY       reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    STRING          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RCURL           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    CASE            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    DEFAULT         reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    INCR            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    DECR            reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    PLUS_ASSIGN     reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    MINUS_ASSIGN    reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    STAR_ASSIGN     reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 141 (UnaryExpr -> PrimaryExpr .)
    LSQUARE         shift and go to state 171
    LPAREN          shift and go to state 168
    DOT             shift and go to state 172

  ! LPAREN          [ reduce using rule 141 (UnaryExpr -> PrimaryExpr .) ]

    Slice                          shift and go to state 167
    Selector                       shift and go to state 169
    TypeAssertion                  shift and go to state 170

state 114

    (101) PrimaryExpr -> Operand .

    LSQUARE         reduce using rule 101 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    DOT             reduce using rule 101 (PrimaryExpr -> Operand .)
    LOGICAL_OR      reduce using rule 101 (PrimaryExpr -> Operand .)
    LOGICAL_AND     reduce using rule 101 (PrimaryExpr -> Operand .)
    EQUALS          reduce using rule 101 (PrimaryExpr -> Operand .)
    NOT_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    LESSER          reduce using rule 101 (PrimaryExpr -> Operand .)
    GREATER         reduce using rule 101 (PrimaryExpr -> Operand .)
    LESS_EQUALS     reduce using rule 101 (PrimaryExpr -> Operand .)
    MORE_EQUALS     reduce using rule 101 (PrimaryExpr -> Operand .)
    OR              reduce using rule 101 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 101 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 101 (PrimaryExpr -> Operand .)
    LSHIFT          reduce using rule 101 (PrimaryExpr -> Operand .)
    RSHIFT          reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 101 (PrimaryExpr -> Operand .)
    STAR            reduce using rule 101 (PrimaryExpr -> Operand .)
    AND             reduce using rule 101 (PrimaryExpr -> Operand .)
    RSQUARE         reduce using rule 101 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 101 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 101 (PrimaryExpr -> Operand .)
    FUNC            reduce using rule 101 (PrimaryExpr -> Operand .)
    CONST           reduce using rule 101 (PrimaryExpr -> Operand .)
    TYPE            reduce using rule 101 (PrimaryExpr -> Operand .)
    VAR             reduce using rule 101 (PrimaryExpr -> Operand .)
    $end            reduce using rule 101 (PrimaryExpr -> Operand .)
    RETURN          reduce using rule 101 (PrimaryExpr -> Operand .)
    BREAK           reduce using rule 101 (PrimaryExpr -> Operand .)
    CONTINUE        reduce using rule 101 (PrimaryExpr -> Operand .)
    GOTO            reduce using rule 101 (PrimaryExpr -> Operand .)
    IF              reduce using rule 101 (PrimaryExpr -> Operand .)
    FOR             reduce using rule 101 (PrimaryExpr -> Operand .)
    PRINT           reduce using rule 101 (PrimaryExpr -> Operand .)
    SCAN            reduce using rule 101 (PrimaryExpr -> Operand .)
    IDENTIFIER      reduce using rule 101 (PrimaryExpr -> Operand .)
    SWITCH          reduce using rule 101 (PrimaryExpr -> Operand .)
    NOT             reduce using rule 101 (PrimaryExpr -> Operand .)
    TRUE            reduce using rule 101 (PrimaryExpr -> Operand .)
    FALSE           reduce using rule 101 (PrimaryExpr -> Operand .)
    TYPECAST        reduce using rule 101 (PrimaryExpr -> Operand .)
    LCURL           reduce using rule 101 (PrimaryExpr -> Operand .)
    INTEGER         reduce using rule 101 (PrimaryExpr -> Operand .)
    OCTAL           reduce using rule 101 (PrimaryExpr -> Operand .)
    HEX             reduce using rule 101 (PrimaryExpr -> Operand .)
    RUNE            reduce using rule 101 (PrimaryExpr -> Operand .)
    FLOAT           reduce using rule 101 (PrimaryExpr -> Operand .)
    IMAGINARY       reduce using rule 101 (PrimaryExpr -> Operand .)
    STRING          reduce using rule 101 (PrimaryExpr -> Operand .)
    RCURL           reduce using rule 101 (PrimaryExpr -> Operand .)
    CASE            reduce using rule 101 (PrimaryExpr -> Operand .)
    DEFAULT         reduce using rule 101 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 101 (PrimaryExpr -> Operand .)
    INCR            reduce using rule 101 (PrimaryExpr -> Operand .)
    DECR            reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUS_ASSIGN     reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUS_ASSIGN    reduce using rule 101 (PrimaryExpr -> Operand .)
    STAR_ASSIGN     reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDE_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    MOD_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 101 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    LSHIFT_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    RSHIFT_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 101 (PrimaryExpr -> Operand .)


state 115

    (52) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 173
    Expression                     shift and go to state 131
    Operand                        shift and go to state 114

state 116

    (23) StructType -> CreateFuncScope STRUCT . LCURL FieldDeclRep RCURL EndScope

    LCURL           shift and go to state 174


state 117

    (100) QualifiedIdent -> IDENTIFIER DOT . TypeName
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName

    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63

    TypeName                       shift and go to state 175
    QualifiedIdent                 shift and go to state 73
    TypeToken                      shift and go to state 59

state 118

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 176


state 119

    (14) TypeToken -> TYPE IDENTIFIER .

    RPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    ASSIGN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    SEMICOLON       reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    FUNC            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    CONST           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    TYPE            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    VAR             reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    $end            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    RETURN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    BREAK           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    CONTINUE        reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    GOTO            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    IF              reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    FOR             reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    PRINT           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    SCAN            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    IDENTIFIER      reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    SWITCH          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    NOT             reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    PLUS            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    MINUS           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    STAR            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    AND             reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    LPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    TRUE            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    FALSE           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    TYPECAST        reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    LCURL           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    INTEGER         reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    OCTAL           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    HEX             reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    RUNE            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    FLOAT           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    IMAGINARY       reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    STRING          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    RCURL           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    CASE            reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    DEFAULT         reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)


state 120

    (54) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 177


state 121

    (74) FunctionDecl -> FUNC FunctionName CreateScope Function . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    FUNC            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    $end            reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 178

state 122

    (29) Signature -> Parameters . TypeOpt
    (18) TypeOpt -> . Type
    (19) TypeOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (235) epsilon -> .
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

  ! shift/reduce conflict for TYPE resolved as shift
    LPAREN          shift and go to state 66
    LCURL           reduce using rule 235 (epsilon -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

  ! TYPE            [ reduce using rule 235 (epsilon -> .) ]

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    TypeLit                        shift and go to state 60
    TypeOpt                        shift and go to state 181
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    epsilon                        shift and go to state 180
    PointerType                    shift and go to state 70
    Type                           shift and go to state 179
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 123

    (75) FunctionDecl -> FUNC FunctionName CreateScope Signature . EndScope
    (80) Function -> Signature . FunctionBody
    (78) EndScope -> .
    (81) FunctionBody -> . Block
    (39) Block -> . LCURL StatementList RCURL

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    FUNC            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    $end            reduce using rule 78 (EndScope -> .)
    LCURL           shift and go to state 185

    FunctionBody                   shift and go to state 182
    EndScope                       shift and go to state 183
    Block                          shift and go to state 184

state 124

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . ParameterDecl
    (34) ParametersList -> . ParameterDeclCommaRep
    (235) epsilon -> .
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (35) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (36) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      shift and go to state 191
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    Type                           shift and go to state 189
    CreateFuncScope                shift and go to state 58
    TypeToken                      shift and go to state 59
    epsilon                        shift and go to state 193
    ParameterListOpt               shift and go to state 186
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 60
    IdentifierList                 shift and go to state 187
    PointerType                    shift and go to state 70
    ParametersList                 shift and go to state 190
    ParameterDecl                  shift and go to state 192
    ParameterDeclCommaRep          shift and go to state 188
    QualifiedIdent                 shift and go to state 73

state 125

    (66) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    RETURN          reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    BREAK           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    CONTINUE        reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    GOTO            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    IF              reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    FOR             reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    PRINT           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    SCAN            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    CONST           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    TYPE            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    VAR             reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    IDENTIFIER      reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    SWITCH          reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    NOT             reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    PLUS            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    MINUS           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    STAR            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    AND             reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    LPAREN          reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    TRUE            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    FALSE           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    TYPECAST        reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    LCURL           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    INTEGER         reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    OCTAL           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    HEX             reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    RUNE            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    FLOAT           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    IMAGINARY       reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    STRING          reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    RCURL           reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    CASE            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    DEFAULT         reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    FUNC            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)
    $end            reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 126

    (67) VarSpecRep -> VarSpecRep VarSpec . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 194
    epsilon                        shift and go to state 6

state 127

    (72) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 72 (ExpressionListOpt -> epsilon .)
    FUNC            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    CONST           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    TYPE            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    VAR             reduce using rule 72 (ExpressionListOpt -> epsilon .)
    $end            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    RETURN          reduce using rule 72 (ExpressionListOpt -> epsilon .)
    BREAK           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    CONTINUE        reduce using rule 72 (ExpressionListOpt -> epsilon .)
    GOTO            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    IF              reduce using rule 72 (ExpressionListOpt -> epsilon .)
    FOR             reduce using rule 72 (ExpressionListOpt -> epsilon .)
    PRINT           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    SCAN            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    IDENTIFIER      reduce using rule 72 (ExpressionListOpt -> epsilon .)
    SWITCH          reduce using rule 72 (ExpressionListOpt -> epsilon .)
    NOT             reduce using rule 72 (ExpressionListOpt -> epsilon .)
    PLUS            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    MINUS           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    STAR            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    AND             reduce using rule 72 (ExpressionListOpt -> epsilon .)
    LPAREN          reduce using rule 72 (ExpressionListOpt -> epsilon .)
    TRUE            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    FALSE           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    TYPECAST        reduce using rule 72 (ExpressionListOpt -> epsilon .)
    LCURL           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    INTEGER         reduce using rule 72 (ExpressionListOpt -> epsilon .)
    OCTAL           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    HEX             reduce using rule 72 (ExpressionListOpt -> epsilon .)
    RUNE            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    FLOAT           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    IMAGINARY       reduce using rule 72 (ExpressionListOpt -> epsilon .)
    STRING          reduce using rule 72 (ExpressionListOpt -> epsilon .)
    RCURL           reduce using rule 72 (ExpressionListOpt -> epsilon .)
    CASE            reduce using rule 72 (ExpressionListOpt -> epsilon .)
    DEFAULT         reduce using rule 72 (ExpressionListOpt -> epsilon .)
    RPAREN          reduce using rule 72 (ExpressionListOpt -> epsilon .)


state 128

    (69) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    RPAREN          reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    IDENTIFIER      reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    FUNC            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    CONST           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    TYPE            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    VAR             reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    $end            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    RETURN          reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    BREAK           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    CONTINUE        reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    GOTO            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    IF              reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    FOR             reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    PRINT           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    SCAN            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    SWITCH          reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    NOT             reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    PLUS            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    MINUS           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    STAR            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    AND             reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    LPAREN          reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    TRUE            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    FALSE           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    TYPECAST        reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    LCURL           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    INTEGER         reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    OCTAL           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    HEX             reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    RUNE            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    FLOAT           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    IMAGINARY       reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    STRING          reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    RCURL           reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    CASE            reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)
    DEFAULT         reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 129

    (71) ExpressionListOpt -> ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 195
    Expression                     shift and go to state 131
    Operand                        shift and go to state 114

state 130

    (70) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    RPAREN          reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    IDENTIFIER      reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    FUNC            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    CONST           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    TYPE            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    VAR             reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    $end            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    RETURN          reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    BREAK           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    CONTINUE        reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    GOTO            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    IF              reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    FOR             reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    PRINT           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    SCAN            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    SWITCH          reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    NOT             reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    PLUS            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    MINUS           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    STAR            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    AND             reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    LPAREN          reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    TRUE            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    FALSE           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    TYPECAST        reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    LCURL           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    INTEGER         reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    OCTAL           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    HEX             reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    RUNE            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    FLOAT           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    IMAGINARY       reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    STRING          reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    RCURL           reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    CASE            reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)
    DEFAULT         reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 131

    (56) ExpressionList -> Expression . ExpressionRep
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (235) epsilon -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    COMMA           reduce using rule 235 (epsilon -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)
    RPAREN          reduce using rule 235 (epsilon -> .)

  ! PLUS            [ reduce using rule 235 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 235 (epsilon -> .) ]
  ! STAR            [ reduce using rule 235 (epsilon -> .) ]
  ! AND             [ reduce using rule 235 (epsilon -> .) ]

    epsilon                        shift and go to state 197
    ExpressionRep                  shift and go to state 196

state 132

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    RETURN          reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    BREAK           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    CONTINUE        reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    GOTO            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    IF              reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    FOR             reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    PRINT           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    SCAN            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    CONST           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    TYPE            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    VAR             reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    IDENTIFIER      reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    SWITCH          reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    NOT             reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    PLUS            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    MINUS           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    STAR            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    AND             reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    LPAREN          reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    TRUE            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    FALSE           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    TYPECAST        reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    LCURL           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    INTEGER         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    OCTAL           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    HEX             reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    RUNE            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    FLOAT           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    IMAGINARY       reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    STRING          reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    RCURL           reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    CASE            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    DEFAULT         reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    FUNC            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)
    $end            reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 133

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    RPAREN          reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 198
    epsilon                        shift and go to state 6

state 134

    (228) ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt .

    RPAREN          reduce using rule 228 (ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt .)
    DOT             reduce using rule 228 (ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt .)
    IDENTIFIER      reduce using rule 228 (ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt .)
    STRING          reduce using rule 228 (ImportSpecRep -> ImportSpecRep ImportSpec SemiColonOpt .)


state 135

    (50) ConstSpecRep -> ConstSpecRep ConstSpec SemiColonOpt .

    RPAREN          reduce using rule 50 (ConstSpecRep -> ConstSpecRep ConstSpec SemiColonOpt .)
    IDENTIFIER      reduce using rule 50 (ConstSpecRep -> ConstSpecRep ConstSpec SemiColonOpt .)


state 136

    (86) Operand -> LPAREN Expression . RPAREN
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 199
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 137

    (142) UnaryExpr -> UnaryOp UnaryExpr .

    LOGICAL_OR      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LOGICAL_AND     reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUALS          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOT_ASSIGN      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSER          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATER         reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS_EQUALS     reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    MORE_EQUALS     reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSQUARE         reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    FUNC            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    CONST           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    TYPE            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    VAR             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    $end            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RETURN          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    BREAK           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    CONTINUE        reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    GOTO            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    IF              reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    FOR             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    PRINT           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    SCAN            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    IDENTIFIER      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    SWITCH          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOT             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LPAREN          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    TRUE            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    FALSE           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    TYPECAST        reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LCURL           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    INTEGER         reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    OCTAL           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    HEX             reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RUNE            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    FLOAT           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    IMAGINARY       reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    STRING          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RCURL           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    CASE            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    DEFAULT         reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    INCR            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    DECR            reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR_ASSIGN     reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 142 (UnaryExpr -> UnaryOp UnaryExpr .)


state 138

    (92) BasicLit -> C IMAGINARY .

    LSQUARE         reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LPAREN          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    DOT             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LOGICAL_OR      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LOGICAL_AND     reduce using rule 92 (BasicLit -> C IMAGINARY .)
    EQUALS          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    NOT_ASSIGN      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LESSER          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    GREATER         reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LESS_EQUALS     reduce using rule 92 (BasicLit -> C IMAGINARY .)
    MORE_EQUALS     reduce using rule 92 (BasicLit -> C IMAGINARY .)
    OR              reduce using rule 92 (BasicLit -> C IMAGINARY .)
    XOR             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    DIVIDE          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    MOD             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LSHIFT          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RSHIFT          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    PLUS            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    MINUS           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    STAR            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    AND             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    COMMA           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    SEMICOLON       reduce using rule 92 (BasicLit -> C IMAGINARY .)
    FUNC            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    CONST           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    TYPE            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    VAR             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    $end            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RETURN          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    BREAK           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    CONTINUE        reduce using rule 92 (BasicLit -> C IMAGINARY .)
    GOTO            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    IF              reduce using rule 92 (BasicLit -> C IMAGINARY .)
    FOR             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    PRINT           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    SCAN            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    IDENTIFIER      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    SWITCH          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    NOT             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    TRUE            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    FALSE           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    TYPECAST        reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LCURL           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    INTEGER         reduce using rule 92 (BasicLit -> C IMAGINARY .)
    OCTAL           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    HEX             reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RUNE            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    FLOAT           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    IMAGINARY       reduce using rule 92 (BasicLit -> C IMAGINARY .)
    STRING          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RCURL           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    CASE            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    DEFAULT         reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RPAREN          reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RSQUARE         reduce using rule 92 (BasicLit -> C IMAGINARY .)
    COLON           reduce using rule 92 (BasicLit -> C IMAGINARY .)
    INCR            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    DECR            reduce using rule 92 (BasicLit -> C IMAGINARY .)
    PLUS_ASSIGN     reduce using rule 92 (BasicLit -> C IMAGINARY .)
    MINUS_ASSIGN    reduce using rule 92 (BasicLit -> C IMAGINARY .)
    STAR_ASSIGN     reduce using rule 92 (BasicLit -> C IMAGINARY .)
    DIVIDE_ASSIGN   reduce using rule 92 (BasicLit -> C IMAGINARY .)
    MOD_ASSIGN      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    AND_ASSIGN      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    OR_ASSIGN       reduce using rule 92 (BasicLit -> C IMAGINARY .)
    XOR_ASSIGN      reduce using rule 92 (BasicLit -> C IMAGINARY .)
    LSHIFT_ASSIGN   reduce using rule 92 (BasicLit -> C IMAGINARY .)
    RSHIFT_ASSIGN   reduce using rule 92 (BasicLit -> C IMAGINARY .)
    ASSIGN          reduce using rule 92 (BasicLit -> C IMAGINARY .)


state 139

    (91) BasicLit -> F FLOAT .

    LSQUARE         reduce using rule 91 (BasicLit -> F FLOAT .)
    LPAREN          reduce using rule 91 (BasicLit -> F FLOAT .)
    DOT             reduce using rule 91 (BasicLit -> F FLOAT .)
    LOGICAL_OR      reduce using rule 91 (BasicLit -> F FLOAT .)
    LOGICAL_AND     reduce using rule 91 (BasicLit -> F FLOAT .)
    EQUALS          reduce using rule 91 (BasicLit -> F FLOAT .)
    NOT_ASSIGN      reduce using rule 91 (BasicLit -> F FLOAT .)
    LESSER          reduce using rule 91 (BasicLit -> F FLOAT .)
    GREATER         reduce using rule 91 (BasicLit -> F FLOAT .)
    LESS_EQUALS     reduce using rule 91 (BasicLit -> F FLOAT .)
    MORE_EQUALS     reduce using rule 91 (BasicLit -> F FLOAT .)
    OR              reduce using rule 91 (BasicLit -> F FLOAT .)
    XOR             reduce using rule 91 (BasicLit -> F FLOAT .)
    DIVIDE          reduce using rule 91 (BasicLit -> F FLOAT .)
    MOD             reduce using rule 91 (BasicLit -> F FLOAT .)
    LSHIFT          reduce using rule 91 (BasicLit -> F FLOAT .)
    RSHIFT          reduce using rule 91 (BasicLit -> F FLOAT .)
    PLUS            reduce using rule 91 (BasicLit -> F FLOAT .)
    MINUS           reduce using rule 91 (BasicLit -> F FLOAT .)
    STAR            reduce using rule 91 (BasicLit -> F FLOAT .)
    AND             reduce using rule 91 (BasicLit -> F FLOAT .)
    COMMA           reduce using rule 91 (BasicLit -> F FLOAT .)
    SEMICOLON       reduce using rule 91 (BasicLit -> F FLOAT .)
    FUNC            reduce using rule 91 (BasicLit -> F FLOAT .)
    CONST           reduce using rule 91 (BasicLit -> F FLOAT .)
    TYPE            reduce using rule 91 (BasicLit -> F FLOAT .)
    VAR             reduce using rule 91 (BasicLit -> F FLOAT .)
    $end            reduce using rule 91 (BasicLit -> F FLOAT .)
    RETURN          reduce using rule 91 (BasicLit -> F FLOAT .)
    BREAK           reduce using rule 91 (BasicLit -> F FLOAT .)
    CONTINUE        reduce using rule 91 (BasicLit -> F FLOAT .)
    GOTO            reduce using rule 91 (BasicLit -> F FLOAT .)
    IF              reduce using rule 91 (BasicLit -> F FLOAT .)
    FOR             reduce using rule 91 (BasicLit -> F FLOAT .)
    PRINT           reduce using rule 91 (BasicLit -> F FLOAT .)
    SCAN            reduce using rule 91 (BasicLit -> F FLOAT .)
    IDENTIFIER      reduce using rule 91 (BasicLit -> F FLOAT .)
    SWITCH          reduce using rule 91 (BasicLit -> F FLOAT .)
    NOT             reduce using rule 91 (BasicLit -> F FLOAT .)
    TRUE            reduce using rule 91 (BasicLit -> F FLOAT .)
    FALSE           reduce using rule 91 (BasicLit -> F FLOAT .)
    TYPECAST        reduce using rule 91 (BasicLit -> F FLOAT .)
    LCURL           reduce using rule 91 (BasicLit -> F FLOAT .)
    INTEGER         reduce using rule 91 (BasicLit -> F FLOAT .)
    OCTAL           reduce using rule 91 (BasicLit -> F FLOAT .)
    HEX             reduce using rule 91 (BasicLit -> F FLOAT .)
    RUNE            reduce using rule 91 (BasicLit -> F FLOAT .)
    FLOAT           reduce using rule 91 (BasicLit -> F FLOAT .)
    IMAGINARY       reduce using rule 91 (BasicLit -> F FLOAT .)
    STRING          reduce using rule 91 (BasicLit -> F FLOAT .)
    RCURL           reduce using rule 91 (BasicLit -> F FLOAT .)
    CASE            reduce using rule 91 (BasicLit -> F FLOAT .)
    DEFAULT         reduce using rule 91 (BasicLit -> F FLOAT .)
    RPAREN          reduce using rule 91 (BasicLit -> F FLOAT .)
    RSQUARE         reduce using rule 91 (BasicLit -> F FLOAT .)
    COLON           reduce using rule 91 (BasicLit -> F FLOAT .)
    INCR            reduce using rule 91 (BasicLit -> F FLOAT .)
    DECR            reduce using rule 91 (BasicLit -> F FLOAT .)
    PLUS_ASSIGN     reduce using rule 91 (BasicLit -> F FLOAT .)
    MINUS_ASSIGN    reduce using rule 91 (BasicLit -> F FLOAT .)
    STAR_ASSIGN     reduce using rule 91 (BasicLit -> F FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 91 (BasicLit -> F FLOAT .)
    MOD_ASSIGN      reduce using rule 91 (BasicLit -> F FLOAT .)
    AND_ASSIGN      reduce using rule 91 (BasicLit -> F FLOAT .)
    OR_ASSIGN       reduce using rule 91 (BasicLit -> F FLOAT .)
    XOR_ASSIGN      reduce using rule 91 (BasicLit -> F FLOAT .)
    LSHIFT_ASSIGN   reduce using rule 91 (BasicLit -> F FLOAT .)
    RSHIFT_ASSIGN   reduce using rule 91 (BasicLit -> F FLOAT .)
    ASSIGN          reduce using rule 91 (BasicLit -> F FLOAT .)


state 140

    (88) BasicLit -> I INTEGER .

    LSQUARE         reduce using rule 88 (BasicLit -> I INTEGER .)
    LPAREN          reduce using rule 88 (BasicLit -> I INTEGER .)
    DOT             reduce using rule 88 (BasicLit -> I INTEGER .)
    LOGICAL_OR      reduce using rule 88 (BasicLit -> I INTEGER .)
    LOGICAL_AND     reduce using rule 88 (BasicLit -> I INTEGER .)
    EQUALS          reduce using rule 88 (BasicLit -> I INTEGER .)
    NOT_ASSIGN      reduce using rule 88 (BasicLit -> I INTEGER .)
    LESSER          reduce using rule 88 (BasicLit -> I INTEGER .)
    GREATER         reduce using rule 88 (BasicLit -> I INTEGER .)
    LESS_EQUALS     reduce using rule 88 (BasicLit -> I INTEGER .)
    MORE_EQUALS     reduce using rule 88 (BasicLit -> I INTEGER .)
    OR              reduce using rule 88 (BasicLit -> I INTEGER .)
    XOR             reduce using rule 88 (BasicLit -> I INTEGER .)
    DIVIDE          reduce using rule 88 (BasicLit -> I INTEGER .)
    MOD             reduce using rule 88 (BasicLit -> I INTEGER .)
    LSHIFT          reduce using rule 88 (BasicLit -> I INTEGER .)
    RSHIFT          reduce using rule 88 (BasicLit -> I INTEGER .)
    PLUS            reduce using rule 88 (BasicLit -> I INTEGER .)
    MINUS           reduce using rule 88 (BasicLit -> I INTEGER .)
    STAR            reduce using rule 88 (BasicLit -> I INTEGER .)
    AND             reduce using rule 88 (BasicLit -> I INTEGER .)
    COMMA           reduce using rule 88 (BasicLit -> I INTEGER .)
    SEMICOLON       reduce using rule 88 (BasicLit -> I INTEGER .)
    FUNC            reduce using rule 88 (BasicLit -> I INTEGER .)
    CONST           reduce using rule 88 (BasicLit -> I INTEGER .)
    TYPE            reduce using rule 88 (BasicLit -> I INTEGER .)
    VAR             reduce using rule 88 (BasicLit -> I INTEGER .)
    $end            reduce using rule 88 (BasicLit -> I INTEGER .)
    RETURN          reduce using rule 88 (BasicLit -> I INTEGER .)
    BREAK           reduce using rule 88 (BasicLit -> I INTEGER .)
    CONTINUE        reduce using rule 88 (BasicLit -> I INTEGER .)
    GOTO            reduce using rule 88 (BasicLit -> I INTEGER .)
    IF              reduce using rule 88 (BasicLit -> I INTEGER .)
    FOR             reduce using rule 88 (BasicLit -> I INTEGER .)
    PRINT           reduce using rule 88 (BasicLit -> I INTEGER .)
    SCAN            reduce using rule 88 (BasicLit -> I INTEGER .)
    IDENTIFIER      reduce using rule 88 (BasicLit -> I INTEGER .)
    SWITCH          reduce using rule 88 (BasicLit -> I INTEGER .)
    NOT             reduce using rule 88 (BasicLit -> I INTEGER .)
    TRUE            reduce using rule 88 (BasicLit -> I INTEGER .)
    FALSE           reduce using rule 88 (BasicLit -> I INTEGER .)
    TYPECAST        reduce using rule 88 (BasicLit -> I INTEGER .)
    LCURL           reduce using rule 88 (BasicLit -> I INTEGER .)
    INTEGER         reduce using rule 88 (BasicLit -> I INTEGER .)
    OCTAL           reduce using rule 88 (BasicLit -> I INTEGER .)
    HEX             reduce using rule 88 (BasicLit -> I INTEGER .)
    RUNE            reduce using rule 88 (BasicLit -> I INTEGER .)
    FLOAT           reduce using rule 88 (BasicLit -> I INTEGER .)
    IMAGINARY       reduce using rule 88 (BasicLit -> I INTEGER .)
    STRING          reduce using rule 88 (BasicLit -> I INTEGER .)
    RCURL           reduce using rule 88 (BasicLit -> I INTEGER .)
    CASE            reduce using rule 88 (BasicLit -> I INTEGER .)
    DEFAULT         reduce using rule 88 (BasicLit -> I INTEGER .)
    RPAREN          reduce using rule 88 (BasicLit -> I INTEGER .)
    RSQUARE         reduce using rule 88 (BasicLit -> I INTEGER .)
    COLON           reduce using rule 88 (BasicLit -> I INTEGER .)
    INCR            reduce using rule 88 (BasicLit -> I INTEGER .)
    DECR            reduce using rule 88 (BasicLit -> I INTEGER .)
    PLUS_ASSIGN     reduce using rule 88 (BasicLit -> I INTEGER .)
    MINUS_ASSIGN    reduce using rule 88 (BasicLit -> I INTEGER .)
    STAR_ASSIGN     reduce using rule 88 (BasicLit -> I INTEGER .)
    DIVIDE_ASSIGN   reduce using rule 88 (BasicLit -> I INTEGER .)
    MOD_ASSIGN      reduce using rule 88 (BasicLit -> I INTEGER .)
    AND_ASSIGN      reduce using rule 88 (BasicLit -> I INTEGER .)
    OR_ASSIGN       reduce using rule 88 (BasicLit -> I INTEGER .)
    XOR_ASSIGN      reduce using rule 88 (BasicLit -> I INTEGER .)
    LSHIFT_ASSIGN   reduce using rule 88 (BasicLit -> I INTEGER .)
    RSHIFT_ASSIGN   reduce using rule 88 (BasicLit -> I INTEGER .)
    ASSIGN          reduce using rule 88 (BasicLit -> I INTEGER .)


state 141

    (93) BasicLit -> I RUNE .

    LSQUARE         reduce using rule 93 (BasicLit -> I RUNE .)
    LPAREN          reduce using rule 93 (BasicLit -> I RUNE .)
    DOT             reduce using rule 93 (BasicLit -> I RUNE .)
    LOGICAL_OR      reduce using rule 93 (BasicLit -> I RUNE .)
    LOGICAL_AND     reduce using rule 93 (BasicLit -> I RUNE .)
    EQUALS          reduce using rule 93 (BasicLit -> I RUNE .)
    NOT_ASSIGN      reduce using rule 93 (BasicLit -> I RUNE .)
    LESSER          reduce using rule 93 (BasicLit -> I RUNE .)
    GREATER         reduce using rule 93 (BasicLit -> I RUNE .)
    LESS_EQUALS     reduce using rule 93 (BasicLit -> I RUNE .)
    MORE_EQUALS     reduce using rule 93 (BasicLit -> I RUNE .)
    OR              reduce using rule 93 (BasicLit -> I RUNE .)
    XOR             reduce using rule 93 (BasicLit -> I RUNE .)
    DIVIDE          reduce using rule 93 (BasicLit -> I RUNE .)
    MOD             reduce using rule 93 (BasicLit -> I RUNE .)
    LSHIFT          reduce using rule 93 (BasicLit -> I RUNE .)
    RSHIFT          reduce using rule 93 (BasicLit -> I RUNE .)
    PLUS            reduce using rule 93 (BasicLit -> I RUNE .)
    MINUS           reduce using rule 93 (BasicLit -> I RUNE .)
    STAR            reduce using rule 93 (BasicLit -> I RUNE .)
    AND             reduce using rule 93 (BasicLit -> I RUNE .)
    COMMA           reduce using rule 93 (BasicLit -> I RUNE .)
    SEMICOLON       reduce using rule 93 (BasicLit -> I RUNE .)
    FUNC            reduce using rule 93 (BasicLit -> I RUNE .)
    CONST           reduce using rule 93 (BasicLit -> I RUNE .)
    TYPE            reduce using rule 93 (BasicLit -> I RUNE .)
    VAR             reduce using rule 93 (BasicLit -> I RUNE .)
    $end            reduce using rule 93 (BasicLit -> I RUNE .)
    RETURN          reduce using rule 93 (BasicLit -> I RUNE .)
    BREAK           reduce using rule 93 (BasicLit -> I RUNE .)
    CONTINUE        reduce using rule 93 (BasicLit -> I RUNE .)
    GOTO            reduce using rule 93 (BasicLit -> I RUNE .)
    IF              reduce using rule 93 (BasicLit -> I RUNE .)
    FOR             reduce using rule 93 (BasicLit -> I RUNE .)
    PRINT           reduce using rule 93 (BasicLit -> I RUNE .)
    SCAN            reduce using rule 93 (BasicLit -> I RUNE .)
    IDENTIFIER      reduce using rule 93 (BasicLit -> I RUNE .)
    SWITCH          reduce using rule 93 (BasicLit -> I RUNE .)
    NOT             reduce using rule 93 (BasicLit -> I RUNE .)
    TRUE            reduce using rule 93 (BasicLit -> I RUNE .)
    FALSE           reduce using rule 93 (BasicLit -> I RUNE .)
    TYPECAST        reduce using rule 93 (BasicLit -> I RUNE .)
    LCURL           reduce using rule 93 (BasicLit -> I RUNE .)
    INTEGER         reduce using rule 93 (BasicLit -> I RUNE .)
    OCTAL           reduce using rule 93 (BasicLit -> I RUNE .)
    HEX             reduce using rule 93 (BasicLit -> I RUNE .)
    RUNE            reduce using rule 93 (BasicLit -> I RUNE .)
    FLOAT           reduce using rule 93 (BasicLit -> I RUNE .)
    IMAGINARY       reduce using rule 93 (BasicLit -> I RUNE .)
    STRING          reduce using rule 93 (BasicLit -> I RUNE .)
    RCURL           reduce using rule 93 (BasicLit -> I RUNE .)
    CASE            reduce using rule 93 (BasicLit -> I RUNE .)
    DEFAULT         reduce using rule 93 (BasicLit -> I RUNE .)
    RPAREN          reduce using rule 93 (BasicLit -> I RUNE .)
    RSQUARE         reduce using rule 93 (BasicLit -> I RUNE .)
    COLON           reduce using rule 93 (BasicLit -> I RUNE .)
    INCR            reduce using rule 93 (BasicLit -> I RUNE .)
    DECR            reduce using rule 93 (BasicLit -> I RUNE .)
    PLUS_ASSIGN     reduce using rule 93 (BasicLit -> I RUNE .)
    MINUS_ASSIGN    reduce using rule 93 (BasicLit -> I RUNE .)
    STAR_ASSIGN     reduce using rule 93 (BasicLit -> I RUNE .)
    DIVIDE_ASSIGN   reduce using rule 93 (BasicLit -> I RUNE .)
    MOD_ASSIGN      reduce using rule 93 (BasicLit -> I RUNE .)
    AND_ASSIGN      reduce using rule 93 (BasicLit -> I RUNE .)
    OR_ASSIGN       reduce using rule 93 (BasicLit -> I RUNE .)
    XOR_ASSIGN      reduce using rule 93 (BasicLit -> I RUNE .)
    LSHIFT_ASSIGN   reduce using rule 93 (BasicLit -> I RUNE .)
    RSHIFT_ASSIGN   reduce using rule 93 (BasicLit -> I RUNE .)
    ASSIGN          reduce using rule 93 (BasicLit -> I RUNE .)


state 142

    (90) BasicLit -> I HEX .

    LSQUARE         reduce using rule 90 (BasicLit -> I HEX .)
    LPAREN          reduce using rule 90 (BasicLit -> I HEX .)
    DOT             reduce using rule 90 (BasicLit -> I HEX .)
    LOGICAL_OR      reduce using rule 90 (BasicLit -> I HEX .)
    LOGICAL_AND     reduce using rule 90 (BasicLit -> I HEX .)
    EQUALS          reduce using rule 90 (BasicLit -> I HEX .)
    NOT_ASSIGN      reduce using rule 90 (BasicLit -> I HEX .)
    LESSER          reduce using rule 90 (BasicLit -> I HEX .)
    GREATER         reduce using rule 90 (BasicLit -> I HEX .)
    LESS_EQUALS     reduce using rule 90 (BasicLit -> I HEX .)
    MORE_EQUALS     reduce using rule 90 (BasicLit -> I HEX .)
    OR              reduce using rule 90 (BasicLit -> I HEX .)
    XOR             reduce using rule 90 (BasicLit -> I HEX .)
    DIVIDE          reduce using rule 90 (BasicLit -> I HEX .)
    MOD             reduce using rule 90 (BasicLit -> I HEX .)
    LSHIFT          reduce using rule 90 (BasicLit -> I HEX .)
    RSHIFT          reduce using rule 90 (BasicLit -> I HEX .)
    PLUS            reduce using rule 90 (BasicLit -> I HEX .)
    MINUS           reduce using rule 90 (BasicLit -> I HEX .)
    STAR            reduce using rule 90 (BasicLit -> I HEX .)
    AND             reduce using rule 90 (BasicLit -> I HEX .)
    COMMA           reduce using rule 90 (BasicLit -> I HEX .)
    SEMICOLON       reduce using rule 90 (BasicLit -> I HEX .)
    FUNC            reduce using rule 90 (BasicLit -> I HEX .)
    CONST           reduce using rule 90 (BasicLit -> I HEX .)
    TYPE            reduce using rule 90 (BasicLit -> I HEX .)
    VAR             reduce using rule 90 (BasicLit -> I HEX .)
    $end            reduce using rule 90 (BasicLit -> I HEX .)
    RETURN          reduce using rule 90 (BasicLit -> I HEX .)
    BREAK           reduce using rule 90 (BasicLit -> I HEX .)
    CONTINUE        reduce using rule 90 (BasicLit -> I HEX .)
    GOTO            reduce using rule 90 (BasicLit -> I HEX .)
    IF              reduce using rule 90 (BasicLit -> I HEX .)
    FOR             reduce using rule 90 (BasicLit -> I HEX .)
    PRINT           reduce using rule 90 (BasicLit -> I HEX .)
    SCAN            reduce using rule 90 (BasicLit -> I HEX .)
    IDENTIFIER      reduce using rule 90 (BasicLit -> I HEX .)
    SWITCH          reduce using rule 90 (BasicLit -> I HEX .)
    NOT             reduce using rule 90 (BasicLit -> I HEX .)
    TRUE            reduce using rule 90 (BasicLit -> I HEX .)
    FALSE           reduce using rule 90 (BasicLit -> I HEX .)
    TYPECAST        reduce using rule 90 (BasicLit -> I HEX .)
    LCURL           reduce using rule 90 (BasicLit -> I HEX .)
    INTEGER         reduce using rule 90 (BasicLit -> I HEX .)
    OCTAL           reduce using rule 90 (BasicLit -> I HEX .)
    HEX             reduce using rule 90 (BasicLit -> I HEX .)
    RUNE            reduce using rule 90 (BasicLit -> I HEX .)
    FLOAT           reduce using rule 90 (BasicLit -> I HEX .)
    IMAGINARY       reduce using rule 90 (BasicLit -> I HEX .)
    STRING          reduce using rule 90 (BasicLit -> I HEX .)
    RCURL           reduce using rule 90 (BasicLit -> I HEX .)
    CASE            reduce using rule 90 (BasicLit -> I HEX .)
    DEFAULT         reduce using rule 90 (BasicLit -> I HEX .)
    RPAREN          reduce using rule 90 (BasicLit -> I HEX .)
    RSQUARE         reduce using rule 90 (BasicLit -> I HEX .)
    COLON           reduce using rule 90 (BasicLit -> I HEX .)
    INCR            reduce using rule 90 (BasicLit -> I HEX .)
    DECR            reduce using rule 90 (BasicLit -> I HEX .)
    PLUS_ASSIGN     reduce using rule 90 (BasicLit -> I HEX .)
    MINUS_ASSIGN    reduce using rule 90 (BasicLit -> I HEX .)
    STAR_ASSIGN     reduce using rule 90 (BasicLit -> I HEX .)
    DIVIDE_ASSIGN   reduce using rule 90 (BasicLit -> I HEX .)
    MOD_ASSIGN      reduce using rule 90 (BasicLit -> I HEX .)
    AND_ASSIGN      reduce using rule 90 (BasicLit -> I HEX .)
    OR_ASSIGN       reduce using rule 90 (BasicLit -> I HEX .)
    XOR_ASSIGN      reduce using rule 90 (BasicLit -> I HEX .)
    LSHIFT_ASSIGN   reduce using rule 90 (BasicLit -> I HEX .)
    RSHIFT_ASSIGN   reduce using rule 90 (BasicLit -> I HEX .)
    ASSIGN          reduce using rule 90 (BasicLit -> I HEX .)


state 143

    (89) BasicLit -> I OCTAL .

    LSQUARE         reduce using rule 89 (BasicLit -> I OCTAL .)
    LPAREN          reduce using rule 89 (BasicLit -> I OCTAL .)
    DOT             reduce using rule 89 (BasicLit -> I OCTAL .)
    LOGICAL_OR      reduce using rule 89 (BasicLit -> I OCTAL .)
    LOGICAL_AND     reduce using rule 89 (BasicLit -> I OCTAL .)
    EQUALS          reduce using rule 89 (BasicLit -> I OCTAL .)
    NOT_ASSIGN      reduce using rule 89 (BasicLit -> I OCTAL .)
    LESSER          reduce using rule 89 (BasicLit -> I OCTAL .)
    GREATER         reduce using rule 89 (BasicLit -> I OCTAL .)
    LESS_EQUALS     reduce using rule 89 (BasicLit -> I OCTAL .)
    MORE_EQUALS     reduce using rule 89 (BasicLit -> I OCTAL .)
    OR              reduce using rule 89 (BasicLit -> I OCTAL .)
    XOR             reduce using rule 89 (BasicLit -> I OCTAL .)
    DIVIDE          reduce using rule 89 (BasicLit -> I OCTAL .)
    MOD             reduce using rule 89 (BasicLit -> I OCTAL .)
    LSHIFT          reduce using rule 89 (BasicLit -> I OCTAL .)
    RSHIFT          reduce using rule 89 (BasicLit -> I OCTAL .)
    PLUS            reduce using rule 89 (BasicLit -> I OCTAL .)
    MINUS           reduce using rule 89 (BasicLit -> I OCTAL .)
    STAR            reduce using rule 89 (BasicLit -> I OCTAL .)
    AND             reduce using rule 89 (BasicLit -> I OCTAL .)
    COMMA           reduce using rule 89 (BasicLit -> I OCTAL .)
    SEMICOLON       reduce using rule 89 (BasicLit -> I OCTAL .)
    FUNC            reduce using rule 89 (BasicLit -> I OCTAL .)
    CONST           reduce using rule 89 (BasicLit -> I OCTAL .)
    TYPE            reduce using rule 89 (BasicLit -> I OCTAL .)
    VAR             reduce using rule 89 (BasicLit -> I OCTAL .)
    $end            reduce using rule 89 (BasicLit -> I OCTAL .)
    RETURN          reduce using rule 89 (BasicLit -> I OCTAL .)
    BREAK           reduce using rule 89 (BasicLit -> I OCTAL .)
    CONTINUE        reduce using rule 89 (BasicLit -> I OCTAL .)
    GOTO            reduce using rule 89 (BasicLit -> I OCTAL .)
    IF              reduce using rule 89 (BasicLit -> I OCTAL .)
    FOR             reduce using rule 89 (BasicLit -> I OCTAL .)
    PRINT           reduce using rule 89 (BasicLit -> I OCTAL .)
    SCAN            reduce using rule 89 (BasicLit -> I OCTAL .)
    IDENTIFIER      reduce using rule 89 (BasicLit -> I OCTAL .)
    SWITCH          reduce using rule 89 (BasicLit -> I OCTAL .)
    NOT             reduce using rule 89 (BasicLit -> I OCTAL .)
    TRUE            reduce using rule 89 (BasicLit -> I OCTAL .)
    FALSE           reduce using rule 89 (BasicLit -> I OCTAL .)
    TYPECAST        reduce using rule 89 (BasicLit -> I OCTAL .)
    LCURL           reduce using rule 89 (BasicLit -> I OCTAL .)
    INTEGER         reduce using rule 89 (BasicLit -> I OCTAL .)
    OCTAL           reduce using rule 89 (BasicLit -> I OCTAL .)
    HEX             reduce using rule 89 (BasicLit -> I OCTAL .)
    RUNE            reduce using rule 89 (BasicLit -> I OCTAL .)
    FLOAT           reduce using rule 89 (BasicLit -> I OCTAL .)
    IMAGINARY       reduce using rule 89 (BasicLit -> I OCTAL .)
    STRING          reduce using rule 89 (BasicLit -> I OCTAL .)
    RCURL           reduce using rule 89 (BasicLit -> I OCTAL .)
    CASE            reduce using rule 89 (BasicLit -> I OCTAL .)
    DEFAULT         reduce using rule 89 (BasicLit -> I OCTAL .)
    RPAREN          reduce using rule 89 (BasicLit -> I OCTAL .)
    RSQUARE         reduce using rule 89 (BasicLit -> I OCTAL .)
    COLON           reduce using rule 89 (BasicLit -> I OCTAL .)
    INCR            reduce using rule 89 (BasicLit -> I OCTAL .)
    DECR            reduce using rule 89 (BasicLit -> I OCTAL .)
    PLUS_ASSIGN     reduce using rule 89 (BasicLit -> I OCTAL .)
    MINUS_ASSIGN    reduce using rule 89 (BasicLit -> I OCTAL .)
    STAR_ASSIGN     reduce using rule 89 (BasicLit -> I OCTAL .)
    DIVIDE_ASSIGN   reduce using rule 89 (BasicLit -> I OCTAL .)
    MOD_ASSIGN      reduce using rule 89 (BasicLit -> I OCTAL .)
    AND_ASSIGN      reduce using rule 89 (BasicLit -> I OCTAL .)
    OR_ASSIGN       reduce using rule 89 (BasicLit -> I OCTAL .)
    XOR_ASSIGN      reduce using rule 89 (BasicLit -> I OCTAL .)
    LSHIFT_ASSIGN   reduce using rule 89 (BasicLit -> I OCTAL .)
    RSHIFT_ASSIGN   reduce using rule 89 (BasicLit -> I OCTAL .)
    ASSIGN          reduce using rule 89 (BasicLit -> I OCTAL .)


state 144

    (143) UnaryExpr -> NOT UnaryExpr .

    LOGICAL_OR      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LOGICAL_AND     reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    EQUALS          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    NOT_ASSIGN      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LESSER          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    GREATER         reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LESS_EQUALS     reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    MORE_EQUALS     reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    MOD             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    PLUS            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    MINUS           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    STAR            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RSQUARE         reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    FUNC            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    CONST           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    TYPE            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    VAR             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    $end            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RETURN          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    BREAK           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    CONTINUE        reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    GOTO            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    IF              reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    FOR             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    PRINT           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    SCAN            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    IDENTIFIER      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    SWITCH          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    NOT             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LPAREN          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    TRUE            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    FALSE           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    TYPECAST        reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LCURL           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    INTEGER         reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    OCTAL           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    HEX             reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RUNE            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    FLOAT           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    IMAGINARY       reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    STRING          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RCURL           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    CASE            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    DEFAULT         reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    INCR            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    DECR            reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    STAR_ASSIGN     reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    MOD_ASSIGN      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 143 (UnaryExpr -> NOT UnaryExpr .)


state 145

    (94) BasicLit -> S STRING .

    LSQUARE         reduce using rule 94 (BasicLit -> S STRING .)
    LPAREN          reduce using rule 94 (BasicLit -> S STRING .)
    DOT             reduce using rule 94 (BasicLit -> S STRING .)
    LOGICAL_OR      reduce using rule 94 (BasicLit -> S STRING .)
    LOGICAL_AND     reduce using rule 94 (BasicLit -> S STRING .)
    EQUALS          reduce using rule 94 (BasicLit -> S STRING .)
    NOT_ASSIGN      reduce using rule 94 (BasicLit -> S STRING .)
    LESSER          reduce using rule 94 (BasicLit -> S STRING .)
    GREATER         reduce using rule 94 (BasicLit -> S STRING .)
    LESS_EQUALS     reduce using rule 94 (BasicLit -> S STRING .)
    MORE_EQUALS     reduce using rule 94 (BasicLit -> S STRING .)
    OR              reduce using rule 94 (BasicLit -> S STRING .)
    XOR             reduce using rule 94 (BasicLit -> S STRING .)
    DIVIDE          reduce using rule 94 (BasicLit -> S STRING .)
    MOD             reduce using rule 94 (BasicLit -> S STRING .)
    LSHIFT          reduce using rule 94 (BasicLit -> S STRING .)
    RSHIFT          reduce using rule 94 (BasicLit -> S STRING .)
    PLUS            reduce using rule 94 (BasicLit -> S STRING .)
    MINUS           reduce using rule 94 (BasicLit -> S STRING .)
    STAR            reduce using rule 94 (BasicLit -> S STRING .)
    AND             reduce using rule 94 (BasicLit -> S STRING .)
    COMMA           reduce using rule 94 (BasicLit -> S STRING .)
    SEMICOLON       reduce using rule 94 (BasicLit -> S STRING .)
    FUNC            reduce using rule 94 (BasicLit -> S STRING .)
    CONST           reduce using rule 94 (BasicLit -> S STRING .)
    TYPE            reduce using rule 94 (BasicLit -> S STRING .)
    VAR             reduce using rule 94 (BasicLit -> S STRING .)
    $end            reduce using rule 94 (BasicLit -> S STRING .)
    RETURN          reduce using rule 94 (BasicLit -> S STRING .)
    BREAK           reduce using rule 94 (BasicLit -> S STRING .)
    CONTINUE        reduce using rule 94 (BasicLit -> S STRING .)
    GOTO            reduce using rule 94 (BasicLit -> S STRING .)
    IF              reduce using rule 94 (BasicLit -> S STRING .)
    FOR             reduce using rule 94 (BasicLit -> S STRING .)
    PRINT           reduce using rule 94 (BasicLit -> S STRING .)
    SCAN            reduce using rule 94 (BasicLit -> S STRING .)
    IDENTIFIER      reduce using rule 94 (BasicLit -> S STRING .)
    SWITCH          reduce using rule 94 (BasicLit -> S STRING .)
    NOT             reduce using rule 94 (BasicLit -> S STRING .)
    TRUE            reduce using rule 94 (BasicLit -> S STRING .)
    FALSE           reduce using rule 94 (BasicLit -> S STRING .)
    TYPECAST        reduce using rule 94 (BasicLit -> S STRING .)
    LCURL           reduce using rule 94 (BasicLit -> S STRING .)
    INTEGER         reduce using rule 94 (BasicLit -> S STRING .)
    OCTAL           reduce using rule 94 (BasicLit -> S STRING .)
    HEX             reduce using rule 94 (BasicLit -> S STRING .)
    RUNE            reduce using rule 94 (BasicLit -> S STRING .)
    FLOAT           reduce using rule 94 (BasicLit -> S STRING .)
    IMAGINARY       reduce using rule 94 (BasicLit -> S STRING .)
    STRING          reduce using rule 94 (BasicLit -> S STRING .)
    RCURL           reduce using rule 94 (BasicLit -> S STRING .)
    CASE            reduce using rule 94 (BasicLit -> S STRING .)
    DEFAULT         reduce using rule 94 (BasicLit -> S STRING .)
    RPAREN          reduce using rule 94 (BasicLit -> S STRING .)
    RSQUARE         reduce using rule 94 (BasicLit -> S STRING .)
    COLON           reduce using rule 94 (BasicLit -> S STRING .)
    INCR            reduce using rule 94 (BasicLit -> S STRING .)
    DECR            reduce using rule 94 (BasicLit -> S STRING .)
    PLUS_ASSIGN     reduce using rule 94 (BasicLit -> S STRING .)
    MINUS_ASSIGN    reduce using rule 94 (BasicLit -> S STRING .)
    STAR_ASSIGN     reduce using rule 94 (BasicLit -> S STRING .)
    DIVIDE_ASSIGN   reduce using rule 94 (BasicLit -> S STRING .)
    MOD_ASSIGN      reduce using rule 94 (BasicLit -> S STRING .)
    AND_ASSIGN      reduce using rule 94 (BasicLit -> S STRING .)
    OR_ASSIGN       reduce using rule 94 (BasicLit -> S STRING .)
    XOR_ASSIGN      reduce using rule 94 (BasicLit -> S STRING .)
    LSHIFT_ASSIGN   reduce using rule 94 (BasicLit -> S STRING .)
    RSHIFT_ASSIGN   reduce using rule 94 (BasicLit -> S STRING .)
    ASSIGN          reduce using rule 94 (BasicLit -> S STRING .)


state 146

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    TypeLit                        shift and go to state 60
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    ElementType                    shift and go to state 201
    Type                           shift and go to state 200
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 147

    (135) Expression -> Expression PLUS . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 202

state 148

    (138) Expression -> Expression AND . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 203

state 149

    (130) Expression -> Expression XOR . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 204

state 150

    (126) Expression -> Expression GREATER . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 205

state 151

    (128) Expression -> Expression MORE_EQUALS . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 206

state 152

    (136) Expression -> Expression MINUS . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 207

state 153

    (123) Expression -> Expression EQUALS . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 208

state 154

    (127) Expression -> Expression LESS_EQUALS . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 209

state 155

    (132) Expression -> Expression MOD . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 210

state 156

    (125) Expression -> Expression LESSER . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 211

state 157

    (121) Expression -> Expression LOGICAL_OR . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 212

state 158

    (137) Expression -> Expression STAR . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 213

state 159

    (122) Expression -> Expression LOGICAL_AND . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 214

state 160

    (133) Expression -> Expression LSHIFT . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 215

state 161

    (134) Expression -> Expression RSHIFT . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 216

state 162

    (124) Expression -> Expression NOT_ASSIGN . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 217

state 163

    (129) Expression -> Expression OR . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 218

state 164

    (131) Expression -> Expression DIVIDE . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 219

state 165

    (148) Conversion -> TYPECAST Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 220


state 166

    (109) PrimaryExpr -> IDENTIFIER LCURL . StructFieldList RCURL SemiColonOpt
    (110) StructFieldList -> . IDENTIFIER COLON Expression StructFieldRep
    (111) StructFieldList -> . epsilon
    (235) epsilon -> .

    IDENTIFIER      shift and go to state 223
    RCURL           reduce using rule 235 (epsilon -> .)

    StructFieldList                shift and go to state 221
    epsilon                        shift and go to state 222

state 167

    (106) PrimaryExpr -> PrimaryExpr Slice .

    LSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DOT             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_OR      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_AND     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUALS          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSER          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_EQUALS     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MORE_EQUALS     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    FUNC            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    CONST           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    TYPE            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    VAR             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    $end            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RETURN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    BREAK           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    CONTINUE        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    GOTO            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    IF              reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    FOR             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    PRINT           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    SCAN            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    IDENTIFIER      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    SWITCH          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    TRUE            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    FALSE           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    TYPECAST        reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LCURL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    INTEGER         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    OCTAL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    HEX             reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RUNE            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    FLOAT           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    IMAGINARY       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    STRING          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RCURL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    CASE            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DEFAULT         reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    INCR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DECR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS_ASSIGN     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS_ASSIGN    reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR_ASSIGN     reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr Slice .)


state 168

    (108) PrimaryExpr -> PrimaryExpr LPAREN . ExpressionListTypeOpt RPAREN
    (118) ExpressionListTypeOpt -> . ExpressionList
    (119) ExpressionListTypeOpt -> . epsilon
    (56) ExpressionList -> . Expression ExpressionRep
    (235) epsilon -> .
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    RPAREN          reduce using rule 235 (epsilon -> .)
    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    Operand                        shift and go to state 114
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 224
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 225
    Expression                     shift and go to state 131
    ExpressionListTypeOpt          shift and go to state 226

state 169

    (103) PrimaryExpr -> PrimaryExpr Selector .

    LSQUARE         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DOT             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_OR      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_AND     reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUALS          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT_ASSIGN      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LESSER          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_EQUALS     reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MORE_EQUALS     reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RSQUARE         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    FUNC            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    CONST           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    TYPE            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    VAR             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    $end            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RETURN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    BREAK           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    CONTINUE        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    GOTO            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    IF              reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    FOR             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PRINT           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    SCAN            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    IDENTIFIER      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    SWITCH          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    TRUE            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    FALSE           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    TYPECAST        reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LCURL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    INTEGER         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OCTAL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    HEX             reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RUNE            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    FLOAT           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    IMAGINARY       reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    STRING          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RCURL           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    CASE            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DEFAULT         reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    INCR            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DECR            reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS_ASSIGN     reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS_ASSIGN    reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR_ASSIGN     reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE_ASSIGN   reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD_ASSIGN      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT_ASSIGN   reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT_ASSIGN   reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 103 (PrimaryExpr -> PrimaryExpr Selector .)


state 170

    (107) PrimaryExpr -> PrimaryExpr TypeAssertion .

    LSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DOT             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_OR      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_AND     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUALS          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSER          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_EQUALS     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MORE_EQUALS     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    FUNC            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    CONST           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TYPE            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    VAR             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    $end            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RETURN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    BREAK           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    CONTINUE        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GOTO            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    IF              reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    FOR             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PRINT           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SCAN            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    IDENTIFIER      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SWITCH          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TRUE            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    FALSE           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    TYPECAST        reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LCURL           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INTEGER         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OCTAL           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    HEX             reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RUNE            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    FLOAT           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    IMAGINARY       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STRING          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RCURL           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    CASE            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DEFAULT         reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS_ASSIGN     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS_ASSIGN    reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR_ASSIGN     reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR_ASSIGN       reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 171

    (105) PrimaryExpr -> PrimaryExpr LSQUARE . Expression RSQUARE
    (115) Slice -> LSQUARE . ExpressionOpt COLON ExpressionOpt RSQUARE
    (116) Slice -> LSQUARE . ExpressionOpt COLON Expression COLON Expression RSQUARE
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (139) ExpressionOpt -> . Expression
    (140) ExpressionOpt -> . epsilon
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (235) epsilon -> .
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    COLON           reduce using rule 235 (epsilon -> .)
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    ExpressionOpt                  shift and go to state 227
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 228
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 229
    Operand                        shift and go to state 114

state 172

    (114) Selector -> DOT . IDENTIFIER
    (117) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 230
    LPAREN          shift and go to state 231


state 173

    (52) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    FUNC            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    CONST           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    TYPE            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    VAR             reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    $end            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    RETURN          reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    BREAK           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    CONTINUE        reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    GOTO            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    IF              reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    FOR             reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    PRINT           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    SCAN            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    IDENTIFIER      reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    SWITCH          reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    NOT             reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    PLUS            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    MINUS           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    STAR            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    AND             reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    LPAREN          reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    TRUE            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    FALSE           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    TYPECAST        reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    LCURL           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    INTEGER         reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    OCTAL           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    HEX             reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    RUNE            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    FLOAT           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    IMAGINARY       reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    STRING          reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    RCURL           reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    CASE            reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    DEFAULT         reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)
    RPAREN          reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 174

    (23) StructType -> CreateFuncScope STRUCT LCURL . FieldDeclRep RCURL EndScope
    (24) FieldDeclRep -> . FieldDeclRep FieldDecl SemiColonOpt
    (25) FieldDeclRep -> . epsilon
    (235) epsilon -> .

    RCURL           reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    FieldDeclRep                   shift and go to state 232
    epsilon                        shift and go to state 233

state 175

    (100) QualifiedIdent -> IDENTIFIER DOT TypeName .

    LCURL           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SEMICOLON       reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    FUNC            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    CONST           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    TYPE            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    VAR             reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    $end            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RETURN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    BREAK           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    CONTINUE        reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    GOTO            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    IF              reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    FOR             reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    PRINT           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SCAN            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    IDENTIFIER      reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SWITCH          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    NOT             reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    PLUS            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    MINUS           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    STAR            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    AND             reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LPAREN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    TRUE            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    FALSE           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    TYPECAST        reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    INTEGER         reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    OCTAL           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    HEX             reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RUNE            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    FLOAT           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    IMAGINARY       reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    STRING          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RCURL           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    CASE            reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    DEFAULT         reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RPAREN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COMMA           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    ASSIGN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)


state 176

    (4) Type -> LPAREN Type RPAREN .

    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LCURL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    FUNC            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    CONST           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    TYPE            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    VAR             reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    $end            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RETURN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    BREAK           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    CONTINUE        reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    GOTO            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    IF              reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    FOR             reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    PRINT           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SCAN            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    IDENTIFIER      reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SWITCH          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    NOT             reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    PLUS            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    MINUS           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STAR            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    AND             reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    TRUE            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    FALSE           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    TYPECAST        reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    INTEGER         reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    OCTAL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    HEX             reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RUNE            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    FLOAT           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    IMAGINARY       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    STRING          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RCURL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    CASE            reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    DEFAULT         reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 177

    (54) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT             reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT           reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    UINT            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    COMPLEX         reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    RUNE            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPE            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STAR            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    ASSIGN          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 178

    (74) FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .

    SEMICOLON       reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)
    FUNC            reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)
    CONST           reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)
    TYPE            reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)
    VAR             reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)
    $end            reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)


state 179

    (18) TypeOpt -> Type .

    LCURL           reduce using rule 18 (TypeOpt -> Type .)
    SEMICOLON       reduce using rule 18 (TypeOpt -> Type .)
    FUNC            reduce using rule 18 (TypeOpt -> Type .)
    CONST           reduce using rule 18 (TypeOpt -> Type .)
    TYPE            reduce using rule 18 (TypeOpt -> Type .)
    VAR             reduce using rule 18 (TypeOpt -> Type .)
    $end            reduce using rule 18 (TypeOpt -> Type .)


state 180

    (19) TypeOpt -> epsilon .

    LCURL           reduce using rule 19 (TypeOpt -> epsilon .)
    SEMICOLON       reduce using rule 19 (TypeOpt -> epsilon .)
    FUNC            reduce using rule 19 (TypeOpt -> epsilon .)
    CONST           reduce using rule 19 (TypeOpt -> epsilon .)
    TYPE            reduce using rule 19 (TypeOpt -> epsilon .)
    VAR             reduce using rule 19 (TypeOpt -> epsilon .)
    $end            reduce using rule 19 (TypeOpt -> epsilon .)


state 181

    (29) Signature -> Parameters TypeOpt .

    LCURL           reduce using rule 29 (Signature -> Parameters TypeOpt .)
    SEMICOLON       reduce using rule 29 (Signature -> Parameters TypeOpt .)
    FUNC            reduce using rule 29 (Signature -> Parameters TypeOpt .)
    CONST           reduce using rule 29 (Signature -> Parameters TypeOpt .)
    TYPE            reduce using rule 29 (Signature -> Parameters TypeOpt .)
    VAR             reduce using rule 29 (Signature -> Parameters TypeOpt .)
    $end            reduce using rule 29 (Signature -> Parameters TypeOpt .)


state 182

    (80) Function -> Signature FunctionBody .

    SEMICOLON       reduce using rule 80 (Function -> Signature FunctionBody .)
    FUNC            reduce using rule 80 (Function -> Signature FunctionBody .)
    CONST           reduce using rule 80 (Function -> Signature FunctionBody .)
    TYPE            reduce using rule 80 (Function -> Signature FunctionBody .)
    VAR             reduce using rule 80 (Function -> Signature FunctionBody .)
    $end            reduce using rule 80 (Function -> Signature FunctionBody .)


state 183

    (75) FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .

    SEMICOLON       reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)
    FUNC            reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)
    CONST           reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)
    TYPE            reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)
    VAR             reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)
    $end            reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)


state 184

    (81) FunctionBody -> Block .

    SEMICOLON       reduce using rule 81 (FunctionBody -> Block .)
    FUNC            reduce using rule 81 (FunctionBody -> Block .)
    CONST           reduce using rule 81 (FunctionBody -> Block .)
    TYPE            reduce using rule 81 (FunctionBody -> Block .)
    VAR             reduce using rule 81 (FunctionBody -> Block .)
    $end            reduce using rule 81 (FunctionBody -> Block .)


state 185

    (39) Block -> LCURL . StatementList RCURL
    (40) StatementList -> . StatementRep
    (41) StatementRep -> . StatementRep Statement SemiColonOpt
    (42) StatementRep -> . epsilon
    (235) epsilon -> .

    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 235
    StatementRep                   shift and go to state 234
    StatementList                  shift and go to state 236

state 186

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 237


state 187

    (37) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 238
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 188

    (34) ParametersList -> ParameterDeclCommaRep .
    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 34 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 239


state 189

    (38) ParameterDecl -> Type .

    COMMA           reduce using rule 38 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> Type .)


state 190

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 191

    (53) IdentifierList -> IDENTIFIER . IdentifierRep
    (100) QualifiedIdent -> IDENTIFIER . DOT TypeName
    (54) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (55) IdentifierRep -> . epsilon
    (235) epsilon -> .

    DOT             shift and go to state 117
    COMMA           reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    INT             reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    UINT            reduce using rule 235 (epsilon -> .)
    COMPLEX         reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    BOOL            reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    LSQUARE         reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    STRUCT          reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 74
    IdentifierRep                  shift and go to state 75

state 192

    (33) ParametersList -> ParameterDecl .
    (36) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    RPAREN          reduce using rule 33 (ParametersList -> ParameterDecl .)
    COMMA           shift and go to state 240


state 193

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 194

    (67) VarSpecRep -> VarSpecRep VarSpec SemiColonOpt .

    RPAREN          reduce using rule 67 (VarSpecRep -> VarSpecRep VarSpec SemiColonOpt .)
    IDENTIFIER      reduce using rule 67 (VarSpecRep -> VarSpecRep VarSpec SemiColonOpt .)


state 195

    (71) ExpressionListOpt -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    FUNC            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    CONST           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    TYPE            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    VAR             reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    $end            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    RETURN          reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    BREAK           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    CONTINUE        reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    GOTO            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    IF              reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    FOR             reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    PRINT           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    SCAN            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    IDENTIFIER      reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    SWITCH          reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    NOT             reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    PLUS            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    MINUS           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    STAR            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    AND             reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    LPAREN          reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    TRUE            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    FALSE           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    TYPECAST        reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    LCURL           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    INTEGER         reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    OCTAL           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    HEX             reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    RUNE            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    FLOAT           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    IMAGINARY       reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    STRING          reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    RCURL           reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    CASE            reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    DEFAULT         reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)
    RPAREN          reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)


state 196

    (56) ExpressionList -> Expression ExpressionRep .
    (57) ExpressionRep -> ExpressionRep . COMMA Expression

    PLUS_ASSIGN     reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    MINUS_ASSIGN    reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    STAR_ASSIGN     reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    DIVIDE_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    MOD_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    AND_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    OR_ASSIGN       reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    XOR_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    LSHIFT_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RSHIFT_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    ASSIGN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    SEMICOLON       reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    FUNC            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    CONST           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    TYPE            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    VAR             reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    $end            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RETURN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    BREAK           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    CONTINUE        reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    GOTO            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    IF              reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    FOR             reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    PRINT           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    SCAN            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    IDENTIFIER      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    SWITCH          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    NOT             reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    PLUS            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    MINUS           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    STAR            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    AND             reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    LPAREN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    TRUE            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    FALSE           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    TYPECAST        reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    LCURL           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    INTEGER         reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    OCTAL           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    HEX             reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RUNE            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    FLOAT           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    IMAGINARY       reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    STRING          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RCURL           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    CASE            reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    DEFAULT         reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 241


state 197

    (58) ExpressionRep -> epsilon .

    COMMA           reduce using rule 58 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 58 (ExpressionRep -> epsilon .)
    FUNC            reduce using rule 58 (ExpressionRep -> epsilon .)
    CONST           reduce using rule 58 (ExpressionRep -> epsilon .)
    TYPE            reduce using rule 58 (ExpressionRep -> epsilon .)
    VAR             reduce using rule 58 (ExpressionRep -> epsilon .)
    $end            reduce using rule 58 (ExpressionRep -> epsilon .)
    RETURN          reduce using rule 58 (ExpressionRep -> epsilon .)
    BREAK           reduce using rule 58 (ExpressionRep -> epsilon .)
    CONTINUE        reduce using rule 58 (ExpressionRep -> epsilon .)
    GOTO            reduce using rule 58 (ExpressionRep -> epsilon .)
    IF              reduce using rule 58 (ExpressionRep -> epsilon .)
    FOR             reduce using rule 58 (ExpressionRep -> epsilon .)
    PRINT           reduce using rule 58 (ExpressionRep -> epsilon .)
    SCAN            reduce using rule 58 (ExpressionRep -> epsilon .)
    IDENTIFIER      reduce using rule 58 (ExpressionRep -> epsilon .)
    SWITCH          reduce using rule 58 (ExpressionRep -> epsilon .)
    NOT             reduce using rule 58 (ExpressionRep -> epsilon .)
    PLUS            reduce using rule 58 (ExpressionRep -> epsilon .)
    MINUS           reduce using rule 58 (ExpressionRep -> epsilon .)
    STAR            reduce using rule 58 (ExpressionRep -> epsilon .)
    AND             reduce using rule 58 (ExpressionRep -> epsilon .)
    LPAREN          reduce using rule 58 (ExpressionRep -> epsilon .)
    TRUE            reduce using rule 58 (ExpressionRep -> epsilon .)
    FALSE           reduce using rule 58 (ExpressionRep -> epsilon .)
    TYPECAST        reduce using rule 58 (ExpressionRep -> epsilon .)
    LCURL           reduce using rule 58 (ExpressionRep -> epsilon .)
    INTEGER         reduce using rule 58 (ExpressionRep -> epsilon .)
    OCTAL           reduce using rule 58 (ExpressionRep -> epsilon .)
    HEX             reduce using rule 58 (ExpressionRep -> epsilon .)
    RUNE            reduce using rule 58 (ExpressionRep -> epsilon .)
    FLOAT           reduce using rule 58 (ExpressionRep -> epsilon .)
    IMAGINARY       reduce using rule 58 (ExpressionRep -> epsilon .)
    STRING          reduce using rule 58 (ExpressionRep -> epsilon .)
    RCURL           reduce using rule 58 (ExpressionRep -> epsilon .)
    CASE            reduce using rule 58 (ExpressionRep -> epsilon .)
    DEFAULT         reduce using rule 58 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 58 (ExpressionRep -> epsilon .)
    PLUS_ASSIGN     reduce using rule 58 (ExpressionRep -> epsilon .)
    MINUS_ASSIGN    reduce using rule 58 (ExpressionRep -> epsilon .)
    STAR_ASSIGN     reduce using rule 58 (ExpressionRep -> epsilon .)
    DIVIDE_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    MOD_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    AND_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    OR_ASSIGN       reduce using rule 58 (ExpressionRep -> epsilon .)
    XOR_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    LSHIFT_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    RSHIFT_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    ASSIGN          reduce using rule 58 (ExpressionRep -> epsilon .)


state 198

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SemiColonOpt .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SemiColonOpt .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SemiColonOpt .)


state 199

    (86) Operand -> LPAREN Expression RPAREN .

    LSQUARE         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LESSER          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GREATER         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    STAR            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    FUNC            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    CONST           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    TYPE            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    VAR             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    $end            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RETURN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    BREAK           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    CONTINUE        reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    GOTO            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    IF              reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    FOR             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PRINT           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    SCAN            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    IDENTIFIER      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    SWITCH          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    NOT             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    TRUE            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    FALSE           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    TYPECAST        reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LCURL           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    INTEGER         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OCTAL           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    HEX             reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RUNE            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    FLOAT           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    IMAGINARY       reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    STRING          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RCURL           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    CASE            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    INCR            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DECR            reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 86 (Operand -> LPAREN Expression RPAREN .)


state 200

    (22) ElementType -> Type .

    ASSIGN          reduce using rule 22 (ElementType -> Type .)
    SEMICOLON       reduce using rule 22 (ElementType -> Type .)
    FUNC            reduce using rule 22 (ElementType -> Type .)
    CONST           reduce using rule 22 (ElementType -> Type .)
    TYPE            reduce using rule 22 (ElementType -> Type .)
    VAR             reduce using rule 22 (ElementType -> Type .)
    $end            reduce using rule 22 (ElementType -> Type .)
    RETURN          reduce using rule 22 (ElementType -> Type .)
    BREAK           reduce using rule 22 (ElementType -> Type .)
    CONTINUE        reduce using rule 22 (ElementType -> Type .)
    GOTO            reduce using rule 22 (ElementType -> Type .)
    IF              reduce using rule 22 (ElementType -> Type .)
    FOR             reduce using rule 22 (ElementType -> Type .)
    PRINT           reduce using rule 22 (ElementType -> Type .)
    SCAN            reduce using rule 22 (ElementType -> Type .)
    IDENTIFIER      reduce using rule 22 (ElementType -> Type .)
    SWITCH          reduce using rule 22 (ElementType -> Type .)
    NOT             reduce using rule 22 (ElementType -> Type .)
    PLUS            reduce using rule 22 (ElementType -> Type .)
    MINUS           reduce using rule 22 (ElementType -> Type .)
    STAR            reduce using rule 22 (ElementType -> Type .)
    AND             reduce using rule 22 (ElementType -> Type .)
    LPAREN          reduce using rule 22 (ElementType -> Type .)
    TRUE            reduce using rule 22 (ElementType -> Type .)
    FALSE           reduce using rule 22 (ElementType -> Type .)
    TYPECAST        reduce using rule 22 (ElementType -> Type .)
    LCURL           reduce using rule 22 (ElementType -> Type .)
    INTEGER         reduce using rule 22 (ElementType -> Type .)
    OCTAL           reduce using rule 22 (ElementType -> Type .)
    HEX             reduce using rule 22 (ElementType -> Type .)
    RUNE            reduce using rule 22 (ElementType -> Type .)
    FLOAT           reduce using rule 22 (ElementType -> Type .)
    IMAGINARY       reduce using rule 22 (ElementType -> Type .)
    STRING          reduce using rule 22 (ElementType -> Type .)
    RCURL           reduce using rule 22 (ElementType -> Type .)
    CASE            reduce using rule 22 (ElementType -> Type .)
    DEFAULT         reduce using rule 22 (ElementType -> Type .)
    RPAREN          reduce using rule 22 (ElementType -> Type .)
    COMMA           reduce using rule 22 (ElementType -> Type .)


state 201

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .

    RPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LCURL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SEMICOLON       reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    FUNC            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    CONST           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    TYPE            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    VAR             reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    $end            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RETURN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    BREAK           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    CONTINUE        reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    GOTO            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    IF              reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    FOR             reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    PRINT           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SCAN            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    IDENTIFIER      reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SWITCH          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    NOT             reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    PLUS            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    MINUS           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    STAR            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    AND             reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    TRUE            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    FALSE           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    TYPECAST        reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    INTEGER         reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    OCTAL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    HEX             reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RUNE            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    FLOAT           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    IMAGINARY       reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    STRING          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RCURL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    CASE            reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    DEFAULT         reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COMMA           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    ASSIGN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)


state 202

    (135) Expression -> Expression PLUS Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LOGICAL_AND     reduce using rule 135 (Expression -> Expression PLUS Expression .)
    EQUALS          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    NOT_ASSIGN      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LESSER          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    GREATER         reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LESS_EQUALS     reduce using rule 135 (Expression -> Expression PLUS Expression .)
    MORE_EQUALS     reduce using rule 135 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 135 (Expression -> Expression PLUS Expression .)
    XOR             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LSHIFT          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RSHIFT          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    AND             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RCURL           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RSQUARE         reduce using rule 135 (Expression -> Expression PLUS Expression .)
    SEMICOLON       reduce using rule 135 (Expression -> Expression PLUS Expression .)
    FUNC            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    CONST           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    TYPE            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    VAR             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    $end            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RETURN          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    BREAK           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    CONTINUE        reduce using rule 135 (Expression -> Expression PLUS Expression .)
    GOTO            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    IF              reduce using rule 135 (Expression -> Expression PLUS Expression .)
    FOR             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    PRINT           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    SCAN            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    IDENTIFIER      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    SWITCH          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    NOT             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LPAREN          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    TRUE            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    FALSE           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    TYPECAST        reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LCURL           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    INTEGER         reduce using rule 135 (Expression -> Expression PLUS Expression .)
    OCTAL           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    HEX             reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RUNE            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    FLOAT           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    IMAGINARY       reduce using rule 135 (Expression -> Expression PLUS Expression .)
    STRING          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    CASE            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    DEFAULT         reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 135 (Expression -> Expression PLUS Expression .)
    INCR            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    DECR            reduce using rule 135 (Expression -> Expression PLUS Expression .)
    PLUS_ASSIGN     reduce using rule 135 (Expression -> Expression PLUS Expression .)
    MINUS_ASSIGN    reduce using rule 135 (Expression -> Expression PLUS Expression .)
    STAR_ASSIGN     reduce using rule 135 (Expression -> Expression PLUS Expression .)
    DIVIDE_ASSIGN   reduce using rule 135 (Expression -> Expression PLUS Expression .)
    MOD_ASSIGN      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    AND_ASSIGN      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    OR_ASSIGN       reduce using rule 135 (Expression -> Expression PLUS Expression .)
    XOR_ASSIGN      reduce using rule 135 (Expression -> Expression PLUS Expression .)
    LSHIFT_ASSIGN   reduce using rule 135 (Expression -> Expression PLUS Expression .)
    RSHIFT_ASSIGN   reduce using rule 135 (Expression -> Expression PLUS Expression .)
    ASSIGN          reduce using rule 135 (Expression -> Expression PLUS Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 135 (Expression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 135 (Expression -> Expression PLUS Expression .) ]
  ! STAR            [ reduce using rule 135 (Expression -> Expression PLUS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! PLUS            [ shift and go to state 147 ]
  ! MINUS           [ shift and go to state 152 ]
  ! AND             [ shift and go to state 148 ]


state 203

    (138) Expression -> Expression AND Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 138 (Expression -> Expression AND Expression .)
    LOGICAL_AND     reduce using rule 138 (Expression -> Expression AND Expression .)
    OR              reduce using rule 138 (Expression -> Expression AND Expression .)
    XOR             reduce using rule 138 (Expression -> Expression AND Expression .)
    AND             reduce using rule 138 (Expression -> Expression AND Expression .)
    COMMA           reduce using rule 138 (Expression -> Expression AND Expression .)
    RCURL           reduce using rule 138 (Expression -> Expression AND Expression .)
    RSQUARE         reduce using rule 138 (Expression -> Expression AND Expression .)
    SEMICOLON       reduce using rule 138 (Expression -> Expression AND Expression .)
    FUNC            reduce using rule 138 (Expression -> Expression AND Expression .)
    CONST           reduce using rule 138 (Expression -> Expression AND Expression .)
    TYPE            reduce using rule 138 (Expression -> Expression AND Expression .)
    VAR             reduce using rule 138 (Expression -> Expression AND Expression .)
    $end            reduce using rule 138 (Expression -> Expression AND Expression .)
    RETURN          reduce using rule 138 (Expression -> Expression AND Expression .)
    BREAK           reduce using rule 138 (Expression -> Expression AND Expression .)
    CONTINUE        reduce using rule 138 (Expression -> Expression AND Expression .)
    GOTO            reduce using rule 138 (Expression -> Expression AND Expression .)
    IF              reduce using rule 138 (Expression -> Expression AND Expression .)
    FOR             reduce using rule 138 (Expression -> Expression AND Expression .)
    PRINT           reduce using rule 138 (Expression -> Expression AND Expression .)
    SCAN            reduce using rule 138 (Expression -> Expression AND Expression .)
    IDENTIFIER      reduce using rule 138 (Expression -> Expression AND Expression .)
    SWITCH          reduce using rule 138 (Expression -> Expression AND Expression .)
    NOT             reduce using rule 138 (Expression -> Expression AND Expression .)
    LPAREN          reduce using rule 138 (Expression -> Expression AND Expression .)
    TRUE            reduce using rule 138 (Expression -> Expression AND Expression .)
    FALSE           reduce using rule 138 (Expression -> Expression AND Expression .)
    TYPECAST        reduce using rule 138 (Expression -> Expression AND Expression .)
    LCURL           reduce using rule 138 (Expression -> Expression AND Expression .)
    INTEGER         reduce using rule 138 (Expression -> Expression AND Expression .)
    OCTAL           reduce using rule 138 (Expression -> Expression AND Expression .)
    HEX             reduce using rule 138 (Expression -> Expression AND Expression .)
    RUNE            reduce using rule 138 (Expression -> Expression AND Expression .)
    FLOAT           reduce using rule 138 (Expression -> Expression AND Expression .)
    IMAGINARY       reduce using rule 138 (Expression -> Expression AND Expression .)
    STRING          reduce using rule 138 (Expression -> Expression AND Expression .)
    CASE            reduce using rule 138 (Expression -> Expression AND Expression .)
    DEFAULT         reduce using rule 138 (Expression -> Expression AND Expression .)
    RPAREN          reduce using rule 138 (Expression -> Expression AND Expression .)
    COLON           reduce using rule 138 (Expression -> Expression AND Expression .)
    INCR            reduce using rule 138 (Expression -> Expression AND Expression .)
    DECR            reduce using rule 138 (Expression -> Expression AND Expression .)
    PLUS_ASSIGN     reduce using rule 138 (Expression -> Expression AND Expression .)
    MINUS_ASSIGN    reduce using rule 138 (Expression -> Expression AND Expression .)
    STAR_ASSIGN     reduce using rule 138 (Expression -> Expression AND Expression .)
    DIVIDE_ASSIGN   reduce using rule 138 (Expression -> Expression AND Expression .)
    MOD_ASSIGN      reduce using rule 138 (Expression -> Expression AND Expression .)
    AND_ASSIGN      reduce using rule 138 (Expression -> Expression AND Expression .)
    OR_ASSIGN       reduce using rule 138 (Expression -> Expression AND Expression .)
    XOR_ASSIGN      reduce using rule 138 (Expression -> Expression AND Expression .)
    LSHIFT_ASSIGN   reduce using rule 138 (Expression -> Expression AND Expression .)
    RSHIFT_ASSIGN   reduce using rule 138 (Expression -> Expression AND Expression .)
    ASSIGN          reduce using rule 138 (Expression -> Expression AND Expression .)
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! EQUALS          [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! LESSER          [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! GREATER         [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! DIVIDE          [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! MOD             [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! LSHIFT          [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! RSHIFT          [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! PLUS            [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! MINUS           [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! STAR            [ reduce using rule 138 (Expression -> Expression AND Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 204

    (130) Expression -> Expression XOR Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 130 (Expression -> Expression XOR Expression .)
    LOGICAL_AND     reduce using rule 130 (Expression -> Expression XOR Expression .)
    OR              reduce using rule 130 (Expression -> Expression XOR Expression .)
    XOR             reduce using rule 130 (Expression -> Expression XOR Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression XOR Expression .)
    RCURL           reduce using rule 130 (Expression -> Expression XOR Expression .)
    RSQUARE         reduce using rule 130 (Expression -> Expression XOR Expression .)
    SEMICOLON       reduce using rule 130 (Expression -> Expression XOR Expression .)
    FUNC            reduce using rule 130 (Expression -> Expression XOR Expression .)
    CONST           reduce using rule 130 (Expression -> Expression XOR Expression .)
    TYPE            reduce using rule 130 (Expression -> Expression XOR Expression .)
    VAR             reduce using rule 130 (Expression -> Expression XOR Expression .)
    $end            reduce using rule 130 (Expression -> Expression XOR Expression .)
    RETURN          reduce using rule 130 (Expression -> Expression XOR Expression .)
    BREAK           reduce using rule 130 (Expression -> Expression XOR Expression .)
    CONTINUE        reduce using rule 130 (Expression -> Expression XOR Expression .)
    GOTO            reduce using rule 130 (Expression -> Expression XOR Expression .)
    IF              reduce using rule 130 (Expression -> Expression XOR Expression .)
    FOR             reduce using rule 130 (Expression -> Expression XOR Expression .)
    PRINT           reduce using rule 130 (Expression -> Expression XOR Expression .)
    SCAN            reduce using rule 130 (Expression -> Expression XOR Expression .)
    IDENTIFIER      reduce using rule 130 (Expression -> Expression XOR Expression .)
    SWITCH          reduce using rule 130 (Expression -> Expression XOR Expression .)
    NOT             reduce using rule 130 (Expression -> Expression XOR Expression .)
    LPAREN          reduce using rule 130 (Expression -> Expression XOR Expression .)
    TRUE            reduce using rule 130 (Expression -> Expression XOR Expression .)
    FALSE           reduce using rule 130 (Expression -> Expression XOR Expression .)
    TYPECAST        reduce using rule 130 (Expression -> Expression XOR Expression .)
    LCURL           reduce using rule 130 (Expression -> Expression XOR Expression .)
    INTEGER         reduce using rule 130 (Expression -> Expression XOR Expression .)
    OCTAL           reduce using rule 130 (Expression -> Expression XOR Expression .)
    HEX             reduce using rule 130 (Expression -> Expression XOR Expression .)
    RUNE            reduce using rule 130 (Expression -> Expression XOR Expression .)
    FLOAT           reduce using rule 130 (Expression -> Expression XOR Expression .)
    IMAGINARY       reduce using rule 130 (Expression -> Expression XOR Expression .)
    STRING          reduce using rule 130 (Expression -> Expression XOR Expression .)
    CASE            reduce using rule 130 (Expression -> Expression XOR Expression .)
    DEFAULT         reduce using rule 130 (Expression -> Expression XOR Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression XOR Expression .)
    COLON           reduce using rule 130 (Expression -> Expression XOR Expression .)
    INCR            reduce using rule 130 (Expression -> Expression XOR Expression .)
    DECR            reduce using rule 130 (Expression -> Expression XOR Expression .)
    PLUS_ASSIGN     reduce using rule 130 (Expression -> Expression XOR Expression .)
    MINUS_ASSIGN    reduce using rule 130 (Expression -> Expression XOR Expression .)
    STAR_ASSIGN     reduce using rule 130 (Expression -> Expression XOR Expression .)
    DIVIDE_ASSIGN   reduce using rule 130 (Expression -> Expression XOR Expression .)
    MOD_ASSIGN      reduce using rule 130 (Expression -> Expression XOR Expression .)
    AND_ASSIGN      reduce using rule 130 (Expression -> Expression XOR Expression .)
    OR_ASSIGN       reduce using rule 130 (Expression -> Expression XOR Expression .)
    XOR_ASSIGN      reduce using rule 130 (Expression -> Expression XOR Expression .)
    LSHIFT_ASSIGN   reduce using rule 130 (Expression -> Expression XOR Expression .)
    RSHIFT_ASSIGN   reduce using rule 130 (Expression -> Expression XOR Expression .)
    ASSIGN          reduce using rule 130 (Expression -> Expression XOR Expression .)
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! EQUALS          [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! LESSER          [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! GREATER         [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! DIVIDE          [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! MOD             [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! LSHIFT          [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! RSHIFT          [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! PLUS            [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! MINUS           [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! STAR            [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! AND             [ reduce using rule 130 (Expression -> Expression XOR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]


state 205

    (126) Expression -> Expression GREATER Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LOGICAL_AND     reduce using rule 126 (Expression -> Expression GREATER Expression .)
    EQUALS          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    NOT_ASSIGN      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LESSER          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    GREATER         reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LESS_EQUALS     reduce using rule 126 (Expression -> Expression GREATER Expression .)
    MORE_EQUALS     reduce using rule 126 (Expression -> Expression GREATER Expression .)
    OR              reduce using rule 126 (Expression -> Expression GREATER Expression .)
    XOR             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    AND             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RCURL           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RSQUARE         reduce using rule 126 (Expression -> Expression GREATER Expression .)
    SEMICOLON       reduce using rule 126 (Expression -> Expression GREATER Expression .)
    FUNC            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    CONST           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    TYPE            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    VAR             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    $end            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RETURN          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    BREAK           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    CONTINUE        reduce using rule 126 (Expression -> Expression GREATER Expression .)
    GOTO            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    IF              reduce using rule 126 (Expression -> Expression GREATER Expression .)
    FOR             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    PRINT           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    SCAN            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    IDENTIFIER      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    SWITCH          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    NOT             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LPAREN          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    TRUE            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    FALSE           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    TYPECAST        reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LCURL           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    INTEGER         reduce using rule 126 (Expression -> Expression GREATER Expression .)
    OCTAL           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    HEX             reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RUNE            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    FLOAT           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    IMAGINARY       reduce using rule 126 (Expression -> Expression GREATER Expression .)
    STRING          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    CASE            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    DEFAULT         reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    COLON           reduce using rule 126 (Expression -> Expression GREATER Expression .)
    INCR            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    DECR            reduce using rule 126 (Expression -> Expression GREATER Expression .)
    PLUS_ASSIGN     reduce using rule 126 (Expression -> Expression GREATER Expression .)
    MINUS_ASSIGN    reduce using rule 126 (Expression -> Expression GREATER Expression .)
    STAR_ASSIGN     reduce using rule 126 (Expression -> Expression GREATER Expression .)
    DIVIDE_ASSIGN   reduce using rule 126 (Expression -> Expression GREATER Expression .)
    MOD_ASSIGN      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    AND_ASSIGN      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    OR_ASSIGN       reduce using rule 126 (Expression -> Expression GREATER Expression .)
    XOR_ASSIGN      reduce using rule 126 (Expression -> Expression GREATER Expression .)
    LSHIFT_ASSIGN   reduce using rule 126 (Expression -> Expression GREATER Expression .)
    RSHIFT_ASSIGN   reduce using rule 126 (Expression -> Expression GREATER Expression .)
    ASSIGN          reduce using rule 126 (Expression -> Expression GREATER Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! MOD             [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! LSHIFT          [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! RSHIFT          [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! PLUS            [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! MINUS           [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! STAR            [ reduce using rule 126 (Expression -> Expression GREATER Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 206

    (128) Expression -> Expression MORE_EQUALS Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LOGICAL_AND     reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    EQUALS          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LESSER          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    GREATER         reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LESS_EQUALS     reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    MORE_EQUALS     reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    OR              reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    XOR             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    AND             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RCURL           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RSQUARE         reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    SEMICOLON       reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    FUNC            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    CONST           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    TYPE            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    VAR             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    $end            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RETURN          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    BREAK           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    CONTINUE        reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    GOTO            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    IF              reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    FOR             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    PRINT           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    SCAN            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    IDENTIFIER      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    SWITCH          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    NOT             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LPAREN          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    TRUE            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    FALSE           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    TYPECAST        reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LCURL           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    INTEGER         reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    OCTAL           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    HEX             reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RUNE            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    FLOAT           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    IMAGINARY       reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    STRING          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    CASE            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    DEFAULT         reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    COLON           reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    INCR            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    DECR            reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    AND_ASSIGN      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    OR_ASSIGN       reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    ASSIGN          reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! MOD             [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! STAR            [ reduce using rule 128 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 207

    (136) Expression -> Expression MINUS Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LOGICAL_AND     reduce using rule 136 (Expression -> Expression MINUS Expression .)
    EQUALS          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    NOT_ASSIGN      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LESSER          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    GREATER         reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LESS_EQUALS     reduce using rule 136 (Expression -> Expression MINUS Expression .)
    MORE_EQUALS     reduce using rule 136 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 136 (Expression -> Expression MINUS Expression .)
    XOR             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LSHIFT          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RSHIFT          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    AND             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RCURL           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RSQUARE         reduce using rule 136 (Expression -> Expression MINUS Expression .)
    SEMICOLON       reduce using rule 136 (Expression -> Expression MINUS Expression .)
    FUNC            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    CONST           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    TYPE            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    VAR             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    $end            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RETURN          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    BREAK           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    CONTINUE        reduce using rule 136 (Expression -> Expression MINUS Expression .)
    GOTO            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    IF              reduce using rule 136 (Expression -> Expression MINUS Expression .)
    FOR             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    PRINT           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    SCAN            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    IDENTIFIER      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    SWITCH          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    NOT             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LPAREN          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    TRUE            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    FALSE           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    TYPECAST        reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LCURL           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    INTEGER         reduce using rule 136 (Expression -> Expression MINUS Expression .)
    OCTAL           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    HEX             reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RUNE            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    FLOAT           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    IMAGINARY       reduce using rule 136 (Expression -> Expression MINUS Expression .)
    STRING          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    CASE            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    DEFAULT         reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 136 (Expression -> Expression MINUS Expression .)
    INCR            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    DECR            reduce using rule 136 (Expression -> Expression MINUS Expression .)
    PLUS_ASSIGN     reduce using rule 136 (Expression -> Expression MINUS Expression .)
    MINUS_ASSIGN    reduce using rule 136 (Expression -> Expression MINUS Expression .)
    STAR_ASSIGN     reduce using rule 136 (Expression -> Expression MINUS Expression .)
    DIVIDE_ASSIGN   reduce using rule 136 (Expression -> Expression MINUS Expression .)
    MOD_ASSIGN      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    AND_ASSIGN      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    OR_ASSIGN       reduce using rule 136 (Expression -> Expression MINUS Expression .)
    XOR_ASSIGN      reduce using rule 136 (Expression -> Expression MINUS Expression .)
    LSHIFT_ASSIGN   reduce using rule 136 (Expression -> Expression MINUS Expression .)
    RSHIFT_ASSIGN   reduce using rule 136 (Expression -> Expression MINUS Expression .)
    ASSIGN          reduce using rule 136 (Expression -> Expression MINUS Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 136 (Expression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 136 (Expression -> Expression MINUS Expression .) ]
  ! STAR            [ reduce using rule 136 (Expression -> Expression MINUS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! PLUS            [ shift and go to state 147 ]
  ! MINUS           [ shift and go to state 152 ]
  ! AND             [ shift and go to state 148 ]


state 208

    (123) Expression -> Expression EQUALS Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    LOGICAL_AND     reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    EQUALS          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    OR              reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    XOR             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    AND             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RCURL           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RSQUARE         reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    SEMICOLON       reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    FUNC            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    CONST           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    TYPE            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    VAR             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    $end            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RETURN          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    BREAK           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    CONTINUE        reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    GOTO            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    IF              reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    FOR             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    PRINT           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    SCAN            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    IDENTIFIER      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    SWITCH          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    NOT             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    LPAREN          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    TRUE            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    FALSE           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    TYPECAST        reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    LCURL           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    INTEGER         reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    OCTAL           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    HEX             reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RUNE            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    FLOAT           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    IMAGINARY       reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    STRING          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    CASE            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    DEFAULT         reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    COLON           reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    INCR            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    DECR            reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    AND_ASSIGN      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    OR_ASSIGN       reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    ASSIGN          reduce using rule 123 (Expression -> Expression EQUALS Expression .)
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! LESSER          [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! GREATER         [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! MOD             [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! STAR            [ reduce using rule 123 (Expression -> Expression EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 209

    (127) Expression -> Expression LESS_EQUALS Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LOGICAL_AND     reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    EQUALS          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LESSER          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    GREATER         reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LESS_EQUALS     reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    MORE_EQUALS     reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    OR              reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    XOR             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    AND             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RCURL           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RSQUARE         reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    SEMICOLON       reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    FUNC            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    CONST           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    TYPE            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    VAR             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    $end            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RETURN          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    BREAK           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    CONTINUE        reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    GOTO            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    IF              reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    FOR             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    PRINT           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    SCAN            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    IDENTIFIER      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    SWITCH          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    NOT             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LPAREN          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    TRUE            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    FALSE           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    TYPECAST        reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LCURL           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    INTEGER         reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    OCTAL           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    HEX             reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RUNE            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    FLOAT           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    IMAGINARY       reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    STRING          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    CASE            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    DEFAULT         reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    COLON           reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    INCR            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    DECR            reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    AND_ASSIGN      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    OR_ASSIGN       reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    ASSIGN          reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! MOD             [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! STAR            [ reduce using rule 127 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 210

    (132) Expression -> Expression MOD Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 132 (Expression -> Expression MOD Expression .)
    LOGICAL_AND     reduce using rule 132 (Expression -> Expression MOD Expression .)
    EQUALS          reduce using rule 132 (Expression -> Expression MOD Expression .)
    NOT_ASSIGN      reduce using rule 132 (Expression -> Expression MOD Expression .)
    LESSER          reduce using rule 132 (Expression -> Expression MOD Expression .)
    GREATER         reduce using rule 132 (Expression -> Expression MOD Expression .)
    LESS_EQUALS     reduce using rule 132 (Expression -> Expression MOD Expression .)
    MORE_EQUALS     reduce using rule 132 (Expression -> Expression MOD Expression .)
    OR              reduce using rule 132 (Expression -> Expression MOD Expression .)
    XOR             reduce using rule 132 (Expression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 132 (Expression -> Expression MOD Expression .)
    MOD             reduce using rule 132 (Expression -> Expression MOD Expression .)
    LSHIFT          reduce using rule 132 (Expression -> Expression MOD Expression .)
    RSHIFT          reduce using rule 132 (Expression -> Expression MOD Expression .)
    PLUS            reduce using rule 132 (Expression -> Expression MOD Expression .)
    MINUS           reduce using rule 132 (Expression -> Expression MOD Expression .)
    STAR            reduce using rule 132 (Expression -> Expression MOD Expression .)
    AND             reduce using rule 132 (Expression -> Expression MOD Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression MOD Expression .)
    RCURL           reduce using rule 132 (Expression -> Expression MOD Expression .)
    RSQUARE         reduce using rule 132 (Expression -> Expression MOD Expression .)
    SEMICOLON       reduce using rule 132 (Expression -> Expression MOD Expression .)
    FUNC            reduce using rule 132 (Expression -> Expression MOD Expression .)
    CONST           reduce using rule 132 (Expression -> Expression MOD Expression .)
    TYPE            reduce using rule 132 (Expression -> Expression MOD Expression .)
    VAR             reduce using rule 132 (Expression -> Expression MOD Expression .)
    $end            reduce using rule 132 (Expression -> Expression MOD Expression .)
    RETURN          reduce using rule 132 (Expression -> Expression MOD Expression .)
    BREAK           reduce using rule 132 (Expression -> Expression MOD Expression .)
    CONTINUE        reduce using rule 132 (Expression -> Expression MOD Expression .)
    GOTO            reduce using rule 132 (Expression -> Expression MOD Expression .)
    IF              reduce using rule 132 (Expression -> Expression MOD Expression .)
    FOR             reduce using rule 132 (Expression -> Expression MOD Expression .)
    PRINT           reduce using rule 132 (Expression -> Expression MOD Expression .)
    SCAN            reduce using rule 132 (Expression -> Expression MOD Expression .)
    IDENTIFIER      reduce using rule 132 (Expression -> Expression MOD Expression .)
    SWITCH          reduce using rule 132 (Expression -> Expression MOD Expression .)
    NOT             reduce using rule 132 (Expression -> Expression MOD Expression .)
    LPAREN          reduce using rule 132 (Expression -> Expression MOD Expression .)
    TRUE            reduce using rule 132 (Expression -> Expression MOD Expression .)
    FALSE           reduce using rule 132 (Expression -> Expression MOD Expression .)
    TYPECAST        reduce using rule 132 (Expression -> Expression MOD Expression .)
    LCURL           reduce using rule 132 (Expression -> Expression MOD Expression .)
    INTEGER         reduce using rule 132 (Expression -> Expression MOD Expression .)
    OCTAL           reduce using rule 132 (Expression -> Expression MOD Expression .)
    HEX             reduce using rule 132 (Expression -> Expression MOD Expression .)
    RUNE            reduce using rule 132 (Expression -> Expression MOD Expression .)
    FLOAT           reduce using rule 132 (Expression -> Expression MOD Expression .)
    IMAGINARY       reduce using rule 132 (Expression -> Expression MOD Expression .)
    STRING          reduce using rule 132 (Expression -> Expression MOD Expression .)
    CASE            reduce using rule 132 (Expression -> Expression MOD Expression .)
    DEFAULT         reduce using rule 132 (Expression -> Expression MOD Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression MOD Expression .)
    COLON           reduce using rule 132 (Expression -> Expression MOD Expression .)
    INCR            reduce using rule 132 (Expression -> Expression MOD Expression .)
    DECR            reduce using rule 132 (Expression -> Expression MOD Expression .)
    PLUS_ASSIGN     reduce using rule 132 (Expression -> Expression MOD Expression .)
    MINUS_ASSIGN    reduce using rule 132 (Expression -> Expression MOD Expression .)
    STAR_ASSIGN     reduce using rule 132 (Expression -> Expression MOD Expression .)
    DIVIDE_ASSIGN   reduce using rule 132 (Expression -> Expression MOD Expression .)
    MOD_ASSIGN      reduce using rule 132 (Expression -> Expression MOD Expression .)
    AND_ASSIGN      reduce using rule 132 (Expression -> Expression MOD Expression .)
    OR_ASSIGN       reduce using rule 132 (Expression -> Expression MOD Expression .)
    XOR_ASSIGN      reduce using rule 132 (Expression -> Expression MOD Expression .)
    LSHIFT_ASSIGN   reduce using rule 132 (Expression -> Expression MOD Expression .)
    RSHIFT_ASSIGN   reduce using rule 132 (Expression -> Expression MOD Expression .)
    ASSIGN          reduce using rule 132 (Expression -> Expression MOD Expression .)

  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! DIVIDE          [ shift and go to state 164 ]
  ! MOD             [ shift and go to state 155 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! PLUS            [ shift and go to state 147 ]
  ! MINUS           [ shift and go to state 152 ]
  ! STAR            [ shift and go to state 158 ]
  ! AND             [ shift and go to state 148 ]


state 211

    (125) Expression -> Expression LESSER Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LOGICAL_AND     reduce using rule 125 (Expression -> Expression LESSER Expression .)
    EQUALS          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    NOT_ASSIGN      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LESSER          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    GREATER         reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LESS_EQUALS     reduce using rule 125 (Expression -> Expression LESSER Expression .)
    MORE_EQUALS     reduce using rule 125 (Expression -> Expression LESSER Expression .)
    OR              reduce using rule 125 (Expression -> Expression LESSER Expression .)
    XOR             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    AND             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RCURL           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RSQUARE         reduce using rule 125 (Expression -> Expression LESSER Expression .)
    SEMICOLON       reduce using rule 125 (Expression -> Expression LESSER Expression .)
    FUNC            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    CONST           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    TYPE            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    VAR             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    $end            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RETURN          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    BREAK           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    CONTINUE        reduce using rule 125 (Expression -> Expression LESSER Expression .)
    GOTO            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    IF              reduce using rule 125 (Expression -> Expression LESSER Expression .)
    FOR             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    PRINT           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    SCAN            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    IDENTIFIER      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    SWITCH          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    NOT             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LPAREN          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    TRUE            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    FALSE           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    TYPECAST        reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LCURL           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    INTEGER         reduce using rule 125 (Expression -> Expression LESSER Expression .)
    OCTAL           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    HEX             reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RUNE            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    FLOAT           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    IMAGINARY       reduce using rule 125 (Expression -> Expression LESSER Expression .)
    STRING          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    CASE            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    DEFAULT         reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    COLON           reduce using rule 125 (Expression -> Expression LESSER Expression .)
    INCR            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    DECR            reduce using rule 125 (Expression -> Expression LESSER Expression .)
    PLUS_ASSIGN     reduce using rule 125 (Expression -> Expression LESSER Expression .)
    MINUS_ASSIGN    reduce using rule 125 (Expression -> Expression LESSER Expression .)
    STAR_ASSIGN     reduce using rule 125 (Expression -> Expression LESSER Expression .)
    DIVIDE_ASSIGN   reduce using rule 125 (Expression -> Expression LESSER Expression .)
    MOD_ASSIGN      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    AND_ASSIGN      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    OR_ASSIGN       reduce using rule 125 (Expression -> Expression LESSER Expression .)
    XOR_ASSIGN      reduce using rule 125 (Expression -> Expression LESSER Expression .)
    LSHIFT_ASSIGN   reduce using rule 125 (Expression -> Expression LESSER Expression .)
    RSHIFT_ASSIGN   reduce using rule 125 (Expression -> Expression LESSER Expression .)
    ASSIGN          reduce using rule 125 (Expression -> Expression LESSER Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! MOD             [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! LSHIFT          [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! RSHIFT          [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! PLUS            [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! MINUS           [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! STAR            [ reduce using rule 125 (Expression -> Expression LESSER Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 212

    (121) Expression -> Expression LOGICAL_OR Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RCURL           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RSQUARE         reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    SEMICOLON       reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    FUNC            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    CONST           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    TYPE            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    VAR             reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    $end            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RETURN          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    BREAK           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    CONTINUE        reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    GOTO            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    IF              reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    FOR             reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    PRINT           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    SCAN            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    IDENTIFIER      reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    SWITCH          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    NOT             reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    LPAREN          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    TRUE            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    FALSE           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    TYPECAST        reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    LCURL           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    INTEGER         reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    OCTAL           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    HEX             reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RUNE            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    FLOAT           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    IMAGINARY       reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    STRING          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    CASE            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    DEFAULT         reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    COLON           reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    INCR            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    DECR            reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    PLUS_ASSIGN     reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    MINUS_ASSIGN    reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    STAR_ASSIGN     reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    DIVIDE_ASSIGN   reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    MOD_ASSIGN      reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    AND_ASSIGN      reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    OR_ASSIGN       reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    XOR_ASSIGN      reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    LSHIFT_ASSIGN   reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    RSHIFT_ASSIGN   reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    ASSIGN          reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .)
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! LOGICAL_AND     [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! EQUALS          [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESSER          [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! GREATER         [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! OR              [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! XOR             [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MOD             [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LSHIFT          [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! RSHIFT          [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! PLUS            [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MINUS           [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! STAR            [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! AND             [ reduce using rule 121 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]


state 213

    (137) Expression -> Expression STAR Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 137 (Expression -> Expression STAR Expression .)
    LOGICAL_AND     reduce using rule 137 (Expression -> Expression STAR Expression .)
    EQUALS          reduce using rule 137 (Expression -> Expression STAR Expression .)
    NOT_ASSIGN      reduce using rule 137 (Expression -> Expression STAR Expression .)
    LESSER          reduce using rule 137 (Expression -> Expression STAR Expression .)
    GREATER         reduce using rule 137 (Expression -> Expression STAR Expression .)
    LESS_EQUALS     reduce using rule 137 (Expression -> Expression STAR Expression .)
    MORE_EQUALS     reduce using rule 137 (Expression -> Expression STAR Expression .)
    OR              reduce using rule 137 (Expression -> Expression STAR Expression .)
    XOR             reduce using rule 137 (Expression -> Expression STAR Expression .)
    DIVIDE          reduce using rule 137 (Expression -> Expression STAR Expression .)
    MOD             reduce using rule 137 (Expression -> Expression STAR Expression .)
    LSHIFT          reduce using rule 137 (Expression -> Expression STAR Expression .)
    RSHIFT          reduce using rule 137 (Expression -> Expression STAR Expression .)
    PLUS            reduce using rule 137 (Expression -> Expression STAR Expression .)
    MINUS           reduce using rule 137 (Expression -> Expression STAR Expression .)
    STAR            reduce using rule 137 (Expression -> Expression STAR Expression .)
    AND             reduce using rule 137 (Expression -> Expression STAR Expression .)
    COMMA           reduce using rule 137 (Expression -> Expression STAR Expression .)
    RCURL           reduce using rule 137 (Expression -> Expression STAR Expression .)
    RSQUARE         reduce using rule 137 (Expression -> Expression STAR Expression .)
    SEMICOLON       reduce using rule 137 (Expression -> Expression STAR Expression .)
    FUNC            reduce using rule 137 (Expression -> Expression STAR Expression .)
    CONST           reduce using rule 137 (Expression -> Expression STAR Expression .)
    TYPE            reduce using rule 137 (Expression -> Expression STAR Expression .)
    VAR             reduce using rule 137 (Expression -> Expression STAR Expression .)
    $end            reduce using rule 137 (Expression -> Expression STAR Expression .)
    RETURN          reduce using rule 137 (Expression -> Expression STAR Expression .)
    BREAK           reduce using rule 137 (Expression -> Expression STAR Expression .)
    CONTINUE        reduce using rule 137 (Expression -> Expression STAR Expression .)
    GOTO            reduce using rule 137 (Expression -> Expression STAR Expression .)
    IF              reduce using rule 137 (Expression -> Expression STAR Expression .)
    FOR             reduce using rule 137 (Expression -> Expression STAR Expression .)
    PRINT           reduce using rule 137 (Expression -> Expression STAR Expression .)
    SCAN            reduce using rule 137 (Expression -> Expression STAR Expression .)
    IDENTIFIER      reduce using rule 137 (Expression -> Expression STAR Expression .)
    SWITCH          reduce using rule 137 (Expression -> Expression STAR Expression .)
    NOT             reduce using rule 137 (Expression -> Expression STAR Expression .)
    LPAREN          reduce using rule 137 (Expression -> Expression STAR Expression .)
    TRUE            reduce using rule 137 (Expression -> Expression STAR Expression .)
    FALSE           reduce using rule 137 (Expression -> Expression STAR Expression .)
    TYPECAST        reduce using rule 137 (Expression -> Expression STAR Expression .)
    LCURL           reduce using rule 137 (Expression -> Expression STAR Expression .)
    INTEGER         reduce using rule 137 (Expression -> Expression STAR Expression .)
    OCTAL           reduce using rule 137 (Expression -> Expression STAR Expression .)
    HEX             reduce using rule 137 (Expression -> Expression STAR Expression .)
    RUNE            reduce using rule 137 (Expression -> Expression STAR Expression .)
    FLOAT           reduce using rule 137 (Expression -> Expression STAR Expression .)
    IMAGINARY       reduce using rule 137 (Expression -> Expression STAR Expression .)
    STRING          reduce using rule 137 (Expression -> Expression STAR Expression .)
    CASE            reduce using rule 137 (Expression -> Expression STAR Expression .)
    DEFAULT         reduce using rule 137 (Expression -> Expression STAR Expression .)
    RPAREN          reduce using rule 137 (Expression -> Expression STAR Expression .)
    COLON           reduce using rule 137 (Expression -> Expression STAR Expression .)
    INCR            reduce using rule 137 (Expression -> Expression STAR Expression .)
    DECR            reduce using rule 137 (Expression -> Expression STAR Expression .)
    PLUS_ASSIGN     reduce using rule 137 (Expression -> Expression STAR Expression .)
    MINUS_ASSIGN    reduce using rule 137 (Expression -> Expression STAR Expression .)
    STAR_ASSIGN     reduce using rule 137 (Expression -> Expression STAR Expression .)
    DIVIDE_ASSIGN   reduce using rule 137 (Expression -> Expression STAR Expression .)
    MOD_ASSIGN      reduce using rule 137 (Expression -> Expression STAR Expression .)
    AND_ASSIGN      reduce using rule 137 (Expression -> Expression STAR Expression .)
    OR_ASSIGN       reduce using rule 137 (Expression -> Expression STAR Expression .)
    XOR_ASSIGN      reduce using rule 137 (Expression -> Expression STAR Expression .)
    LSHIFT_ASSIGN   reduce using rule 137 (Expression -> Expression STAR Expression .)
    RSHIFT_ASSIGN   reduce using rule 137 (Expression -> Expression STAR Expression .)
    ASSIGN          reduce using rule 137 (Expression -> Expression STAR Expression .)

  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! DIVIDE          [ shift and go to state 164 ]
  ! MOD             [ shift and go to state 155 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! PLUS            [ shift and go to state 147 ]
  ! MINUS           [ shift and go to state 152 ]
  ! STAR            [ shift and go to state 158 ]
  ! AND             [ shift and go to state 148 ]


state 214

    (122) Expression -> Expression LOGICAL_AND Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    LOGICAL_AND     reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RCURL           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RSQUARE         reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    SEMICOLON       reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    FUNC            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    CONST           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    TYPE            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    VAR             reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    $end            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RETURN          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    BREAK           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    CONTINUE        reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    GOTO            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    IF              reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    FOR             reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    PRINT           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    SCAN            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    IDENTIFIER      reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    SWITCH          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    NOT             reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    LPAREN          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    TRUE            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    FALSE           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    TYPECAST        reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    LCURL           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    INTEGER         reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    OCTAL           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    HEX             reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RUNE            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    FLOAT           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    IMAGINARY       reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    STRING          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    CASE            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    DEFAULT         reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    COLON           reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    INCR            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    DECR            reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    PLUS_ASSIGN     reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    MINUS_ASSIGN    reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    STAR_ASSIGN     reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    DIVIDE_ASSIGN   reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    MOD_ASSIGN      reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    AND_ASSIGN      reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    OR_ASSIGN       reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    XOR_ASSIGN      reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    LSHIFT_ASSIGN   reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    RSHIFT_ASSIGN   reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    ASSIGN          reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .)
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! EQUALS          [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESSER          [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! GREATER         [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! OR              [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! XOR             [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MOD             [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LSHIFT          [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! RSHIFT          [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! PLUS            [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MINUS           [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! STAR            [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! AND             [ reduce using rule 122 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]


state 215

    (133) Expression -> Expression LSHIFT Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LOGICAL_AND     reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    EQUALS          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    NOT_ASSIGN      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LESSER          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    GREATER         reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LESS_EQUALS     reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    MORE_EQUALS     reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    OR              reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    XOR             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LSHIFT          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RSHIFT          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    AND             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    COMMA           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RCURL           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RSQUARE         reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    SEMICOLON       reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    FUNC            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    CONST           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    TYPE            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    VAR             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    $end            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RETURN          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    BREAK           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    CONTINUE        reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    GOTO            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    IF              reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    FOR             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    PRINT           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    SCAN            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    IDENTIFIER      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    SWITCH          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    NOT             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LPAREN          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    TRUE            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    FALSE           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    TYPECAST        reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LCURL           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    INTEGER         reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    OCTAL           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    HEX             reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RUNE            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    FLOAT           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    IMAGINARY       reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    STRING          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    CASE            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    DEFAULT         reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RPAREN          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    COLON           reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    INCR            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    DECR            reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    PLUS_ASSIGN     reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    MINUS_ASSIGN    reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    STAR_ASSIGN     reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    DIVIDE_ASSIGN   reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    MOD_ASSIGN      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    AND_ASSIGN      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    OR_ASSIGN       reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    XOR_ASSIGN      reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    LSHIFT_ASSIGN   reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    RSHIFT_ASSIGN   reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    ASSIGN          reduce using rule 133 (Expression -> Expression LSHIFT Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 133 (Expression -> Expression LSHIFT Expression .) ]
  ! MOD             [ reduce using rule 133 (Expression -> Expression LSHIFT Expression .) ]
  ! PLUS            [ reduce using rule 133 (Expression -> Expression LSHIFT Expression .) ]
  ! MINUS           [ reduce using rule 133 (Expression -> Expression LSHIFT Expression .) ]
  ! STAR            [ reduce using rule 133 (Expression -> Expression LSHIFT Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! AND             [ shift and go to state 148 ]


state 216

    (134) Expression -> Expression RSHIFT Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LOGICAL_AND     reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    EQUALS          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    NOT_ASSIGN      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LESSER          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    GREATER         reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LESS_EQUALS     reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    MORE_EQUALS     reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    OR              reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    XOR             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LSHIFT          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RSHIFT          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    AND             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    COMMA           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RCURL           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RSQUARE         reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    SEMICOLON       reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    FUNC            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    CONST           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    TYPE            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    VAR             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    $end            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RETURN          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    BREAK           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    CONTINUE        reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    GOTO            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    IF              reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    FOR             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    PRINT           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    SCAN            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    IDENTIFIER      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    SWITCH          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    NOT             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LPAREN          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    TRUE            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    FALSE           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    TYPECAST        reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LCURL           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    INTEGER         reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    OCTAL           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    HEX             reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RUNE            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    FLOAT           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    IMAGINARY       reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    STRING          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    CASE            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    DEFAULT         reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RPAREN          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    COLON           reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    INCR            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    DECR            reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    PLUS_ASSIGN     reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    MINUS_ASSIGN    reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    STAR_ASSIGN     reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    DIVIDE_ASSIGN   reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    MOD_ASSIGN      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    AND_ASSIGN      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    OR_ASSIGN       reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    XOR_ASSIGN      reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    LSHIFT_ASSIGN   reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    RSHIFT_ASSIGN   reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    ASSIGN          reduce using rule 134 (Expression -> Expression RSHIFT Expression .)
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! DIVIDE          [ reduce using rule 134 (Expression -> Expression RSHIFT Expression .) ]
  ! MOD             [ reduce using rule 134 (Expression -> Expression RSHIFT Expression .) ]
  ! PLUS            [ reduce using rule 134 (Expression -> Expression RSHIFT Expression .) ]
  ! MINUS           [ reduce using rule 134 (Expression -> Expression RSHIFT Expression .) ]
  ! STAR            [ reduce using rule 134 (Expression -> Expression RSHIFT Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! AND             [ shift and go to state 148 ]


state 217

    (124) Expression -> Expression NOT_ASSIGN Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    LOGICAL_AND     reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    EQUALS          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    NOT_ASSIGN      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    OR              reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    XOR             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    AND             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RCURL           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RSQUARE         reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    SEMICOLON       reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    FUNC            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    CONST           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    TYPE            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    VAR             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    $end            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RETURN          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    BREAK           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    CONTINUE        reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    GOTO            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    IF              reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    FOR             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    PRINT           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    SCAN            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    IDENTIFIER      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    SWITCH          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    NOT             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    LPAREN          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    TRUE            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    FALSE           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    TYPECAST        reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    LCURL           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    INTEGER         reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    OCTAL           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    HEX             reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RUNE            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    FLOAT           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    IMAGINARY       reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    STRING          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    CASE            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    DEFAULT         reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    COLON           reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    INCR            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    DECR            reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    PLUS_ASSIGN     reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    MINUS_ASSIGN    reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    STAR_ASSIGN     reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    DIVIDE_ASSIGN   reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    MOD_ASSIGN      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    AND_ASSIGN      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    OR_ASSIGN       reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    XOR_ASSIGN      reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    LSHIFT_ASSIGN   reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    RSHIFT_ASSIGN   reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    ASSIGN          reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .)
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158

  ! LESSER          [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! GREATER         [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MOD             [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LSHIFT          [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! RSHIFT          [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! PLUS            [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MINUS           [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! STAR            [ reduce using rule 124 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! AND             [ shift and go to state 148 ]


state 218

    (129) Expression -> Expression OR Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 129 (Expression -> Expression OR Expression .)
    LOGICAL_AND     reduce using rule 129 (Expression -> Expression OR Expression .)
    OR              reduce using rule 129 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression OR Expression .)
    RCURL           reduce using rule 129 (Expression -> Expression OR Expression .)
    RSQUARE         reduce using rule 129 (Expression -> Expression OR Expression .)
    SEMICOLON       reduce using rule 129 (Expression -> Expression OR Expression .)
    FUNC            reduce using rule 129 (Expression -> Expression OR Expression .)
    CONST           reduce using rule 129 (Expression -> Expression OR Expression .)
    TYPE            reduce using rule 129 (Expression -> Expression OR Expression .)
    VAR             reduce using rule 129 (Expression -> Expression OR Expression .)
    $end            reduce using rule 129 (Expression -> Expression OR Expression .)
    RETURN          reduce using rule 129 (Expression -> Expression OR Expression .)
    BREAK           reduce using rule 129 (Expression -> Expression OR Expression .)
    CONTINUE        reduce using rule 129 (Expression -> Expression OR Expression .)
    GOTO            reduce using rule 129 (Expression -> Expression OR Expression .)
    IF              reduce using rule 129 (Expression -> Expression OR Expression .)
    FOR             reduce using rule 129 (Expression -> Expression OR Expression .)
    PRINT           reduce using rule 129 (Expression -> Expression OR Expression .)
    SCAN            reduce using rule 129 (Expression -> Expression OR Expression .)
    IDENTIFIER      reduce using rule 129 (Expression -> Expression OR Expression .)
    SWITCH          reduce using rule 129 (Expression -> Expression OR Expression .)
    NOT             reduce using rule 129 (Expression -> Expression OR Expression .)
    LPAREN          reduce using rule 129 (Expression -> Expression OR Expression .)
    TRUE            reduce using rule 129 (Expression -> Expression OR Expression .)
    FALSE           reduce using rule 129 (Expression -> Expression OR Expression .)
    TYPECAST        reduce using rule 129 (Expression -> Expression OR Expression .)
    LCURL           reduce using rule 129 (Expression -> Expression OR Expression .)
    INTEGER         reduce using rule 129 (Expression -> Expression OR Expression .)
    OCTAL           reduce using rule 129 (Expression -> Expression OR Expression .)
    HEX             reduce using rule 129 (Expression -> Expression OR Expression .)
    RUNE            reduce using rule 129 (Expression -> Expression OR Expression .)
    FLOAT           reduce using rule 129 (Expression -> Expression OR Expression .)
    IMAGINARY       reduce using rule 129 (Expression -> Expression OR Expression .)
    STRING          reduce using rule 129 (Expression -> Expression OR Expression .)
    CASE            reduce using rule 129 (Expression -> Expression OR Expression .)
    DEFAULT         reduce using rule 129 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 129 (Expression -> Expression OR Expression .)
    INCR            reduce using rule 129 (Expression -> Expression OR Expression .)
    DECR            reduce using rule 129 (Expression -> Expression OR Expression .)
    PLUS_ASSIGN     reduce using rule 129 (Expression -> Expression OR Expression .)
    MINUS_ASSIGN    reduce using rule 129 (Expression -> Expression OR Expression .)
    STAR_ASSIGN     reduce using rule 129 (Expression -> Expression OR Expression .)
    DIVIDE_ASSIGN   reduce using rule 129 (Expression -> Expression OR Expression .)
    MOD_ASSIGN      reduce using rule 129 (Expression -> Expression OR Expression .)
    AND_ASSIGN      reduce using rule 129 (Expression -> Expression OR Expression .)
    OR_ASSIGN       reduce using rule 129 (Expression -> Expression OR Expression .)
    XOR_ASSIGN      reduce using rule 129 (Expression -> Expression OR Expression .)
    LSHIFT_ASSIGN   reduce using rule 129 (Expression -> Expression OR Expression .)
    RSHIFT_ASSIGN   reduce using rule 129 (Expression -> Expression OR Expression .)
    ASSIGN          reduce using rule 129 (Expression -> Expression OR Expression .)
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! EQUALS          [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! LESSER          [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! GREATER         [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! XOR             [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! MOD             [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! LSHIFT          [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! RSHIFT          [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! PLUS            [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! MINUS           [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! STAR            [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 129 (Expression -> Expression OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! OR              [ shift and go to state 163 ]


state 219

    (131) Expression -> Expression DIVIDE Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LOGICAL_AND     reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    EQUALS          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    NOT_ASSIGN      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LESSER          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    GREATER         reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LESS_EQUALS     reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    MORE_EQUALS     reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    XOR             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LSHIFT          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RSHIFT          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    STAR            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    AND             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RCURL           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RSQUARE         reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    SEMICOLON       reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    FUNC            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    CONST           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    TYPE            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    VAR             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    $end            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RETURN          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    BREAK           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    CONTINUE        reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    GOTO            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    IF              reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    FOR             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    PRINT           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    SCAN            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    IDENTIFIER      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    SWITCH          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    NOT             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LPAREN          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    TRUE            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    FALSE           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    TYPECAST        reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LCURL           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    INTEGER         reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    OCTAL           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    HEX             reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RUNE            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    FLOAT           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    IMAGINARY       reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    STRING          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    CASE            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    DEFAULT         reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    INCR            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    DECR            reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    PLUS_ASSIGN     reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    MINUS_ASSIGN    reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    STAR_ASSIGN     reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    DIVIDE_ASSIGN   reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    MOD_ASSIGN      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    AND_ASSIGN      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    OR_ASSIGN       reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    XOR_ASSIGN      reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    LSHIFT_ASSIGN   reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    RSHIFT_ASSIGN   reduce using rule 131 (Expression -> Expression DIVIDE Expression .)
    ASSIGN          reduce using rule 131 (Expression -> Expression DIVIDE Expression .)

  ! LOGICAL_OR      [ shift and go to state 157 ]
  ! LOGICAL_AND     [ shift and go to state 159 ]
  ! EQUALS          [ shift and go to state 153 ]
  ! NOT_ASSIGN      [ shift and go to state 162 ]
  ! LESSER          [ shift and go to state 156 ]
  ! GREATER         [ shift and go to state 150 ]
  ! LESS_EQUALS     [ shift and go to state 154 ]
  ! MORE_EQUALS     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 163 ]
  ! XOR             [ shift and go to state 149 ]
  ! DIVIDE          [ shift and go to state 164 ]
  ! MOD             [ shift and go to state 155 ]
  ! LSHIFT          [ shift and go to state 160 ]
  ! RSHIFT          [ shift and go to state 161 ]
  ! PLUS            [ shift and go to state 147 ]
  ! MINUS           [ shift and go to state 152 ]
  ! STAR            [ shift and go to state 158 ]
  ! AND             [ shift and go to state 148 ]


state 220

    (148) Conversion -> TYPECAST Type LPAREN . Expression RPAREN
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 242

state 221

    (109) PrimaryExpr -> IDENTIFIER LCURL StructFieldList . RCURL SemiColonOpt

    RCURL           shift and go to state 243


state 222

    (111) StructFieldList -> epsilon .

    RCURL           reduce using rule 111 (StructFieldList -> epsilon .)


state 223

    (110) StructFieldList -> IDENTIFIER . COLON Expression StructFieldRep

    COLON           shift and go to state 244


state 224

    (119) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 119 (ExpressionListTypeOpt -> epsilon .)


state 225

    (118) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 118 (ExpressionListTypeOpt -> ExpressionList .)


state 226

    (108) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 245


state 227

    (115) Slice -> LSQUARE ExpressionOpt . COLON ExpressionOpt RSQUARE
    (116) Slice -> LSQUARE ExpressionOpt . COLON Expression COLON Expression RSQUARE

    COLON           shift and go to state 246


state 228

    (140) ExpressionOpt -> epsilon .

    RSQUARE         reduce using rule 140 (ExpressionOpt -> epsilon .)
    COLON           reduce using rule 140 (ExpressionOpt -> epsilon .)


state 229

    (105) PrimaryExpr -> PrimaryExpr LSQUARE Expression . RSQUARE
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (139) ExpressionOpt -> Expression .

    RSQUARE         shift and go to state 247
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    COLON           reduce using rule 139 (ExpressionOpt -> Expression .)


state 230

    (114) Selector -> DOT IDENTIFIER .

    LSQUARE         reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    DOT             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LOGICAL_OR      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LOGICAL_AND     reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    EQUALS          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LESSER          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    GREATER         reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LESS_EQUALS     reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    MORE_EQUALS     reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    XOR             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LSHIFT          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RSHIFT          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    STAR            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    AND             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RSQUARE         reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    FUNC            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    CONST           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    TYPE            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    VAR             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    $end            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RETURN          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    BREAK           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    CONTINUE        reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    GOTO            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    IF              reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    FOR             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    PRINT           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    SCAN            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    IDENTIFIER      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    SWITCH          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    NOT             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    TRUE            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    FALSE           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    TYPECAST        reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LCURL           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    INTEGER         reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    OCTAL           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    HEX             reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RUNE            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    FLOAT           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    IMAGINARY       reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    STRING          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RCURL           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    CASE            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    DEFAULT         reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    INCR            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    DECR            reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 114 (Selector -> DOT IDENTIFIER .)
    ASSIGN          reduce using rule 114 (Selector -> DOT IDENTIFIER .)


state 231

    (117) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 248
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 232

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep . RCURL EndScope
    (24) FieldDeclRep -> FieldDeclRep . FieldDecl SemiColonOpt
    (26) FieldDecl -> . IdentifierList Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RCURL           shift and go to state 250
    IDENTIFIER      shift and go to state 36

    FieldDecl                      shift and go to state 249
    IdentifierList                 shift and go to state 251

state 233

    (25) FieldDeclRep -> epsilon .

    RCURL           reduce using rule 25 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 25 (FieldDeclRep -> epsilon .)


state 234

    (40) StatementList -> StatementRep .
    (41) StatementRep -> StatementRep . Statement SemiColonOpt
    (149) Statement -> . Declaration
    (150) Statement -> . LabeledStmt
    (151) Statement -> . SimpleStmt
    (152) Statement -> . ReturnStmt
    (153) Statement -> . BreakStmt
    (154) Statement -> . ContinueStmt
    (155) Statement -> . GotoStmt
    (156) Statement -> . CreateScope Block EndScope
    (157) Statement -> . IfStmt
    (158) Statement -> . SwitchStmt
    (159) Statement -> . ForStmt
    (160) Statement -> . PrintStmt
    (161) Statement -> . ScanStmt
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (169) LabeledStmt -> . Label COLON Statement
    (164) SimpleStmt -> . epsilon
    (165) SimpleStmt -> . ExpressionStmt
    (166) SimpleStmt -> . IncDecStmt
    (167) SimpleStmt -> . Assignment
    (168) SimpleStmt -> . ShortVarDecl
    (209) ReturnStmt -> . RETURN ExpressionPureOpt
    (212) BreakStmt -> . BREAK LabelOpt
    (213) ContinueStmt -> . CONTINUE LabelOpt
    (216) GotoStmt -> . GOTO Label
    (77) CreateScope -> .
    (187) IfStmt -> . IF Expression CreateScopeIf Block EndScope ElseOpt
    (192) SwitchStmt -> . ExprSwitchStmt
    (200) ForStmt -> . FOR CreateScopeFor ConditionBlockOpt Block EndScope
    (162) PrintStmt -> . PRINT Expression
    (163) ScanStmt -> . SCAN Expression
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (170) Label -> . IDENTIFIER
    (235) epsilon -> .
    (171) ExpressionStmt -> . Expression
    (172) IncDecStmt -> . Expression INCR
    (173) IncDecStmt -> . Expression DECR
    (174) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (193) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for LCURL resolved using rule 77 (CreateScope -> .)
  ! reduce/reduce conflict for RCURL resolved using rule 40 (StatementList -> StatementRep .)
  ! reduce/reduce conflict for CASE resolved using rule 40 (StatementList -> StatementRep .)
  ! reduce/reduce conflict for DEFAULT resolved using rule 40 (StatementList -> StatementRep .)
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for TYPECAST resolved as shift
  ! reduce/reduce conflict for INTEGER resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for OCTAL resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for HEX resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for RUNE resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 96 (F -> .)
  ! reduce/reduce conflict for IMAGINARY resolved using rule 97 (C -> .)
  ! reduce/reduce conflict for STRING resolved using rule 98 (S -> .)
    RCURL           reduce using rule 40 (StatementList -> StatementRep .)
    CASE            reduce using rule 40 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 40 (StatementList -> StatementRep .)
    RETURN          shift and go to state 261
    BREAK           shift and go to state 276
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 258
    LCURL           reduce using rule 77 (CreateScope -> .)
    IF              shift and go to state 283
    FOR             shift and go to state 267
    PRINT           shift and go to state 264
    SCAN            shift and go to state 278
    CONST           shift and go to state 16
    TYPE            shift and go to state 25
    VAR             shift and go to state 23
    IDENTIFIER      shift and go to state 272
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    SWITCH          shift and go to state 270
    NOT             shift and go to state 104
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

  ! RETURN          [ reduce using rule 235 (epsilon -> .) ]
  ! BREAK           [ reduce using rule 235 (epsilon -> .) ]
  ! CONTINUE        [ reduce using rule 235 (epsilon -> .) ]
  ! GOTO            [ reduce using rule 235 (epsilon -> .) ]
  ! IF              [ reduce using rule 235 (epsilon -> .) ]
  ! FOR             [ reduce using rule 235 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 235 (epsilon -> .) ]
  ! SCAN            [ reduce using rule 235 (epsilon -> .) ]
  ! CONST           [ reduce using rule 235 (epsilon -> .) ]
  ! TYPE            [ reduce using rule 235 (epsilon -> .) ]
  ! VAR             [ reduce using rule 235 (epsilon -> .) ]
  ! IDENTIFIER      [ reduce using rule 235 (epsilon -> .) ]
  ! SWITCH          [ reduce using rule 235 (epsilon -> .) ]
  ! NOT             [ reduce using rule 235 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 235 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 235 (epsilon -> .) ]
  ! STAR            [ reduce using rule 235 (epsilon -> .) ]
  ! AND             [ reduce using rule 235 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 235 (epsilon -> .) ]
  ! TRUE            [ reduce using rule 235 (epsilon -> .) ]
  ! FALSE           [ reduce using rule 235 (epsilon -> .) ]
  ! TYPECAST        [ reduce using rule 235 (epsilon -> .) ]
  ! LCURL           [ reduce using rule 235 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 235 (epsilon -> .) ]
  ! OCTAL           [ reduce using rule 235 (epsilon -> .) ]
  ! HEX             [ reduce using rule 235 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 235 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 235 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 235 (epsilon -> .) ]
  ! STRING          [ reduce using rule 235 (epsilon -> .) ]
  ! RCURL           [ reduce using rule 235 (epsilon -> .) ]
  ! CASE            [ reduce using rule 235 (epsilon -> .) ]
  ! DEFAULT         [ reduce using rule 235 (epsilon -> .) ]

    UnaryOp                        shift and go to state 92
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 90
    SimpleStmt                     shift and go to state 279
    Label                          shift and go to state 262
    BoolConstant                   shift and go to state 93
    ExpressionStmt                 shift and go to state 253
    ForStmt                        shift and go to state 280
    ScanStmt                       shift and go to state 254
    Statement                      shift and go to state 255
    IfStmt                         shift and go to state 265
    OperandName                    shift and go to state 98
    Assignment                     shift and go to state 256
    ShortVarDecl                   shift and go to state 282
    I                              shift and go to state 102
    IncDecStmt                     shift and go to state 257
    Declaration                    shift and go to state 271
    CreateScope                    shift and go to state 281
    GotoStmt                       shift and go to state 266
    C                              shift and go to state 100
    TypeDecl                       shift and go to state 21
    F                              shift and go to state 101
    LabeledStmt                    shift and go to state 259
    epsilon                        shift and go to state 273
    UnaryExpr                      shift and go to state 103
    Operand                        shift and go to state 114
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 274
    Literal                        shift and go to state 94
    Expression                     shift and go to state 275
    ReturnStmt                     shift and go to state 277
    BreakStmt                      shift and go to state 284
    SwitchStmt                     shift and go to state 268
    VarDecl                        shift and go to state 24
    PrintStmt                      shift and go to state 260
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    ConstDecl                      shift and go to state 20
    ExprSwitchStmt                 shift and go to state 263

state 235

    (42) StatementRep -> epsilon .

    RETURN          reduce using rule 42 (StatementRep -> epsilon .)
    BREAK           reduce using rule 42 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 42 (StatementRep -> epsilon .)
    GOTO            reduce using rule 42 (StatementRep -> epsilon .)
    IF              reduce using rule 42 (StatementRep -> epsilon .)
    FOR             reduce using rule 42 (StatementRep -> epsilon .)
    PRINT           reduce using rule 42 (StatementRep -> epsilon .)
    SCAN            reduce using rule 42 (StatementRep -> epsilon .)
    CONST           reduce using rule 42 (StatementRep -> epsilon .)
    TYPE            reduce using rule 42 (StatementRep -> epsilon .)
    VAR             reduce using rule 42 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 42 (StatementRep -> epsilon .)
    NOT             reduce using rule 42 (StatementRep -> epsilon .)
    PLUS            reduce using rule 42 (StatementRep -> epsilon .)
    MINUS           reduce using rule 42 (StatementRep -> epsilon .)
    STAR            reduce using rule 42 (StatementRep -> epsilon .)
    AND             reduce using rule 42 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 42 (StatementRep -> epsilon .)
    TRUE            reduce using rule 42 (StatementRep -> epsilon .)
    FALSE           reduce using rule 42 (StatementRep -> epsilon .)
    TYPECAST        reduce using rule 42 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 42 (StatementRep -> epsilon .)
    LCURL           reduce using rule 42 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 42 (StatementRep -> epsilon .)
    OCTAL           reduce using rule 42 (StatementRep -> epsilon .)
    HEX             reduce using rule 42 (StatementRep -> epsilon .)
    RUNE            reduce using rule 42 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 42 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 42 (StatementRep -> epsilon .)
    STRING          reduce using rule 42 (StatementRep -> epsilon .)
    RCURL           reduce using rule 42 (StatementRep -> epsilon .)
    CASE            reduce using rule 42 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 42 (StatementRep -> epsilon .)


state 236

    (39) Block -> LCURL StatementList . RCURL

    RCURL           shift and go to state 285


state 237

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    INT             reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FLOAT           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    UINT            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMPLEX         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RUNE            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    BOOL            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPE            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IDENTIFIER      reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LSQUARE         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STAR            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LCURL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOLON       reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FUNC            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    CONST           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    VAR             reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    $end            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 238

    (37) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 37 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 37 (ParameterDecl -> IdentifierList Type .)


state 239

    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    IDENTIFIER      shift and go to state 191
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    ParameterDecl                  shift and go to state 286
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    TypeLit                        shift and go to state 60
    IdentifierList                 shift and go to state 187
    PointerType                    shift and go to state 70
    Type                           shift and go to state 189
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 240

    (36) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    IDENTIFIER      shift and go to state 191
    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    TypeLit                        shift and go to state 60
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    IdentifierList                 shift and go to state 187
    PointerType                    shift and go to state 70
    Type                           shift and go to state 189
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73
    ParameterDecl                  shift and go to state 287

state 241

    (57) ExpressionRep -> ExpressionRep COMMA . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 288
    Operand                        shift and go to state 114

state 242

    (148) Conversion -> TYPECAST Type LPAREN Expression . RPAREN
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 289
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 243

    (109) PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 5
    LSQUARE         reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    DOT             reduce using rule 235 (epsilon -> .)
    LOGICAL_OR      reduce using rule 235 (epsilon -> .)
    LOGICAL_AND     reduce using rule 235 (epsilon -> .)
    EQUALS          reduce using rule 235 (epsilon -> .)
    NOT_ASSIGN      reduce using rule 235 (epsilon -> .)
    LESSER          reduce using rule 235 (epsilon -> .)
    GREATER         reduce using rule 235 (epsilon -> .)
    LESS_EQUALS     reduce using rule 235 (epsilon -> .)
    MORE_EQUALS     reduce using rule 235 (epsilon -> .)
    OR              reduce using rule 235 (epsilon -> .)
    XOR             reduce using rule 235 (epsilon -> .)
    DIVIDE          reduce using rule 235 (epsilon -> .)
    MOD             reduce using rule 235 (epsilon -> .)
    LSHIFT          reduce using rule 235 (epsilon -> .)
    RSHIFT          reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    RSQUARE         reduce using rule 235 (epsilon -> .)
    COMMA           reduce using rule 235 (epsilon -> .)
    FUNC            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    $end            reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)
    RPAREN          reduce using rule 235 (epsilon -> .)
    COLON           reduce using rule 235 (epsilon -> .)
    INCR            reduce using rule 235 (epsilon -> .)
    DECR            reduce using rule 235 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 235 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 235 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 235 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 235 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 235 (epsilon -> .)
    AND_ASSIGN      reduce using rule 235 (epsilon -> .)
    OR_ASSIGN       reduce using rule 235 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 235 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    ASSIGN          reduce using rule 235 (epsilon -> .)

  ! SEMICOLON       [ reduce using rule 235 (epsilon -> .) ]

    epsilon                        shift and go to state 6
    SemiColonOpt                   shift and go to state 290

state 244

    (110) StructFieldList -> IDENTIFIER COLON . Expression StructFieldRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 291
    Operand                        shift and go to state 114

state 245

    (108) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .

    LSQUARE         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DOT             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_OR      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_AND     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    EQUALS          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    NOT_ASSIGN      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESSER          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    GREATER         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESS_EQUALS     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MORE_EQUALS     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    STAR            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSQUARE         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    FUNC            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    CONST           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    TYPE            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    VAR             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    $end            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RETURN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    BREAK           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    CONTINUE        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    GOTO            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    IF              reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    FOR             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PRINT           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    SCAN            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    IDENTIFIER      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    SWITCH          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    NOT             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    TRUE            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    FALSE           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    TYPECAST        reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LCURL           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    INTEGER         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OCTAL           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    HEX             reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RUNE            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    FLOAT           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    IMAGINARY       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    STRING          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RCURL           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    CASE            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DEFAULT         reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    INCR            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DECR            reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS_ASSIGN     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS_ASSIGN    reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    STAR_ASSIGN     reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MOD_ASSIGN      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    AND_ASSIGN      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OR_ASSIGN       reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOR_ASSIGN      reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    ASSIGN          reduce using rule 108 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)


state 246

    (115) Slice -> LSQUARE ExpressionOpt COLON . ExpressionOpt RSQUARE
    (116) Slice -> LSQUARE ExpressionOpt COLON . Expression COLON Expression RSQUARE
    (139) ExpressionOpt -> . Expression
    (140) ExpressionOpt -> . epsilon
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (235) epsilon -> .
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    RSQUARE         reduce using rule 235 (epsilon -> .)
    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    ExpressionOpt                  shift and go to state 292
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 228
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 293
    Operand                        shift and go to state 114

state 247

    (105) PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .

    LSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    EQUALS          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESSER          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    GREATER         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OR              reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOR             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MOD             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUS           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    STAR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    AND             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COMMA           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    SEMICOLON       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    FUNC            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    CONST           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    TYPE            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    VAR             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    $end            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RETURN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    BREAK           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    CONTINUE        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    GOTO            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    IF              reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    FOR             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PRINT           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    SCAN            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    IDENTIFIER      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    SWITCH          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    NOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    TRUE            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    FALSE           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    TYPECAST        reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LCURL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    INTEGER         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OCTAL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    HEX             reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RUNE            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    FLOAT           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    IMAGINARY       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    STRING          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RCURL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    CASE            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DEFAULT         reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COLON           reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    INCR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DECR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    ASSIGN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)


state 248

    (117) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 294


state 249

    (24) FieldDeclRep -> FieldDeclRep FieldDecl . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

    SEMICOLON       shift and go to state 5
    RCURL           reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)

    SemiColonOpt                   shift and go to state 295
    epsilon                        shift and go to state 6

state 250

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL . EndScope
    (78) EndScope -> .

    ASSIGN          reduce using rule 78 (EndScope -> .)
    SEMICOLON       reduce using rule 78 (EndScope -> .)
    FUNC            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    $end            reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)
    RPAREN          reduce using rule 78 (EndScope -> .)
    COMMA           reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 296

state 251

    (26) FieldDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT
    (8) TypeToken -> . FLOAT
    (9) TypeToken -> . UINT
    (10) TypeToken -> . COMPLEX
    (11) TypeToken -> . RUNE
    (12) TypeToken -> . BOOL
    (13) TypeToken -> . STRING
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 66
    INT             shift and go to state 67
    FLOAT           shift and go to state 68
    UINT            shift and go to state 71
    COMPLEX         shift and go to state 56
    RUNE            shift and go to state 62
    BOOL            shift and go to state 69
    STRING          shift and go to state 65
    TYPE            shift and go to state 72
    IDENTIFIER      shift and go to state 63
    LSQUARE         shift and go to state 54
    STAR            shift and go to state 53
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    StructType                     shift and go to state 64
    TypeToken                      shift and go to state 59
    Type                           shift and go to state 297
    ArrayType                      shift and go to state 55
    TypeName                       shift and go to state 61
    PointerType                    shift and go to state 70
    TypeLit                        shift and go to state 60
    CreateFuncScope                shift and go to state 58
    QualifiedIdent                 shift and go to state 73

state 252

    (154) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 154 (Statement -> ContinueStmt .)
    RETURN          reduce using rule 154 (Statement -> ContinueStmt .)
    BREAK           reduce using rule 154 (Statement -> ContinueStmt .)
    CONTINUE        reduce using rule 154 (Statement -> ContinueStmt .)
    GOTO            reduce using rule 154 (Statement -> ContinueStmt .)
    IF              reduce using rule 154 (Statement -> ContinueStmt .)
    FOR             reduce using rule 154 (Statement -> ContinueStmt .)
    PRINT           reduce using rule 154 (Statement -> ContinueStmt .)
    SCAN            reduce using rule 154 (Statement -> ContinueStmt .)
    CONST           reduce using rule 154 (Statement -> ContinueStmt .)
    TYPE            reduce using rule 154 (Statement -> ContinueStmt .)
    VAR             reduce using rule 154 (Statement -> ContinueStmt .)
    IDENTIFIER      reduce using rule 154 (Statement -> ContinueStmt .)
    SWITCH          reduce using rule 154 (Statement -> ContinueStmt .)
    NOT             reduce using rule 154 (Statement -> ContinueStmt .)
    PLUS            reduce using rule 154 (Statement -> ContinueStmt .)
    MINUS           reduce using rule 154 (Statement -> ContinueStmt .)
    STAR            reduce using rule 154 (Statement -> ContinueStmt .)
    AND             reduce using rule 154 (Statement -> ContinueStmt .)
    LPAREN          reduce using rule 154 (Statement -> ContinueStmt .)
    TRUE            reduce using rule 154 (Statement -> ContinueStmt .)
    FALSE           reduce using rule 154 (Statement -> ContinueStmt .)
    TYPECAST        reduce using rule 154 (Statement -> ContinueStmt .)
    LCURL           reduce using rule 154 (Statement -> ContinueStmt .)
    INTEGER         reduce using rule 154 (Statement -> ContinueStmt .)
    OCTAL           reduce using rule 154 (Statement -> ContinueStmt .)
    HEX             reduce using rule 154 (Statement -> ContinueStmt .)
    RUNE            reduce using rule 154 (Statement -> ContinueStmt .)
    FLOAT           reduce using rule 154 (Statement -> ContinueStmt .)
    IMAGINARY       reduce using rule 154 (Statement -> ContinueStmt .)
    STRING          reduce using rule 154 (Statement -> ContinueStmt .)
    RCURL           reduce using rule 154 (Statement -> ContinueStmt .)
    CASE            reduce using rule 154 (Statement -> ContinueStmt .)
    DEFAULT         reduce using rule 154 (Statement -> ContinueStmt .)


state 253

    (165) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    RETURN          reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    BREAK           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    CONTINUE        reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    GOTO            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    IF              reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    FOR             reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    PRINT           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    SCAN            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    CONST           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    TYPE            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    VAR             reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    IDENTIFIER      reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    SWITCH          reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    NOT             reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    PLUS            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    MINUS           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    STAR            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    AND             reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    LPAREN          reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    TRUE            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    FALSE           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    TYPECAST        reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    LCURL           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    INTEGER         reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    OCTAL           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    HEX             reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    RUNE            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    FLOAT           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    IMAGINARY       reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    STRING          reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    RCURL           reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    CASE            reduce using rule 165 (SimpleStmt -> ExpressionStmt .)
    DEFAULT         reduce using rule 165 (SimpleStmt -> ExpressionStmt .)


state 254

    (161) Statement -> ScanStmt .

    SEMICOLON       reduce using rule 161 (Statement -> ScanStmt .)
    RETURN          reduce using rule 161 (Statement -> ScanStmt .)
    BREAK           reduce using rule 161 (Statement -> ScanStmt .)
    CONTINUE        reduce using rule 161 (Statement -> ScanStmt .)
    GOTO            reduce using rule 161 (Statement -> ScanStmt .)
    IF              reduce using rule 161 (Statement -> ScanStmt .)
    FOR             reduce using rule 161 (Statement -> ScanStmt .)
    PRINT           reduce using rule 161 (Statement -> ScanStmt .)
    SCAN            reduce using rule 161 (Statement -> ScanStmt .)
    CONST           reduce using rule 161 (Statement -> ScanStmt .)
    TYPE            reduce using rule 161 (Statement -> ScanStmt .)
    VAR             reduce using rule 161 (Statement -> ScanStmt .)
    IDENTIFIER      reduce using rule 161 (Statement -> ScanStmt .)
    SWITCH          reduce using rule 161 (Statement -> ScanStmt .)
    NOT             reduce using rule 161 (Statement -> ScanStmt .)
    PLUS            reduce using rule 161 (Statement -> ScanStmt .)
    MINUS           reduce using rule 161 (Statement -> ScanStmt .)
    STAR            reduce using rule 161 (Statement -> ScanStmt .)
    AND             reduce using rule 161 (Statement -> ScanStmt .)
    LPAREN          reduce using rule 161 (Statement -> ScanStmt .)
    TRUE            reduce using rule 161 (Statement -> ScanStmt .)
    FALSE           reduce using rule 161 (Statement -> ScanStmt .)
    TYPECAST        reduce using rule 161 (Statement -> ScanStmt .)
    LCURL           reduce using rule 161 (Statement -> ScanStmt .)
    INTEGER         reduce using rule 161 (Statement -> ScanStmt .)
    OCTAL           reduce using rule 161 (Statement -> ScanStmt .)
    HEX             reduce using rule 161 (Statement -> ScanStmt .)
    RUNE            reduce using rule 161 (Statement -> ScanStmt .)
    FLOAT           reduce using rule 161 (Statement -> ScanStmt .)
    IMAGINARY       reduce using rule 161 (Statement -> ScanStmt .)
    STRING          reduce using rule 161 (Statement -> ScanStmt .)
    RCURL           reduce using rule 161 (Statement -> ScanStmt .)
    CASE            reduce using rule 161 (Statement -> ScanStmt .)
    DEFAULT         reduce using rule 161 (Statement -> ScanStmt .)


state 255

    (41) StatementRep -> StatementRep Statement . SemiColonOpt
    (217) SemiColonOpt -> . SEMICOLON
    (218) SemiColonOpt -> . epsilon
    (235) epsilon -> .

  ! shift/reduce conflict for SEMICOLON resolved as shift
    SEMICOLON       shift and go to state 5
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

  ! SEMICOLON       [ reduce using rule 235 (epsilon -> .) ]

    epsilon                        shift and go to state 6
    SemiColonOpt                   shift and go to state 298

state 256

    (167) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 167 (SimpleStmt -> Assignment .)
    RETURN          reduce using rule 167 (SimpleStmt -> Assignment .)
    BREAK           reduce using rule 167 (SimpleStmt -> Assignment .)
    CONTINUE        reduce using rule 167 (SimpleStmt -> Assignment .)
    GOTO            reduce using rule 167 (SimpleStmt -> Assignment .)
    IF              reduce using rule 167 (SimpleStmt -> Assignment .)
    FOR             reduce using rule 167 (SimpleStmt -> Assignment .)
    PRINT           reduce using rule 167 (SimpleStmt -> Assignment .)
    SCAN            reduce using rule 167 (SimpleStmt -> Assignment .)
    CONST           reduce using rule 167 (SimpleStmt -> Assignment .)
    TYPE            reduce using rule 167 (SimpleStmt -> Assignment .)
    VAR             reduce using rule 167 (SimpleStmt -> Assignment .)
    IDENTIFIER      reduce using rule 167 (SimpleStmt -> Assignment .)
    SWITCH          reduce using rule 167 (SimpleStmt -> Assignment .)
    NOT             reduce using rule 167 (SimpleStmt -> Assignment .)
    PLUS            reduce using rule 167 (SimpleStmt -> Assignment .)
    MINUS           reduce using rule 167 (SimpleStmt -> Assignment .)
    STAR            reduce using rule 167 (SimpleStmt -> Assignment .)
    AND             reduce using rule 167 (SimpleStmt -> Assignment .)
    LPAREN          reduce using rule 167 (SimpleStmt -> Assignment .)
    TRUE            reduce using rule 167 (SimpleStmt -> Assignment .)
    FALSE           reduce using rule 167 (SimpleStmt -> Assignment .)
    TYPECAST        reduce using rule 167 (SimpleStmt -> Assignment .)
    LCURL           reduce using rule 167 (SimpleStmt -> Assignment .)
    INTEGER         reduce using rule 167 (SimpleStmt -> Assignment .)
    OCTAL           reduce using rule 167 (SimpleStmt -> Assignment .)
    HEX             reduce using rule 167 (SimpleStmt -> Assignment .)
    RUNE            reduce using rule 167 (SimpleStmt -> Assignment .)
    FLOAT           reduce using rule 167 (SimpleStmt -> Assignment .)
    IMAGINARY       reduce using rule 167 (SimpleStmt -> Assignment .)
    STRING          reduce using rule 167 (SimpleStmt -> Assignment .)
    RCURL           reduce using rule 167 (SimpleStmt -> Assignment .)
    CASE            reduce using rule 167 (SimpleStmt -> Assignment .)
    DEFAULT         reduce using rule 167 (SimpleStmt -> Assignment .)


state 257

    (166) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    RETURN          reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    BREAK           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    CONTINUE        reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    GOTO            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    IF              reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    FOR             reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    PRINT           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    SCAN            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    CONST           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    TYPE            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    VAR             reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    IDENTIFIER      reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    SWITCH          reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    NOT             reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    PLUS            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    MINUS           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    STAR            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    AND             reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    LPAREN          reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    TRUE            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    FALSE           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    TYPECAST        reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    LCURL           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    INTEGER         reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    OCTAL           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    HEX             reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    RUNE            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    FLOAT           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    IMAGINARY       reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    STRING          reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    RCURL           reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    CASE            reduce using rule 166 (SimpleStmt -> IncDecStmt .)
    DEFAULT         reduce using rule 166 (SimpleStmt -> IncDecStmt .)


state 258

    (216) GotoStmt -> GOTO . Label
    (170) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 299

    Label                          shift and go to state 300

state 259

    (150) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 150 (Statement -> LabeledStmt .)
    RETURN          reduce using rule 150 (Statement -> LabeledStmt .)
    BREAK           reduce using rule 150 (Statement -> LabeledStmt .)
    CONTINUE        reduce using rule 150 (Statement -> LabeledStmt .)
    GOTO            reduce using rule 150 (Statement -> LabeledStmt .)
    IF              reduce using rule 150 (Statement -> LabeledStmt .)
    FOR             reduce using rule 150 (Statement -> LabeledStmt .)
    PRINT           reduce using rule 150 (Statement -> LabeledStmt .)
    SCAN            reduce using rule 150 (Statement -> LabeledStmt .)
    CONST           reduce using rule 150 (Statement -> LabeledStmt .)
    TYPE            reduce using rule 150 (Statement -> LabeledStmt .)
    VAR             reduce using rule 150 (Statement -> LabeledStmt .)
    IDENTIFIER      reduce using rule 150 (Statement -> LabeledStmt .)
    SWITCH          reduce using rule 150 (Statement -> LabeledStmt .)
    NOT             reduce using rule 150 (Statement -> LabeledStmt .)
    PLUS            reduce using rule 150 (Statement -> LabeledStmt .)
    MINUS           reduce using rule 150 (Statement -> LabeledStmt .)
    STAR            reduce using rule 150 (Statement -> LabeledStmt .)
    AND             reduce using rule 150 (Statement -> LabeledStmt .)
    LPAREN          reduce using rule 150 (Statement -> LabeledStmt .)
    TRUE            reduce using rule 150 (Statement -> LabeledStmt .)
    FALSE           reduce using rule 150 (Statement -> LabeledStmt .)
    TYPECAST        reduce using rule 150 (Statement -> LabeledStmt .)
    LCURL           reduce using rule 150 (Statement -> LabeledStmt .)
    INTEGER         reduce using rule 150 (Statement -> LabeledStmt .)
    OCTAL           reduce using rule 150 (Statement -> LabeledStmt .)
    HEX             reduce using rule 150 (Statement -> LabeledStmt .)
    RUNE            reduce using rule 150 (Statement -> LabeledStmt .)
    FLOAT           reduce using rule 150 (Statement -> LabeledStmt .)
    IMAGINARY       reduce using rule 150 (Statement -> LabeledStmt .)
    STRING          reduce using rule 150 (Statement -> LabeledStmt .)
    RCURL           reduce using rule 150 (Statement -> LabeledStmt .)
    CASE            reduce using rule 150 (Statement -> LabeledStmt .)
    DEFAULT         reduce using rule 150 (Statement -> LabeledStmt .)


state 260

    (160) Statement -> PrintStmt .

    SEMICOLON       reduce using rule 160 (Statement -> PrintStmt .)
    RETURN          reduce using rule 160 (Statement -> PrintStmt .)
    BREAK           reduce using rule 160 (Statement -> PrintStmt .)
    CONTINUE        reduce using rule 160 (Statement -> PrintStmt .)
    GOTO            reduce using rule 160 (Statement -> PrintStmt .)
    IF              reduce using rule 160 (Statement -> PrintStmt .)
    FOR             reduce using rule 160 (Statement -> PrintStmt .)
    PRINT           reduce using rule 160 (Statement -> PrintStmt .)
    SCAN            reduce using rule 160 (Statement -> PrintStmt .)
    CONST           reduce using rule 160 (Statement -> PrintStmt .)
    TYPE            reduce using rule 160 (Statement -> PrintStmt .)
    VAR             reduce using rule 160 (Statement -> PrintStmt .)
    IDENTIFIER      reduce using rule 160 (Statement -> PrintStmt .)
    SWITCH          reduce using rule 160 (Statement -> PrintStmt .)
    NOT             reduce using rule 160 (Statement -> PrintStmt .)
    PLUS            reduce using rule 160 (Statement -> PrintStmt .)
    MINUS           reduce using rule 160 (Statement -> PrintStmt .)
    STAR            reduce using rule 160 (Statement -> PrintStmt .)
    AND             reduce using rule 160 (Statement -> PrintStmt .)
    LPAREN          reduce using rule 160 (Statement -> PrintStmt .)
    TRUE            reduce using rule 160 (Statement -> PrintStmt .)
    FALSE           reduce using rule 160 (Statement -> PrintStmt .)
    TYPECAST        reduce using rule 160 (Statement -> PrintStmt .)
    LCURL           reduce using rule 160 (Statement -> PrintStmt .)
    INTEGER         reduce using rule 160 (Statement -> PrintStmt .)
    OCTAL           reduce using rule 160 (Statement -> PrintStmt .)
    HEX             reduce using rule 160 (Statement -> PrintStmt .)
    RUNE            reduce using rule 160 (Statement -> PrintStmt .)
    FLOAT           reduce using rule 160 (Statement -> PrintStmt .)
    IMAGINARY       reduce using rule 160 (Statement -> PrintStmt .)
    STRING          reduce using rule 160 (Statement -> PrintStmt .)
    RCURL           reduce using rule 160 (Statement -> PrintStmt .)
    CASE            reduce using rule 160 (Statement -> PrintStmt .)
    DEFAULT         reduce using rule 160 (Statement -> PrintStmt .)


state 261

    (209) ReturnStmt -> RETURN . ExpressionPureOpt
    (210) ExpressionPureOpt -> . Expression
    (211) ExpressionPureOpt -> . epsilon
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (235) epsilon -> .
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for TYPECAST resolved as shift
  ! reduce/reduce conflict for INTEGER resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for OCTAL resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for HEX resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for RUNE resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 96 (F -> .)
  ! reduce/reduce conflict for IMAGINARY resolved using rule 97 (C -> .)
  ! reduce/reduce conflict for STRING resolved using rule 98 (S -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)
    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

  ! IDENTIFIER      [ reduce using rule 235 (epsilon -> .) ]
  ! NOT             [ reduce using rule 235 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 235 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 235 (epsilon -> .) ]
  ! STAR            [ reduce using rule 235 (epsilon -> .) ]
  ! AND             [ reduce using rule 235 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 235 (epsilon -> .) ]
  ! TRUE            [ reduce using rule 235 (epsilon -> .) ]
  ! FALSE           [ reduce using rule 235 (epsilon -> .) ]
  ! TYPECAST        [ reduce using rule 235 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 235 (epsilon -> .) ]
  ! OCTAL           [ reduce using rule 235 (epsilon -> .) ]
  ! HEX             [ reduce using rule 235 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 235 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 235 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 235 (epsilon -> .) ]
  ! STRING          [ reduce using rule 235 (epsilon -> .) ]

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    ExpressionPureOpt              shift and go to state 301
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 302
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 303
    Operand                        shift and go to state 114

state 262

    (169) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 304


state 263

    (192) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    RETURN          reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    BREAK           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    CONTINUE        reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    GOTO            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    IF              reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    FOR             reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    PRINT           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    SCAN            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    CONST           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    TYPE            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    VAR             reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    IDENTIFIER      reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    SWITCH          reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    NOT             reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    PLUS            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    MINUS           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    STAR            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    AND             reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    LPAREN          reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    TRUE            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    FALSE           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    TYPECAST        reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    LCURL           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    INTEGER         reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    OCTAL           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    HEX             reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    RUNE            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    FLOAT           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    IMAGINARY       reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    STRING          reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    RCURL           reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    CASE            reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)
    DEFAULT         reduce using rule 192 (SwitchStmt -> ExprSwitchStmt .)


state 264

    (162) PrintStmt -> PRINT . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 305

state 265

    (157) Statement -> IfStmt .

    SEMICOLON       reduce using rule 157 (Statement -> IfStmt .)
    RETURN          reduce using rule 157 (Statement -> IfStmt .)
    BREAK           reduce using rule 157 (Statement -> IfStmt .)
    CONTINUE        reduce using rule 157 (Statement -> IfStmt .)
    GOTO            reduce using rule 157 (Statement -> IfStmt .)
    IF              reduce using rule 157 (Statement -> IfStmt .)
    FOR             reduce using rule 157 (Statement -> IfStmt .)
    PRINT           reduce using rule 157 (Statement -> IfStmt .)
    SCAN            reduce using rule 157 (Statement -> IfStmt .)
    CONST           reduce using rule 157 (Statement -> IfStmt .)
    TYPE            reduce using rule 157 (Statement -> IfStmt .)
    VAR             reduce using rule 157 (Statement -> IfStmt .)
    IDENTIFIER      reduce using rule 157 (Statement -> IfStmt .)
    SWITCH          reduce using rule 157 (Statement -> IfStmt .)
    NOT             reduce using rule 157 (Statement -> IfStmt .)
    PLUS            reduce using rule 157 (Statement -> IfStmt .)
    MINUS           reduce using rule 157 (Statement -> IfStmt .)
    STAR            reduce using rule 157 (Statement -> IfStmt .)
    AND             reduce using rule 157 (Statement -> IfStmt .)
    LPAREN          reduce using rule 157 (Statement -> IfStmt .)
    TRUE            reduce using rule 157 (Statement -> IfStmt .)
    FALSE           reduce using rule 157 (Statement -> IfStmt .)
    TYPECAST        reduce using rule 157 (Statement -> IfStmt .)
    LCURL           reduce using rule 157 (Statement -> IfStmt .)
    INTEGER         reduce using rule 157 (Statement -> IfStmt .)
    OCTAL           reduce using rule 157 (Statement -> IfStmt .)
    HEX             reduce using rule 157 (Statement -> IfStmt .)
    RUNE            reduce using rule 157 (Statement -> IfStmt .)
    FLOAT           reduce using rule 157 (Statement -> IfStmt .)
    IMAGINARY       reduce using rule 157 (Statement -> IfStmt .)
    STRING          reduce using rule 157 (Statement -> IfStmt .)
    RCURL           reduce using rule 157 (Statement -> IfStmt .)
    CASE            reduce using rule 157 (Statement -> IfStmt .)
    DEFAULT         reduce using rule 157 (Statement -> IfStmt .)


state 266

    (155) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 155 (Statement -> GotoStmt .)
    RETURN          reduce using rule 155 (Statement -> GotoStmt .)
    BREAK           reduce using rule 155 (Statement -> GotoStmt .)
    CONTINUE        reduce using rule 155 (Statement -> GotoStmt .)
    GOTO            reduce using rule 155 (Statement -> GotoStmt .)
    IF              reduce using rule 155 (Statement -> GotoStmt .)
    FOR             reduce using rule 155 (Statement -> GotoStmt .)
    PRINT           reduce using rule 155 (Statement -> GotoStmt .)
    SCAN            reduce using rule 155 (Statement -> GotoStmt .)
    CONST           reduce using rule 155 (Statement -> GotoStmt .)
    TYPE            reduce using rule 155 (Statement -> GotoStmt .)
    VAR             reduce using rule 155 (Statement -> GotoStmt .)
    IDENTIFIER      reduce using rule 155 (Statement -> GotoStmt .)
    SWITCH          reduce using rule 155 (Statement -> GotoStmt .)
    NOT             reduce using rule 155 (Statement -> GotoStmt .)
    PLUS            reduce using rule 155 (Statement -> GotoStmt .)
    MINUS           reduce using rule 155 (Statement -> GotoStmt .)
    STAR            reduce using rule 155 (Statement -> GotoStmt .)
    AND             reduce using rule 155 (Statement -> GotoStmt .)
    LPAREN          reduce using rule 155 (Statement -> GotoStmt .)
    TRUE            reduce using rule 155 (Statement -> GotoStmt .)
    FALSE           reduce using rule 155 (Statement -> GotoStmt .)
    TYPECAST        reduce using rule 155 (Statement -> GotoStmt .)
    LCURL           reduce using rule 155 (Statement -> GotoStmt .)
    INTEGER         reduce using rule 155 (Statement -> GotoStmt .)
    OCTAL           reduce using rule 155 (Statement -> GotoStmt .)
    HEX             reduce using rule 155 (Statement -> GotoStmt .)
    RUNE            reduce using rule 155 (Statement -> GotoStmt .)
    FLOAT           reduce using rule 155 (Statement -> GotoStmt .)
    IMAGINARY       reduce using rule 155 (Statement -> GotoStmt .)
    STRING          reduce using rule 155 (Statement -> GotoStmt .)
    RCURL           reduce using rule 155 (Statement -> GotoStmt .)
    CASE            reduce using rule 155 (Statement -> GotoStmt .)
    DEFAULT         reduce using rule 155 (Statement -> GotoStmt .)


state 267

    (200) ForStmt -> FOR . CreateScopeFor ConditionBlockOpt Block EndScope
    (201) CreateScopeFor -> .

    NOT             reduce using rule 201 (CreateScopeFor -> .)
    IDENTIFIER      reduce using rule 201 (CreateScopeFor -> .)
    PLUS            reduce using rule 201 (CreateScopeFor -> .)
    MINUS           reduce using rule 201 (CreateScopeFor -> .)
    STAR            reduce using rule 201 (CreateScopeFor -> .)
    AND             reduce using rule 201 (CreateScopeFor -> .)
    LPAREN          reduce using rule 201 (CreateScopeFor -> .)
    TRUE            reduce using rule 201 (CreateScopeFor -> .)
    FALSE           reduce using rule 201 (CreateScopeFor -> .)
    TYPECAST        reduce using rule 201 (CreateScopeFor -> .)
    LCURL           reduce using rule 201 (CreateScopeFor -> .)
    SEMICOLON       reduce using rule 201 (CreateScopeFor -> .)
    INTEGER         reduce using rule 201 (CreateScopeFor -> .)
    OCTAL           reduce using rule 201 (CreateScopeFor -> .)
    HEX             reduce using rule 201 (CreateScopeFor -> .)
    RUNE            reduce using rule 201 (CreateScopeFor -> .)
    FLOAT           reduce using rule 201 (CreateScopeFor -> .)
    IMAGINARY       reduce using rule 201 (CreateScopeFor -> .)
    STRING          reduce using rule 201 (CreateScopeFor -> .)

    CreateScopeFor                 shift and go to state 306

state 268

    (158) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 158 (Statement -> SwitchStmt .)
    RETURN          reduce using rule 158 (Statement -> SwitchStmt .)
    BREAK           reduce using rule 158 (Statement -> SwitchStmt .)
    CONTINUE        reduce using rule 158 (Statement -> SwitchStmt .)
    GOTO            reduce using rule 158 (Statement -> SwitchStmt .)
    IF              reduce using rule 158 (Statement -> SwitchStmt .)
    FOR             reduce using rule 158 (Statement -> SwitchStmt .)
    PRINT           reduce using rule 158 (Statement -> SwitchStmt .)
    SCAN            reduce using rule 158 (Statement -> SwitchStmt .)
    CONST           reduce using rule 158 (Statement -> SwitchStmt .)
    TYPE            reduce using rule 158 (Statement -> SwitchStmt .)
    VAR             reduce using rule 158 (Statement -> SwitchStmt .)
    IDENTIFIER      reduce using rule 158 (Statement -> SwitchStmt .)
    SWITCH          reduce using rule 158 (Statement -> SwitchStmt .)
    NOT             reduce using rule 158 (Statement -> SwitchStmt .)
    PLUS            reduce using rule 158 (Statement -> SwitchStmt .)
    MINUS           reduce using rule 158 (Statement -> SwitchStmt .)
    STAR            reduce using rule 158 (Statement -> SwitchStmt .)
    AND             reduce using rule 158 (Statement -> SwitchStmt .)
    LPAREN          reduce using rule 158 (Statement -> SwitchStmt .)
    TRUE            reduce using rule 158 (Statement -> SwitchStmt .)
    FALSE           reduce using rule 158 (Statement -> SwitchStmt .)
    TYPECAST        reduce using rule 158 (Statement -> SwitchStmt .)
    LCURL           reduce using rule 158 (Statement -> SwitchStmt .)
    INTEGER         reduce using rule 158 (Statement -> SwitchStmt .)
    OCTAL           reduce using rule 158 (Statement -> SwitchStmt .)
    HEX             reduce using rule 158 (Statement -> SwitchStmt .)
    RUNE            reduce using rule 158 (Statement -> SwitchStmt .)
    FLOAT           reduce using rule 158 (Statement -> SwitchStmt .)
    IMAGINARY       reduce using rule 158 (Statement -> SwitchStmt .)
    STRING          reduce using rule 158 (Statement -> SwitchStmt .)
    RCURL           reduce using rule 158 (Statement -> SwitchStmt .)
    CASE            reduce using rule 158 (Statement -> SwitchStmt .)
    DEFAULT         reduce using rule 158 (Statement -> SwitchStmt .)


state 269

    (213) ContinueStmt -> CONTINUE . LabelOpt
    (214) LabelOpt -> . Label
    (215) LabelOpt -> . epsilon
    (170) Label -> . IDENTIFIER
    (235) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 299
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 235 (epsilon -> .) ]

    epsilon                        shift and go to state 307
    LabelOpt                       shift and go to state 308
    Label                          shift and go to state 309

state 270

    (193) ExprSwitchStmt -> SWITCH . Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 310
    Operand                        shift and go to state 114

state 271

    (149) Statement -> Declaration .

    SEMICOLON       reduce using rule 149 (Statement -> Declaration .)
    RETURN          reduce using rule 149 (Statement -> Declaration .)
    BREAK           reduce using rule 149 (Statement -> Declaration .)
    CONTINUE        reduce using rule 149 (Statement -> Declaration .)
    GOTO            reduce using rule 149 (Statement -> Declaration .)
    IF              reduce using rule 149 (Statement -> Declaration .)
    FOR             reduce using rule 149 (Statement -> Declaration .)
    PRINT           reduce using rule 149 (Statement -> Declaration .)
    SCAN            reduce using rule 149 (Statement -> Declaration .)
    CONST           reduce using rule 149 (Statement -> Declaration .)
    TYPE            reduce using rule 149 (Statement -> Declaration .)
    VAR             reduce using rule 149 (Statement -> Declaration .)
    IDENTIFIER      reduce using rule 149 (Statement -> Declaration .)
    SWITCH          reduce using rule 149 (Statement -> Declaration .)
    NOT             reduce using rule 149 (Statement -> Declaration .)
    PLUS            reduce using rule 149 (Statement -> Declaration .)
    MINUS           reduce using rule 149 (Statement -> Declaration .)
    STAR            reduce using rule 149 (Statement -> Declaration .)
    AND             reduce using rule 149 (Statement -> Declaration .)
    LPAREN          reduce using rule 149 (Statement -> Declaration .)
    TRUE            reduce using rule 149 (Statement -> Declaration .)
    FALSE           reduce using rule 149 (Statement -> Declaration .)
    TYPECAST        reduce using rule 149 (Statement -> Declaration .)
    LCURL           reduce using rule 149 (Statement -> Declaration .)
    INTEGER         reduce using rule 149 (Statement -> Declaration .)
    OCTAL           reduce using rule 149 (Statement -> Declaration .)
    HEX             reduce using rule 149 (Statement -> Declaration .)
    RUNE            reduce using rule 149 (Statement -> Declaration .)
    FLOAT           reduce using rule 149 (Statement -> Declaration .)
    IMAGINARY       reduce using rule 149 (Statement -> Declaration .)
    STRING          reduce using rule 149 (Statement -> Declaration .)
    RCURL           reduce using rule 149 (Statement -> Declaration .)
    CASE            reduce using rule 149 (Statement -> Declaration .)
    DEFAULT         reduce using rule 149 (Statement -> Declaration .)


state 272

    (170) Label -> IDENTIFIER .
    (73) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (109) PrimaryExpr -> IDENTIFIER . LCURL StructFieldList RCURL SemiColonOpt
    (99) OperandName -> IDENTIFIER .

  ! shift/reduce conflict for LCURL resolved as shift
    COLON           reduce using rule 170 (Label -> IDENTIFIER .)
    QUICK_ASSIGN    shift and go to state 311
    LCURL           shift and go to state 166
    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)
    RETURN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    BREAK           reduce using rule 99 (OperandName -> IDENTIFIER .)
    CONTINUE        reduce using rule 99 (OperandName -> IDENTIFIER .)
    GOTO            reduce using rule 99 (OperandName -> IDENTIFIER .)
    IF              reduce using rule 99 (OperandName -> IDENTIFIER .)
    FOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    PRINT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SCAN            reduce using rule 99 (OperandName -> IDENTIFIER .)
    CONST           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TYPE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    VAR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 99 (OperandName -> IDENTIFIER .)
    SWITCH          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    TRUE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    FALSE           reduce using rule 99 (OperandName -> IDENTIFIER .)
    TYPECAST        reduce using rule 99 (OperandName -> IDENTIFIER .)
    INTEGER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    OCTAL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    HEX             reduce using rule 99 (OperandName -> IDENTIFIER .)
    RUNE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    FLOAT           reduce using rule 99 (OperandName -> IDENTIFIER .)
    IMAGINARY       reduce using rule 99 (OperandName -> IDENTIFIER .)
    STRING          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RCURL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    CASE            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DEFAULT         reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)

  ! LCURL           [ reduce using rule 99 (OperandName -> IDENTIFIER .) ]


state 273

    (164) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 164 (SimpleStmt -> epsilon .)
    RETURN          reduce using rule 164 (SimpleStmt -> epsilon .)
    BREAK           reduce using rule 164 (SimpleStmt -> epsilon .)
    CONTINUE        reduce using rule 164 (SimpleStmt -> epsilon .)
    GOTO            reduce using rule 164 (SimpleStmt -> epsilon .)
    IF              reduce using rule 164 (SimpleStmt -> epsilon .)
    FOR             reduce using rule 164 (SimpleStmt -> epsilon .)
    PRINT           reduce using rule 164 (SimpleStmt -> epsilon .)
    SCAN            reduce using rule 164 (SimpleStmt -> epsilon .)
    CONST           reduce using rule 164 (SimpleStmt -> epsilon .)
    TYPE            reduce using rule 164 (SimpleStmt -> epsilon .)
    VAR             reduce using rule 164 (SimpleStmt -> epsilon .)
    IDENTIFIER      reduce using rule 164 (SimpleStmt -> epsilon .)
    SWITCH          reduce using rule 164 (SimpleStmt -> epsilon .)
    NOT             reduce using rule 164 (SimpleStmt -> epsilon .)
    PLUS            reduce using rule 164 (SimpleStmt -> epsilon .)
    MINUS           reduce using rule 164 (SimpleStmt -> epsilon .)
    STAR            reduce using rule 164 (SimpleStmt -> epsilon .)
    AND             reduce using rule 164 (SimpleStmt -> epsilon .)
    LPAREN          reduce using rule 164 (SimpleStmt -> epsilon .)
    TRUE            reduce using rule 164 (SimpleStmt -> epsilon .)
    FALSE           reduce using rule 164 (SimpleStmt -> epsilon .)
    TYPECAST        reduce using rule 164 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 164 (SimpleStmt -> epsilon .)
    INTEGER         reduce using rule 164 (SimpleStmt -> epsilon .)
    OCTAL           reduce using rule 164 (SimpleStmt -> epsilon .)
    HEX             reduce using rule 164 (SimpleStmt -> epsilon .)
    RUNE            reduce using rule 164 (SimpleStmt -> epsilon .)
    FLOAT           reduce using rule 164 (SimpleStmt -> epsilon .)
    IMAGINARY       reduce using rule 164 (SimpleStmt -> epsilon .)
    STRING          reduce using rule 164 (SimpleStmt -> epsilon .)
    RCURL           reduce using rule 164 (SimpleStmt -> epsilon .)
    CASE            reduce using rule 164 (SimpleStmt -> epsilon .)
    DEFAULT         reduce using rule 164 (SimpleStmt -> epsilon .)


state 274

    (174) Assignment -> ExpressionList . assign_op ExpressionList
    (175) assign_op -> . AssignOp
    (176) AssignOp -> . PLUS_ASSIGN
    (177) AssignOp -> . MINUS_ASSIGN
    (178) AssignOp -> . STAR_ASSIGN
    (179) AssignOp -> . DIVIDE_ASSIGN
    (180) AssignOp -> . MOD_ASSIGN
    (181) AssignOp -> . AND_ASSIGN
    (182) AssignOp -> . OR_ASSIGN
    (183) AssignOp -> . XOR_ASSIGN
    (184) AssignOp -> . LSHIFT_ASSIGN
    (185) AssignOp -> . RSHIFT_ASSIGN
    (186) AssignOp -> . ASSIGN

    PLUS_ASSIGN     shift and go to state 322
    MINUS_ASSIGN    shift and go to state 315
    STAR_ASSIGN     shift and go to state 314
    DIVIDE_ASSIGN   shift and go to state 323
    MOD_ASSIGN      shift and go to state 318
    AND_ASSIGN      shift and go to state 320
    OR_ASSIGN       shift and go to state 317
    XOR_ASSIGN      shift and go to state 316
    LSHIFT_ASSIGN   shift and go to state 319
    RSHIFT_ASSIGN   shift and go to state 313
    ASSIGN          shift and go to state 324

    AssignOp                       shift and go to state 312
    assign_op                      shift and go to state 321

state 275

    (171) ExpressionStmt -> Expression .
    (172) IncDecStmt -> Expression . INCR
    (173) IncDecStmt -> Expression . DECR
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (56) ExpressionList -> Expression . ExpressionRep
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (235) epsilon -> .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 171 (ExpressionStmt -> Expression .)
    RETURN          reduce using rule 171 (ExpressionStmt -> Expression .)
    BREAK           reduce using rule 171 (ExpressionStmt -> Expression .)
    CONTINUE        reduce using rule 171 (ExpressionStmt -> Expression .)
    GOTO            reduce using rule 171 (ExpressionStmt -> Expression .)
    IF              reduce using rule 171 (ExpressionStmt -> Expression .)
    FOR             reduce using rule 171 (ExpressionStmt -> Expression .)
    PRINT           reduce using rule 171 (ExpressionStmt -> Expression .)
    SCAN            reduce using rule 171 (ExpressionStmt -> Expression .)
    CONST           reduce using rule 171 (ExpressionStmt -> Expression .)
    TYPE            reduce using rule 171 (ExpressionStmt -> Expression .)
    VAR             reduce using rule 171 (ExpressionStmt -> Expression .)
    IDENTIFIER      reduce using rule 171 (ExpressionStmt -> Expression .)
    SWITCH          reduce using rule 171 (ExpressionStmt -> Expression .)
    NOT             reduce using rule 171 (ExpressionStmt -> Expression .)
    LPAREN          reduce using rule 171 (ExpressionStmt -> Expression .)
    TRUE            reduce using rule 171 (ExpressionStmt -> Expression .)
    FALSE           reduce using rule 171 (ExpressionStmt -> Expression .)
    TYPECAST        reduce using rule 171 (ExpressionStmt -> Expression .)
    LCURL           reduce using rule 171 (ExpressionStmt -> Expression .)
    INTEGER         reduce using rule 171 (ExpressionStmt -> Expression .)
    OCTAL           reduce using rule 171 (ExpressionStmt -> Expression .)
    HEX             reduce using rule 171 (ExpressionStmt -> Expression .)
    RUNE            reduce using rule 171 (ExpressionStmt -> Expression .)
    FLOAT           reduce using rule 171 (ExpressionStmt -> Expression .)
    IMAGINARY       reduce using rule 171 (ExpressionStmt -> Expression .)
    STRING          reduce using rule 171 (ExpressionStmt -> Expression .)
    RCURL           reduce using rule 171 (ExpressionStmt -> Expression .)
    CASE            reduce using rule 171 (ExpressionStmt -> Expression .)
    DEFAULT         reduce using rule 171 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 326
    DECR            shift and go to state 325
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    COMMA           reduce using rule 235 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 235 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 235 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 235 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 235 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 235 (epsilon -> .)
    AND_ASSIGN      reduce using rule 235 (epsilon -> .)
    OR_ASSIGN       reduce using rule 235 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 235 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    ASSIGN          reduce using rule 235 (epsilon -> .)

  ! PLUS            [ reduce using rule 171 (ExpressionStmt -> Expression .) ]
  ! MINUS           [ reduce using rule 171 (ExpressionStmt -> Expression .) ]
  ! STAR            [ reduce using rule 171 (ExpressionStmt -> Expression .) ]
  ! AND             [ reduce using rule 171 (ExpressionStmt -> Expression .) ]

    epsilon                        shift and go to state 197
    ExpressionRep                  shift and go to state 196

state 276

    (212) BreakStmt -> BREAK . LabelOpt
    (214) LabelOpt -> . Label
    (215) LabelOpt -> . epsilon
    (170) Label -> . IDENTIFIER
    (235) epsilon -> .

  ! shift/reduce conflict for IDENTIFIER resolved as shift
    IDENTIFIER      shift and go to state 299
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

  ! IDENTIFIER      [ reduce using rule 235 (epsilon -> .) ]

    epsilon                        shift and go to state 307
    LabelOpt                       shift and go to state 327
    Label                          shift and go to state 309

state 277

    (152) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 152 (Statement -> ReturnStmt .)
    RETURN          reduce using rule 152 (Statement -> ReturnStmt .)
    BREAK           reduce using rule 152 (Statement -> ReturnStmt .)
    CONTINUE        reduce using rule 152 (Statement -> ReturnStmt .)
    GOTO            reduce using rule 152 (Statement -> ReturnStmt .)
    IF              reduce using rule 152 (Statement -> ReturnStmt .)
    FOR             reduce using rule 152 (Statement -> ReturnStmt .)
    PRINT           reduce using rule 152 (Statement -> ReturnStmt .)
    SCAN            reduce using rule 152 (Statement -> ReturnStmt .)
    CONST           reduce using rule 152 (Statement -> ReturnStmt .)
    TYPE            reduce using rule 152 (Statement -> ReturnStmt .)
    VAR             reduce using rule 152 (Statement -> ReturnStmt .)
    IDENTIFIER      reduce using rule 152 (Statement -> ReturnStmt .)
    SWITCH          reduce using rule 152 (Statement -> ReturnStmt .)
    NOT             reduce using rule 152 (Statement -> ReturnStmt .)
    PLUS            reduce using rule 152 (Statement -> ReturnStmt .)
    MINUS           reduce using rule 152 (Statement -> ReturnStmt .)
    STAR            reduce using rule 152 (Statement -> ReturnStmt .)
    AND             reduce using rule 152 (Statement -> ReturnStmt .)
    LPAREN          reduce using rule 152 (Statement -> ReturnStmt .)
    TRUE            reduce using rule 152 (Statement -> ReturnStmt .)
    FALSE           reduce using rule 152 (Statement -> ReturnStmt .)
    TYPECAST        reduce using rule 152 (Statement -> ReturnStmt .)
    LCURL           reduce using rule 152 (Statement -> ReturnStmt .)
    INTEGER         reduce using rule 152 (Statement -> ReturnStmt .)
    OCTAL           reduce using rule 152 (Statement -> ReturnStmt .)
    HEX             reduce using rule 152 (Statement -> ReturnStmt .)
    RUNE            reduce using rule 152 (Statement -> ReturnStmt .)
    FLOAT           reduce using rule 152 (Statement -> ReturnStmt .)
    IMAGINARY       reduce using rule 152 (Statement -> ReturnStmt .)
    STRING          reduce using rule 152 (Statement -> ReturnStmt .)
    RCURL           reduce using rule 152 (Statement -> ReturnStmt .)
    CASE            reduce using rule 152 (Statement -> ReturnStmt .)
    DEFAULT         reduce using rule 152 (Statement -> ReturnStmt .)


state 278

    (163) ScanStmt -> SCAN . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 328

state 279

    (151) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 151 (Statement -> SimpleStmt .)
    RETURN          reduce using rule 151 (Statement -> SimpleStmt .)
    BREAK           reduce using rule 151 (Statement -> SimpleStmt .)
    CONTINUE        reduce using rule 151 (Statement -> SimpleStmt .)
    GOTO            reduce using rule 151 (Statement -> SimpleStmt .)
    IF              reduce using rule 151 (Statement -> SimpleStmt .)
    FOR             reduce using rule 151 (Statement -> SimpleStmt .)
    PRINT           reduce using rule 151 (Statement -> SimpleStmt .)
    SCAN            reduce using rule 151 (Statement -> SimpleStmt .)
    CONST           reduce using rule 151 (Statement -> SimpleStmt .)
    TYPE            reduce using rule 151 (Statement -> SimpleStmt .)
    VAR             reduce using rule 151 (Statement -> SimpleStmt .)
    IDENTIFIER      reduce using rule 151 (Statement -> SimpleStmt .)
    SWITCH          reduce using rule 151 (Statement -> SimpleStmt .)
    NOT             reduce using rule 151 (Statement -> SimpleStmt .)
    PLUS            reduce using rule 151 (Statement -> SimpleStmt .)
    MINUS           reduce using rule 151 (Statement -> SimpleStmt .)
    STAR            reduce using rule 151 (Statement -> SimpleStmt .)
    AND             reduce using rule 151 (Statement -> SimpleStmt .)
    LPAREN          reduce using rule 151 (Statement -> SimpleStmt .)
    TRUE            reduce using rule 151 (Statement -> SimpleStmt .)
    FALSE           reduce using rule 151 (Statement -> SimpleStmt .)
    TYPECAST        reduce using rule 151 (Statement -> SimpleStmt .)
    LCURL           reduce using rule 151 (Statement -> SimpleStmt .)
    INTEGER         reduce using rule 151 (Statement -> SimpleStmt .)
    OCTAL           reduce using rule 151 (Statement -> SimpleStmt .)
    HEX             reduce using rule 151 (Statement -> SimpleStmt .)
    RUNE            reduce using rule 151 (Statement -> SimpleStmt .)
    FLOAT           reduce using rule 151 (Statement -> SimpleStmt .)
    IMAGINARY       reduce using rule 151 (Statement -> SimpleStmt .)
    STRING          reduce using rule 151 (Statement -> SimpleStmt .)
    RCURL           reduce using rule 151 (Statement -> SimpleStmt .)
    CASE            reduce using rule 151 (Statement -> SimpleStmt .)
    DEFAULT         reduce using rule 151 (Statement -> SimpleStmt .)


state 280

    (159) Statement -> ForStmt .

    SEMICOLON       reduce using rule 159 (Statement -> ForStmt .)
    RETURN          reduce using rule 159 (Statement -> ForStmt .)
    BREAK           reduce using rule 159 (Statement -> ForStmt .)
    CONTINUE        reduce using rule 159 (Statement -> ForStmt .)
    GOTO            reduce using rule 159 (Statement -> ForStmt .)
    IF              reduce using rule 159 (Statement -> ForStmt .)
    FOR             reduce using rule 159 (Statement -> ForStmt .)
    PRINT           reduce using rule 159 (Statement -> ForStmt .)
    SCAN            reduce using rule 159 (Statement -> ForStmt .)
    CONST           reduce using rule 159 (Statement -> ForStmt .)
    TYPE            reduce using rule 159 (Statement -> ForStmt .)
    VAR             reduce using rule 159 (Statement -> ForStmt .)
    IDENTIFIER      reduce using rule 159 (Statement -> ForStmt .)
    SWITCH          reduce using rule 159 (Statement -> ForStmt .)
    NOT             reduce using rule 159 (Statement -> ForStmt .)
    PLUS            reduce using rule 159 (Statement -> ForStmt .)
    MINUS           reduce using rule 159 (Statement -> ForStmt .)
    STAR            reduce using rule 159 (Statement -> ForStmt .)
    AND             reduce using rule 159 (Statement -> ForStmt .)
    LPAREN          reduce using rule 159 (Statement -> ForStmt .)
    TRUE            reduce using rule 159 (Statement -> ForStmt .)
    FALSE           reduce using rule 159 (Statement -> ForStmt .)
    TYPECAST        reduce using rule 159 (Statement -> ForStmt .)
    LCURL           reduce using rule 159 (Statement -> ForStmt .)
    INTEGER         reduce using rule 159 (Statement -> ForStmt .)
    OCTAL           reduce using rule 159 (Statement -> ForStmt .)
    HEX             reduce using rule 159 (Statement -> ForStmt .)
    RUNE            reduce using rule 159 (Statement -> ForStmt .)
    FLOAT           reduce using rule 159 (Statement -> ForStmt .)
    IMAGINARY       reduce using rule 159 (Statement -> ForStmt .)
    STRING          reduce using rule 159 (Statement -> ForStmt .)
    RCURL           reduce using rule 159 (Statement -> ForStmt .)
    CASE            reduce using rule 159 (Statement -> ForStmt .)
    DEFAULT         reduce using rule 159 (Statement -> ForStmt .)


state 281

    (156) Statement -> CreateScope . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 185

    Block                          shift and go to state 329

state 282

    (168) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    RETURN          reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    BREAK           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    CONTINUE        reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    GOTO            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    IF              reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    FOR             reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    PRINT           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    SCAN            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    CONST           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    TYPE            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    VAR             reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    IDENTIFIER      reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    SWITCH          reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    NOT             reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    PLUS            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    MINUS           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    STAR            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    AND             reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    LPAREN          reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    TRUE            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    FALSE           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    TYPECAST        reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    LCURL           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    INTEGER         reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    OCTAL           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    HEX             reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    RUNE            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    FLOAT           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    IMAGINARY       reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    STRING          reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    RCURL           reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    CASE            reduce using rule 168 (SimpleStmt -> ShortVarDecl .)
    DEFAULT         reduce using rule 168 (SimpleStmt -> ShortVarDecl .)


state 283

    (187) IfStmt -> IF . Expression CreateScopeIf Block EndScope ElseOpt
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    Operand                        shift and go to state 114
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 330

state 284

    (153) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 153 (Statement -> BreakStmt .)
    RETURN          reduce using rule 153 (Statement -> BreakStmt .)
    BREAK           reduce using rule 153 (Statement -> BreakStmt .)
    CONTINUE        reduce using rule 153 (Statement -> BreakStmt .)
    GOTO            reduce using rule 153 (Statement -> BreakStmt .)
    IF              reduce using rule 153 (Statement -> BreakStmt .)
    FOR             reduce using rule 153 (Statement -> BreakStmt .)
    PRINT           reduce using rule 153 (Statement -> BreakStmt .)
    SCAN            reduce using rule 153 (Statement -> BreakStmt .)
    CONST           reduce using rule 153 (Statement -> BreakStmt .)
    TYPE            reduce using rule 153 (Statement -> BreakStmt .)
    VAR             reduce using rule 153 (Statement -> BreakStmt .)
    IDENTIFIER      reduce using rule 153 (Statement -> BreakStmt .)
    SWITCH          reduce using rule 153 (Statement -> BreakStmt .)
    NOT             reduce using rule 153 (Statement -> BreakStmt .)
    PLUS            reduce using rule 153 (Statement -> BreakStmt .)
    MINUS           reduce using rule 153 (Statement -> BreakStmt .)
    STAR            reduce using rule 153 (Statement -> BreakStmt .)
    AND             reduce using rule 153 (Statement -> BreakStmt .)
    LPAREN          reduce using rule 153 (Statement -> BreakStmt .)
    TRUE            reduce using rule 153 (Statement -> BreakStmt .)
    FALSE           reduce using rule 153 (Statement -> BreakStmt .)
    TYPECAST        reduce using rule 153 (Statement -> BreakStmt .)
    LCURL           reduce using rule 153 (Statement -> BreakStmt .)
    INTEGER         reduce using rule 153 (Statement -> BreakStmt .)
    OCTAL           reduce using rule 153 (Statement -> BreakStmt .)
    HEX             reduce using rule 153 (Statement -> BreakStmt .)
    RUNE            reduce using rule 153 (Statement -> BreakStmt .)
    FLOAT           reduce using rule 153 (Statement -> BreakStmt .)
    IMAGINARY       reduce using rule 153 (Statement -> BreakStmt .)
    STRING          reduce using rule 153 (Statement -> BreakStmt .)
    RCURL           reduce using rule 153 (Statement -> BreakStmt .)
    CASE            reduce using rule 153 (Statement -> BreakStmt .)
    DEFAULT         reduce using rule 153 (Statement -> BreakStmt .)


state 285

    (39) Block -> LCURL StatementList RCURL .

    SEMICOLON       reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    FUNC            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    CONST           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    TYPE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    VAR             reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    $end            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    RETURN          reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    BREAK           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    CONTINUE        reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    GOTO            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    IF              reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    FOR             reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    PRINT           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    SCAN            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    IDENTIFIER      reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    SWITCH          reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    NOT             reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    PLUS            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    MINUS           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    STAR            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    AND             reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    LPAREN          reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    TRUE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    FALSE           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    TYPECAST        reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    LCURL           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    INTEGER         reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    OCTAL           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    HEX             reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    RUNE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    FLOAT           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    IMAGINARY       reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    STRING          reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    RCURL           reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    CASE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    DEFAULT         reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    ELSE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)


state 286

    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 35 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 35 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 287

    (36) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 288

    (57) ExpressionRep -> ExpressionRep COMMA Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    COMMA           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    FUNC            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CONST           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TYPE            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    VAR             reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    $end            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RETURN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    BREAK           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CONTINUE        reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    GOTO            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    IF              reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    FOR             reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PRINT           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SCAN            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    IDENTIFIER      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SWITCH          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    NOT             reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LPAREN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TRUE            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    FALSE           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    TYPECAST        reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LCURL           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    INTEGER         reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OCTAL           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    HEX             reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RUNE            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    FLOAT           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    IMAGINARY       reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    STRING          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RCURL           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    CASE            reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DEFAULT         reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUS_ASSIGN     reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUS_ASSIGN    reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    STAR_ASSIGN     reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDE_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MOD_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AND_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OR_ASSIGN       reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOR_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LSHIFT_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RSHIFT_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ASSIGN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! PLUS            [ reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .) ]
  ! MINUS           [ reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .) ]
  ! STAR            [ reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .) ]
  ! AND             [ reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .) ]


state 289

    (148) Conversion -> TYPECAST Type LPAREN Expression RPAREN .

    LSQUARE         reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DOT             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSER          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATER         reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR              reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    FUNC            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    CONST           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    TYPE            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    VAR             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    $end            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RETURN          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    BREAK           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    CONTINUE        reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GOTO            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    IF              reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    FOR             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PRINT           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SCAN            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    IDENTIFIER      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SWITCH          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOT             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    TRUE            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    FALSE           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    TYPECAST        reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LCURL           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INTEGER         reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OCTAL           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    HEX             reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RUNE            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    FLOAT           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    IMAGINARY       reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STRING          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RCURL           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    CASE            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DEFAULT         reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INCR            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DECR            reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 148 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)


state 290

    (109) PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .

    LSQUARE         reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LPAREN          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    DOT             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LOGICAL_OR      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LOGICAL_AND     reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    EQUALS          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    NOT_ASSIGN      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LESSER          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    GREATER         reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LESS_EQUALS     reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    MORE_EQUALS     reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    OR              reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    XOR             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    DIVIDE          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    MOD             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LSHIFT          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RSHIFT          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    PLUS            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    MINUS           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    STAR            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    AND             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RSQUARE         reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    COMMA           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    SEMICOLON       reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    FUNC            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    CONST           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    TYPE            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    VAR             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    $end            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RETURN          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    BREAK           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    CONTINUE        reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    GOTO            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    IF              reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    FOR             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    PRINT           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    SCAN            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    IDENTIFIER      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    SWITCH          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    NOT             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    TRUE            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    FALSE           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    TYPECAST        reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LCURL           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    INTEGER         reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    OCTAL           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    HEX             reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RUNE            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    FLOAT           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    IMAGINARY       reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    STRING          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RCURL           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    CASE            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    DEFAULT         reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RPAREN          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    COLON           reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    INCR            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    DECR            reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    PLUS_ASSIGN     reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    MINUS_ASSIGN    reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    STAR_ASSIGN     reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    DIVIDE_ASSIGN   reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    MOD_ASSIGN      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    AND_ASSIGN      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    OR_ASSIGN       reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    XOR_ASSIGN      reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    LSHIFT_ASSIGN   reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    RSHIFT_ASSIGN   reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)
    ASSIGN          reduce using rule 109 (PrimaryExpr -> IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt .)


state 291

    (110) StructFieldList -> IDENTIFIER COLON Expression . StructFieldRep
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (112) StructFieldRep -> . COMMA IDENTIFIER COLON Expression StructFieldRep
    (113) StructFieldRep -> . epsilon
    (235) epsilon -> .

    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    COMMA           shift and go to state 333
    RCURL           reduce using rule 235 (epsilon -> .)

    StructFieldRep                 shift and go to state 331
    epsilon                        shift and go to state 332

state 292

    (115) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt . RSQUARE

    RSQUARE         shift and go to state 334


state 293

    (116) Slice -> LSQUARE ExpressionOpt COLON Expression . COLON Expression RSQUARE
    (139) ExpressionOpt -> Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    COLON           shift and go to state 335
    RSQUARE         reduce using rule 139 (ExpressionOpt -> Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 294

    (117) TypeAssertion -> DOT LPAREN Type RPAREN .

    LSQUARE         reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DOT             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_OR      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_AND     reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUALS          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOT_ASSIGN      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSER          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATER         reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESS_EQUALS     reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MORE_EQUALS     reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSQUARE         reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    FUNC            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    CONST           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TYPE            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    VAR             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    $end            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RETURN          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    BREAK           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    CONTINUE        reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GOTO            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    IF              reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    FOR             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PRINT           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SCAN            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    IDENTIFIER      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SWITCH          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOT             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TRUE            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    FALSE           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    TYPECAST        reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LCURL           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INTEGER         reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OCTAL           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    HEX             reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RUNE            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    FLOAT           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    IMAGINARY       reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STRING          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RCURL           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    CASE            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DEFAULT         reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INCR            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DECR            reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS_ASSIGN     reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS_ASSIGN    reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR_ASSIGN     reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD_ASSIGN      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 117 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 295

    (24) FieldDeclRep -> FieldDeclRep FieldDecl SemiColonOpt .

    RCURL           reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SemiColonOpt .)
    IDENTIFIER      reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SemiColonOpt .)


state 296

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .

    COMMA           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RPAREN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    ASSIGN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LPAREN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    SEMICOLON       reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    FUNC            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    CONST           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    TYPE            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    VAR             reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    $end            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RETURN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    BREAK           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    CONTINUE        reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    GOTO            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    IF              reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    FOR             reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    PRINT           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    SCAN            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    IDENTIFIER      reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    SWITCH          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    NOT             reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    PLUS            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    MINUS           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    STAR            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    AND             reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    TRUE            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    FALSE           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    TYPECAST        reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LCURL           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    INTEGER         reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    OCTAL           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    HEX             reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RUNE            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    FLOAT           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    IMAGINARY       reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    STRING          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RCURL           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    CASE            reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    DEFAULT         reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)


state 297

    (26) FieldDecl -> IdentifierList Type .

    SEMICOLON       reduce using rule 26 (FieldDecl -> IdentifierList Type .)
    RCURL           reduce using rule 26 (FieldDecl -> IdentifierList Type .)
    IDENTIFIER      reduce using rule 26 (FieldDecl -> IdentifierList Type .)


state 298

    (41) StatementRep -> StatementRep Statement SemiColonOpt .

    RETURN          reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    BREAK           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    CONTINUE        reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    GOTO            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    IF              reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    FOR             reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    PRINT           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    SCAN            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    CONST           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    TYPE            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    VAR             reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    IDENTIFIER      reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    SWITCH          reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    NOT             reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    PLUS            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    MINUS           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    STAR            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    AND             reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    LPAREN          reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    TRUE            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    FALSE           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    TYPECAST        reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    SEMICOLON       reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    LCURL           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    INTEGER         reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    OCTAL           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    HEX             reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    RUNE            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    FLOAT           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    IMAGINARY       reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    STRING          reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    RCURL           reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    CASE            reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)
    DEFAULT         reduce using rule 41 (StatementRep -> StatementRep Statement SemiColonOpt .)


state 299

    (170) Label -> IDENTIFIER .

    SEMICOLON       reduce using rule 170 (Label -> IDENTIFIER .)
    RETURN          reduce using rule 170 (Label -> IDENTIFIER .)
    BREAK           reduce using rule 170 (Label -> IDENTIFIER .)
    CONTINUE        reduce using rule 170 (Label -> IDENTIFIER .)
    GOTO            reduce using rule 170 (Label -> IDENTIFIER .)
    IF              reduce using rule 170 (Label -> IDENTIFIER .)
    FOR             reduce using rule 170 (Label -> IDENTIFIER .)
    PRINT           reduce using rule 170 (Label -> IDENTIFIER .)
    SCAN            reduce using rule 170 (Label -> IDENTIFIER .)
    CONST           reduce using rule 170 (Label -> IDENTIFIER .)
    TYPE            reduce using rule 170 (Label -> IDENTIFIER .)
    VAR             reduce using rule 170 (Label -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 170 (Label -> IDENTIFIER .)
    SWITCH          reduce using rule 170 (Label -> IDENTIFIER .)
    NOT             reduce using rule 170 (Label -> IDENTIFIER .)
    PLUS            reduce using rule 170 (Label -> IDENTIFIER .)
    MINUS           reduce using rule 170 (Label -> IDENTIFIER .)
    STAR            reduce using rule 170 (Label -> IDENTIFIER .)
    AND             reduce using rule 170 (Label -> IDENTIFIER .)
    LPAREN          reduce using rule 170 (Label -> IDENTIFIER .)
    TRUE            reduce using rule 170 (Label -> IDENTIFIER .)
    FALSE           reduce using rule 170 (Label -> IDENTIFIER .)
    TYPECAST        reduce using rule 170 (Label -> IDENTIFIER .)
    LCURL           reduce using rule 170 (Label -> IDENTIFIER .)
    INTEGER         reduce using rule 170 (Label -> IDENTIFIER .)
    OCTAL           reduce using rule 170 (Label -> IDENTIFIER .)
    HEX             reduce using rule 170 (Label -> IDENTIFIER .)
    RUNE            reduce using rule 170 (Label -> IDENTIFIER .)
    FLOAT           reduce using rule 170 (Label -> IDENTIFIER .)
    IMAGINARY       reduce using rule 170 (Label -> IDENTIFIER .)
    STRING          reduce using rule 170 (Label -> IDENTIFIER .)
    RCURL           reduce using rule 170 (Label -> IDENTIFIER .)
    CASE            reduce using rule 170 (Label -> IDENTIFIER .)
    DEFAULT         reduce using rule 170 (Label -> IDENTIFIER .)


state 300

    (216) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 216 (GotoStmt -> GOTO Label .)
    RETURN          reduce using rule 216 (GotoStmt -> GOTO Label .)
    BREAK           reduce using rule 216 (GotoStmt -> GOTO Label .)
    CONTINUE        reduce using rule 216 (GotoStmt -> GOTO Label .)
    GOTO            reduce using rule 216 (GotoStmt -> GOTO Label .)
    IF              reduce using rule 216 (GotoStmt -> GOTO Label .)
    FOR             reduce using rule 216 (GotoStmt -> GOTO Label .)
    PRINT           reduce using rule 216 (GotoStmt -> GOTO Label .)
    SCAN            reduce using rule 216 (GotoStmt -> GOTO Label .)
    CONST           reduce using rule 216 (GotoStmt -> GOTO Label .)
    TYPE            reduce using rule 216 (GotoStmt -> GOTO Label .)
    VAR             reduce using rule 216 (GotoStmt -> GOTO Label .)
    IDENTIFIER      reduce using rule 216 (GotoStmt -> GOTO Label .)
    SWITCH          reduce using rule 216 (GotoStmt -> GOTO Label .)
    NOT             reduce using rule 216 (GotoStmt -> GOTO Label .)
    PLUS            reduce using rule 216 (GotoStmt -> GOTO Label .)
    MINUS           reduce using rule 216 (GotoStmt -> GOTO Label .)
    STAR            reduce using rule 216 (GotoStmt -> GOTO Label .)
    AND             reduce using rule 216 (GotoStmt -> GOTO Label .)
    LPAREN          reduce using rule 216 (GotoStmt -> GOTO Label .)
    TRUE            reduce using rule 216 (GotoStmt -> GOTO Label .)
    FALSE           reduce using rule 216 (GotoStmt -> GOTO Label .)
    TYPECAST        reduce using rule 216 (GotoStmt -> GOTO Label .)
    LCURL           reduce using rule 216 (GotoStmt -> GOTO Label .)
    INTEGER         reduce using rule 216 (GotoStmt -> GOTO Label .)
    OCTAL           reduce using rule 216 (GotoStmt -> GOTO Label .)
    HEX             reduce using rule 216 (GotoStmt -> GOTO Label .)
    RUNE            reduce using rule 216 (GotoStmt -> GOTO Label .)
    FLOAT           reduce using rule 216 (GotoStmt -> GOTO Label .)
    IMAGINARY       reduce using rule 216 (GotoStmt -> GOTO Label .)
    STRING          reduce using rule 216 (GotoStmt -> GOTO Label .)
    RCURL           reduce using rule 216 (GotoStmt -> GOTO Label .)
    CASE            reduce using rule 216 (GotoStmt -> GOTO Label .)
    DEFAULT         reduce using rule 216 (GotoStmt -> GOTO Label .)


state 301

    (209) ReturnStmt -> RETURN ExpressionPureOpt .

    SEMICOLON       reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    RETURN          reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    BREAK           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    CONTINUE        reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    GOTO            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    IF              reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    FOR             reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    PRINT           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    SCAN            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    CONST           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    TYPE            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    VAR             reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    IDENTIFIER      reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    SWITCH          reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    NOT             reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    PLUS            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    MINUS           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    STAR            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    AND             reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    LPAREN          reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    TRUE            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    FALSE           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    TYPECAST        reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    LCURL           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    INTEGER         reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    OCTAL           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    HEX             reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    RUNE            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    FLOAT           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    IMAGINARY       reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    STRING          reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    RCURL           reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    CASE            reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)
    DEFAULT         reduce using rule 209 (ReturnStmt -> RETURN ExpressionPureOpt .)


state 302

    (211) ExpressionPureOpt -> epsilon .

    SEMICOLON       reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    RETURN          reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    BREAK           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    CONTINUE        reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    GOTO            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    IF              reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    FOR             reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    PRINT           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    SCAN            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    CONST           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    TYPE            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    VAR             reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    IDENTIFIER      reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    SWITCH          reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    NOT             reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    PLUS            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    MINUS           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    STAR            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    AND             reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    LPAREN          reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    TRUE            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    FALSE           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    TYPECAST        reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    LCURL           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    INTEGER         reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    OCTAL           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    HEX             reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    RUNE            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    FLOAT           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    IMAGINARY       reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    STRING          reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    RCURL           reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    CASE            reduce using rule 211 (ExpressionPureOpt -> epsilon .)
    DEFAULT         reduce using rule 211 (ExpressionPureOpt -> epsilon .)


state 303

    (210) ExpressionPureOpt -> Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 210 (ExpressionPureOpt -> Expression .)
    RETURN          reduce using rule 210 (ExpressionPureOpt -> Expression .)
    BREAK           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    CONTINUE        reduce using rule 210 (ExpressionPureOpt -> Expression .)
    GOTO            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    IF              reduce using rule 210 (ExpressionPureOpt -> Expression .)
    FOR             reduce using rule 210 (ExpressionPureOpt -> Expression .)
    PRINT           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    SCAN            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    CONST           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    TYPE            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    VAR             reduce using rule 210 (ExpressionPureOpt -> Expression .)
    IDENTIFIER      reduce using rule 210 (ExpressionPureOpt -> Expression .)
    SWITCH          reduce using rule 210 (ExpressionPureOpt -> Expression .)
    NOT             reduce using rule 210 (ExpressionPureOpt -> Expression .)
    LPAREN          reduce using rule 210 (ExpressionPureOpt -> Expression .)
    TRUE            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    FALSE           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    TYPECAST        reduce using rule 210 (ExpressionPureOpt -> Expression .)
    LCURL           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    INTEGER         reduce using rule 210 (ExpressionPureOpt -> Expression .)
    OCTAL           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    HEX             reduce using rule 210 (ExpressionPureOpt -> Expression .)
    RUNE            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    FLOAT           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    IMAGINARY       reduce using rule 210 (ExpressionPureOpt -> Expression .)
    STRING          reduce using rule 210 (ExpressionPureOpt -> Expression .)
    RCURL           reduce using rule 210 (ExpressionPureOpt -> Expression .)
    CASE            reduce using rule 210 (ExpressionPureOpt -> Expression .)
    DEFAULT         reduce using rule 210 (ExpressionPureOpt -> Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! PLUS            [ reduce using rule 210 (ExpressionPureOpt -> Expression .) ]
  ! MINUS           [ reduce using rule 210 (ExpressionPureOpt -> Expression .) ]
  ! STAR            [ reduce using rule 210 (ExpressionPureOpt -> Expression .) ]
  ! AND             [ reduce using rule 210 (ExpressionPureOpt -> Expression .) ]


state 304

    (169) LabeledStmt -> Label COLON . Statement
    (149) Statement -> . Declaration
    (150) Statement -> . LabeledStmt
    (151) Statement -> . SimpleStmt
    (152) Statement -> . ReturnStmt
    (153) Statement -> . BreakStmt
    (154) Statement -> . ContinueStmt
    (155) Statement -> . GotoStmt
    (156) Statement -> . CreateScope Block EndScope
    (157) Statement -> . IfStmt
    (158) Statement -> . SwitchStmt
    (159) Statement -> . ForStmt
    (160) Statement -> . PrintStmt
    (161) Statement -> . ScanStmt
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (169) LabeledStmt -> . Label COLON Statement
    (164) SimpleStmt -> . epsilon
    (165) SimpleStmt -> . ExpressionStmt
    (166) SimpleStmt -> . IncDecStmt
    (167) SimpleStmt -> . Assignment
    (168) SimpleStmt -> . ShortVarDecl
    (209) ReturnStmt -> . RETURN ExpressionPureOpt
    (212) BreakStmt -> . BREAK LabelOpt
    (213) ContinueStmt -> . CONTINUE LabelOpt
    (216) GotoStmt -> . GOTO Label
    (77) CreateScope -> .
    (187) IfStmt -> . IF Expression CreateScopeIf Block EndScope ElseOpt
    (192) SwitchStmt -> . ExprSwitchStmt
    (200) ForStmt -> . FOR CreateScopeFor ConditionBlockOpt Block EndScope
    (162) PrintStmt -> . PRINT Expression
    (163) ScanStmt -> . SCAN Expression
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (170) Label -> . IDENTIFIER
    (235) epsilon -> .
    (171) ExpressionStmt -> . Expression
    (172) IncDecStmt -> . Expression INCR
    (173) IncDecStmt -> . Expression DECR
    (174) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (193) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for CONTINUE resolved as shift
  ! shift/reduce conflict for GOTO resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for SCAN resolved as shift
  ! shift/reduce conflict for CONST resolved as shift
  ! shift/reduce conflict for TYPE resolved as shift
  ! shift/reduce conflict for VAR resolved as shift
  ! shift/reduce conflict for IDENTIFIER resolved as shift
  ! reduce/reduce conflict for LCURL resolved using rule 77 (CreateScope -> .)
  ! shift/reduce conflict for SWITCH resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for TYPECAST resolved as shift
  ! reduce/reduce conflict for INTEGER resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for OCTAL resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for HEX resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for RUNE resolved using rule 95 (I -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 96 (F -> .)
  ! reduce/reduce conflict for IMAGINARY resolved using rule 97 (C -> .)
  ! reduce/reduce conflict for STRING resolved using rule 98 (S -> .)
    RETURN          shift and go to state 261
    BREAK           shift and go to state 276
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 258
    LCURL           reduce using rule 77 (CreateScope -> .)
    IF              shift and go to state 283
    FOR             shift and go to state 267
    PRINT           shift and go to state 264
    SCAN            shift and go to state 278
    CONST           shift and go to state 16
    TYPE            shift and go to state 25
    VAR             shift and go to state 23
    IDENTIFIER      shift and go to state 272
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)
    SWITCH          shift and go to state 270
    NOT             shift and go to state 104
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

  ! RETURN          [ reduce using rule 235 (epsilon -> .) ]
  ! BREAK           [ reduce using rule 235 (epsilon -> .) ]
  ! CONTINUE        [ reduce using rule 235 (epsilon -> .) ]
  ! GOTO            [ reduce using rule 235 (epsilon -> .) ]
  ! IF              [ reduce using rule 235 (epsilon -> .) ]
  ! FOR             [ reduce using rule 235 (epsilon -> .) ]
  ! PRINT           [ reduce using rule 235 (epsilon -> .) ]
  ! SCAN            [ reduce using rule 235 (epsilon -> .) ]
  ! CONST           [ reduce using rule 235 (epsilon -> .) ]
  ! TYPE            [ reduce using rule 235 (epsilon -> .) ]
  ! VAR             [ reduce using rule 235 (epsilon -> .) ]
  ! IDENTIFIER      [ reduce using rule 235 (epsilon -> .) ]
  ! SWITCH          [ reduce using rule 235 (epsilon -> .) ]
  ! NOT             [ reduce using rule 235 (epsilon -> .) ]
  ! PLUS            [ reduce using rule 235 (epsilon -> .) ]
  ! MINUS           [ reduce using rule 235 (epsilon -> .) ]
  ! STAR            [ reduce using rule 235 (epsilon -> .) ]
  ! AND             [ reduce using rule 235 (epsilon -> .) ]
  ! LPAREN          [ reduce using rule 235 (epsilon -> .) ]
  ! TRUE            [ reduce using rule 235 (epsilon -> .) ]
  ! FALSE           [ reduce using rule 235 (epsilon -> .) ]
  ! TYPECAST        [ reduce using rule 235 (epsilon -> .) ]
  ! LCURL           [ reduce using rule 235 (epsilon -> .) ]
  ! INTEGER         [ reduce using rule 235 (epsilon -> .) ]
  ! OCTAL           [ reduce using rule 235 (epsilon -> .) ]
  ! HEX             [ reduce using rule 235 (epsilon -> .) ]
  ! RUNE            [ reduce using rule 235 (epsilon -> .) ]
  ! FLOAT           [ reduce using rule 235 (epsilon -> .) ]
  ! IMAGINARY       [ reduce using rule 235 (epsilon -> .) ]
  ! STRING          [ reduce using rule 235 (epsilon -> .) ]

    UnaryOp                        shift and go to state 92
    ContinueStmt                   shift and go to state 252
    Conversion                     shift and go to state 90
    SimpleStmt                     shift and go to state 279
    Label                          shift and go to state 262
    BoolConstant                   shift and go to state 93
    ExpressionStmt                 shift and go to state 253
    ForStmt                        shift and go to state 280
    ScanStmt                       shift and go to state 254
    Statement                      shift and go to state 336
    IfStmt                         shift and go to state 265
    Assignment                     shift and go to state 256
    F                              shift and go to state 101
    I                              shift and go to state 102
    IncDecStmt                     shift and go to state 257
    Declaration                    shift and go to state 271
    CreateScope                    shift and go to state 281
    GotoStmt                       shift and go to state 266
    C                              shift and go to state 100
    TypeDecl                       shift and go to state 21
    OperandName                    shift and go to state 98
    LabeledStmt                    shift and go to state 259
    epsilon                        shift and go to state 273
    UnaryExpr                      shift and go to state 103
    Operand                        shift and go to state 114
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 274
    Literal                        shift and go to state 94
    Expression                     shift and go to state 275
    ShortVarDecl                   shift and go to state 282
    BreakStmt                      shift and go to state 284
    SwitchStmt                     shift and go to state 268
    VarDecl                        shift and go to state 24
    PrintStmt                      shift and go to state 260
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    ReturnStmt                     shift and go to state 277
    ConstDecl                      shift and go to state 20
    ExprSwitchStmt                 shift and go to state 263

state 305

    (162) PrintStmt -> PRINT Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 162 (PrintStmt -> PRINT Expression .)
    RETURN          reduce using rule 162 (PrintStmt -> PRINT Expression .)
    BREAK           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    CONTINUE        reduce using rule 162 (PrintStmt -> PRINT Expression .)
    GOTO            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    IF              reduce using rule 162 (PrintStmt -> PRINT Expression .)
    FOR             reduce using rule 162 (PrintStmt -> PRINT Expression .)
    PRINT           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    SCAN            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    CONST           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    TYPE            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    VAR             reduce using rule 162 (PrintStmt -> PRINT Expression .)
    IDENTIFIER      reduce using rule 162 (PrintStmt -> PRINT Expression .)
    SWITCH          reduce using rule 162 (PrintStmt -> PRINT Expression .)
    NOT             reduce using rule 162 (PrintStmt -> PRINT Expression .)
    LPAREN          reduce using rule 162 (PrintStmt -> PRINT Expression .)
    TRUE            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    FALSE           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    TYPECAST        reduce using rule 162 (PrintStmt -> PRINT Expression .)
    LCURL           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    INTEGER         reduce using rule 162 (PrintStmt -> PRINT Expression .)
    OCTAL           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    HEX             reduce using rule 162 (PrintStmt -> PRINT Expression .)
    RUNE            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    FLOAT           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    IMAGINARY       reduce using rule 162 (PrintStmt -> PRINT Expression .)
    STRING          reduce using rule 162 (PrintStmt -> PRINT Expression .)
    RCURL           reduce using rule 162 (PrintStmt -> PRINT Expression .)
    CASE            reduce using rule 162 (PrintStmt -> PRINT Expression .)
    DEFAULT         reduce using rule 162 (PrintStmt -> PRINT Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! PLUS            [ reduce using rule 162 (PrintStmt -> PRINT Expression .) ]
  ! MINUS           [ reduce using rule 162 (PrintStmt -> PRINT Expression .) ]
  ! STAR            [ reduce using rule 162 (PrintStmt -> PRINT Expression .) ]
  ! AND             [ reduce using rule 162 (PrintStmt -> PRINT Expression .) ]


state 306

    (200) ForStmt -> FOR CreateScopeFor . ConditionBlockOpt Block EndScope
    (202) ConditionBlockOpt -> . epsilon
    (203) ConditionBlockOpt -> . Condition
    (204) ConditionBlockOpt -> . ForClause
    (235) epsilon -> .
    (205) Condition -> . Expression
    (206) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (164) SimpleStmt -> . epsilon
    (165) SimpleStmt -> . ExpressionStmt
    (166) SimpleStmt -> . IncDecStmt
    (167) SimpleStmt -> . Assignment
    (168) SimpleStmt -> . ShortVarDecl
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (171) ExpressionStmt -> . Expression
    (172) IncDecStmt -> . Expression INCR
    (173) IncDecStmt -> . Expression DECR
    (174) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (56) ExpressionList -> . Expression ExpressionRep
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    LCURL           reduce using rule 235 (epsilon -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 343
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    S                              shift and go to state 105
    SimpleStmt                     shift and go to state 337
    BoolConstant                   shift and go to state 93
    ExpressionStmt                 shift and go to state 253
    OperandName                    shift and go to state 98
    Assignment                     shift and go to state 256
    IncDecStmt                     shift and go to state 257
    Condition                      shift and go to state 338
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 339
    UnaryExpr                      shift and go to state 103
    ConditionBlockOpt              shift and go to state 340
    PrimaryExpr                    shift and go to state 113
    ExpressionList                 shift and go to state 274
    ForClause                      shift and go to state 341
    Expression                     shift and go to state 342
    ShortVarDecl                   shift and go to state 282
    Literal                        shift and go to state 94
    BasicLit                       shift and go to state 112
    Operand                        shift and go to state 114

state 307

    (215) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 215 (LabelOpt -> epsilon .)
    RETURN          reduce using rule 215 (LabelOpt -> epsilon .)
    BREAK           reduce using rule 215 (LabelOpt -> epsilon .)
    CONTINUE        reduce using rule 215 (LabelOpt -> epsilon .)
    GOTO            reduce using rule 215 (LabelOpt -> epsilon .)
    IF              reduce using rule 215 (LabelOpt -> epsilon .)
    FOR             reduce using rule 215 (LabelOpt -> epsilon .)
    PRINT           reduce using rule 215 (LabelOpt -> epsilon .)
    SCAN            reduce using rule 215 (LabelOpt -> epsilon .)
    CONST           reduce using rule 215 (LabelOpt -> epsilon .)
    TYPE            reduce using rule 215 (LabelOpt -> epsilon .)
    VAR             reduce using rule 215 (LabelOpt -> epsilon .)
    IDENTIFIER      reduce using rule 215 (LabelOpt -> epsilon .)
    SWITCH          reduce using rule 215 (LabelOpt -> epsilon .)
    NOT             reduce using rule 215 (LabelOpt -> epsilon .)
    PLUS            reduce using rule 215 (LabelOpt -> epsilon .)
    MINUS           reduce using rule 215 (LabelOpt -> epsilon .)
    STAR            reduce using rule 215 (LabelOpt -> epsilon .)
    AND             reduce using rule 215 (LabelOpt -> epsilon .)
    LPAREN          reduce using rule 215 (LabelOpt -> epsilon .)
    TRUE            reduce using rule 215 (LabelOpt -> epsilon .)
    FALSE           reduce using rule 215 (LabelOpt -> epsilon .)
    TYPECAST        reduce using rule 215 (LabelOpt -> epsilon .)
    LCURL           reduce using rule 215 (LabelOpt -> epsilon .)
    INTEGER         reduce using rule 215 (LabelOpt -> epsilon .)
    OCTAL           reduce using rule 215 (LabelOpt -> epsilon .)
    HEX             reduce using rule 215 (LabelOpt -> epsilon .)
    RUNE            reduce using rule 215 (LabelOpt -> epsilon .)
    FLOAT           reduce using rule 215 (LabelOpt -> epsilon .)
    IMAGINARY       reduce using rule 215 (LabelOpt -> epsilon .)
    STRING          reduce using rule 215 (LabelOpt -> epsilon .)
    RCURL           reduce using rule 215 (LabelOpt -> epsilon .)
    CASE            reduce using rule 215 (LabelOpt -> epsilon .)
    DEFAULT         reduce using rule 215 (LabelOpt -> epsilon .)


state 308

    (213) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    RETURN          reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    BREAK           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    CONTINUE        reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    GOTO            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    IF              reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    FOR             reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    PRINT           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    SCAN            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    CONST           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    TYPE            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    VAR             reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    IDENTIFIER      reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    SWITCH          reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    NOT             reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    PLUS            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    MINUS           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    STAR            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    AND             reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    LPAREN          reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    TRUE            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    FALSE           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    TYPECAST        reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    LCURL           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    INTEGER         reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    OCTAL           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    HEX             reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    RUNE            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    FLOAT           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    IMAGINARY       reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    STRING          reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    RCURL           reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    CASE            reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)
    DEFAULT         reduce using rule 213 (ContinueStmt -> CONTINUE LabelOpt .)


state 309

    (214) LabelOpt -> Label .

    SEMICOLON       reduce using rule 214 (LabelOpt -> Label .)
    RETURN          reduce using rule 214 (LabelOpt -> Label .)
    BREAK           reduce using rule 214 (LabelOpt -> Label .)
    CONTINUE        reduce using rule 214 (LabelOpt -> Label .)
    GOTO            reduce using rule 214 (LabelOpt -> Label .)
    IF              reduce using rule 214 (LabelOpt -> Label .)
    FOR             reduce using rule 214 (LabelOpt -> Label .)
    PRINT           reduce using rule 214 (LabelOpt -> Label .)
    SCAN            reduce using rule 214 (LabelOpt -> Label .)
    CONST           reduce using rule 214 (LabelOpt -> Label .)
    TYPE            reduce using rule 214 (LabelOpt -> Label .)
    VAR             reduce using rule 214 (LabelOpt -> Label .)
    IDENTIFIER      reduce using rule 214 (LabelOpt -> Label .)
    SWITCH          reduce using rule 214 (LabelOpt -> Label .)
    NOT             reduce using rule 214 (LabelOpt -> Label .)
    PLUS            reduce using rule 214 (LabelOpt -> Label .)
    MINUS           reduce using rule 214 (LabelOpt -> Label .)
    STAR            reduce using rule 214 (LabelOpt -> Label .)
    AND             reduce using rule 214 (LabelOpt -> Label .)
    LPAREN          reduce using rule 214 (LabelOpt -> Label .)
    TRUE            reduce using rule 214 (LabelOpt -> Label .)
    FALSE           reduce using rule 214 (LabelOpt -> Label .)
    TYPECAST        reduce using rule 214 (LabelOpt -> Label .)
    LCURL           reduce using rule 214 (LabelOpt -> Label .)
    INTEGER         reduce using rule 214 (LabelOpt -> Label .)
    OCTAL           reduce using rule 214 (LabelOpt -> Label .)
    HEX             reduce using rule 214 (LabelOpt -> Label .)
    RUNE            reduce using rule 214 (LabelOpt -> Label .)
    FLOAT           reduce using rule 214 (LabelOpt -> Label .)
    IMAGINARY       reduce using rule 214 (LabelOpt -> Label .)
    STRING          reduce using rule 214 (LabelOpt -> Label .)
    RCURL           reduce using rule 214 (LabelOpt -> Label .)
    CASE            reduce using rule 214 (LabelOpt -> Label .)
    DEFAULT         reduce using rule 214 (LabelOpt -> Label .)


state 310

    (193) ExprSwitchStmt -> SWITCH Expression . CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (77) CreateScope -> .

    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    LCURL           reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 344

state 311

    (73) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 345

state 312

    (175) assign_op -> AssignOp .

    NOT             reduce using rule 175 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 175 (assign_op -> AssignOp .)
    PLUS            reduce using rule 175 (assign_op -> AssignOp .)
    MINUS           reduce using rule 175 (assign_op -> AssignOp .)
    STAR            reduce using rule 175 (assign_op -> AssignOp .)
    AND             reduce using rule 175 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 175 (assign_op -> AssignOp .)
    TRUE            reduce using rule 175 (assign_op -> AssignOp .)
    FALSE           reduce using rule 175 (assign_op -> AssignOp .)
    TYPECAST        reduce using rule 175 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 175 (assign_op -> AssignOp .)
    OCTAL           reduce using rule 175 (assign_op -> AssignOp .)
    HEX             reduce using rule 175 (assign_op -> AssignOp .)
    RUNE            reduce using rule 175 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 175 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 175 (assign_op -> AssignOp .)
    STRING          reduce using rule 175 (assign_op -> AssignOp .)


state 313

    (185) AssignOp -> RSHIFT_ASSIGN .

    NOT             reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    PLUS            reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    MINUS           reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    STAR            reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    AND             reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    LPAREN          reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    TRUE            reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    FALSE           reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    INTEGER         reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    OCTAL           reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    HEX             reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    RUNE            reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    FLOAT           reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)
    STRING          reduce using rule 185 (AssignOp -> RSHIFT_ASSIGN .)


state 314

    (178) AssignOp -> STAR_ASSIGN .

    NOT             reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    IDENTIFIER      reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    PLUS            reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    MINUS           reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    STAR            reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    AND             reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    LPAREN          reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    TRUE            reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    FALSE           reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    TYPECAST        reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    INTEGER         reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    OCTAL           reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    HEX             reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    RUNE            reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    FLOAT           reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    IMAGINARY       reduce using rule 178 (AssignOp -> STAR_ASSIGN .)
    STRING          reduce using rule 178 (AssignOp -> STAR_ASSIGN .)


state 315

    (177) AssignOp -> MINUS_ASSIGN .

    NOT             reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    IDENTIFIER      reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    PLUS            reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    MINUS           reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    STAR            reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    AND             reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    LPAREN          reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    TRUE            reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    FALSE           reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    TYPECAST        reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    INTEGER         reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    OCTAL           reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    HEX             reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    RUNE            reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    FLOAT           reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    IMAGINARY       reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)
    STRING          reduce using rule 177 (AssignOp -> MINUS_ASSIGN .)


state 316

    (183) AssignOp -> XOR_ASSIGN .

    NOT             reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    PLUS            reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    MINUS           reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    STAR            reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    TRUE            reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    FALSE           reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    TYPECAST        reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    INTEGER         reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    OCTAL           reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    HEX             reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    IMAGINARY       reduce using rule 183 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 183 (AssignOp -> XOR_ASSIGN .)


state 317

    (182) AssignOp -> OR_ASSIGN .

    NOT             reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    PLUS            reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    MINUS           reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    STAR            reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    TRUE            reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    FALSE           reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    TYPECAST        reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    INTEGER         reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    OCTAL           reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    HEX             reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    IMAGINARY       reduce using rule 182 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 182 (AssignOp -> OR_ASSIGN .)


state 318

    (180) AssignOp -> MOD_ASSIGN .

    NOT             reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    PLUS            reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    MINUS           reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    STAR            reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    TRUE            reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    FALSE           reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    TYPECAST        reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    INTEGER         reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    OCTAL           reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    HEX             reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    IMAGINARY       reduce using rule 180 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 180 (AssignOp -> MOD_ASSIGN .)


state 319

    (184) AssignOp -> LSHIFT_ASSIGN .

    NOT             reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    PLUS            reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    MINUS           reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    STAR            reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    AND             reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    LPAREN          reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    TRUE            reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    FALSE           reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    INTEGER         reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    OCTAL           reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    HEX             reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    RUNE            reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    FLOAT           reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)
    STRING          reduce using rule 184 (AssignOp -> LSHIFT_ASSIGN .)


state 320

    (181) AssignOp -> AND_ASSIGN .

    NOT             reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    PLUS            reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    MINUS           reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    STAR            reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    TRUE            reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    FALSE           reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    TYPECAST        reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    INTEGER         reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    OCTAL           reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    HEX             reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    IMAGINARY       reduce using rule 181 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 181 (AssignOp -> AND_ASSIGN .)


state 321

    (174) Assignment -> ExpressionList assign_op . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    ExpressionList                 shift and go to state 346
    Expression                     shift and go to state 131
    Operand                        shift and go to state 114

state 322

    (176) AssignOp -> PLUS_ASSIGN .

    NOT             reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    IDENTIFIER      reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    PLUS            reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    MINUS           reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    STAR            reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    AND             reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    LPAREN          reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    TRUE            reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    FALSE           reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    TYPECAST        reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    INTEGER         reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    OCTAL           reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    HEX             reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    RUNE            reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    FLOAT           reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    IMAGINARY       reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)
    STRING          reduce using rule 176 (AssignOp -> PLUS_ASSIGN .)


state 323

    (179) AssignOp -> DIVIDE_ASSIGN .

    NOT             reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    IDENTIFIER      reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    STAR            reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    AND             reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    LPAREN          reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    TRUE            reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    FALSE           reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    TYPECAST        reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    INTEGER         reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    OCTAL           reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    HEX             reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    RUNE            reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    FLOAT           reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    IMAGINARY       reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 179 (AssignOp -> DIVIDE_ASSIGN .)


state 324

    (186) AssignOp -> ASSIGN .

    NOT             reduce using rule 186 (AssignOp -> ASSIGN .)
    IDENTIFIER      reduce using rule 186 (AssignOp -> ASSIGN .)
    PLUS            reduce using rule 186 (AssignOp -> ASSIGN .)
    MINUS           reduce using rule 186 (AssignOp -> ASSIGN .)
    STAR            reduce using rule 186 (AssignOp -> ASSIGN .)
    AND             reduce using rule 186 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 186 (AssignOp -> ASSIGN .)
    TRUE            reduce using rule 186 (AssignOp -> ASSIGN .)
    FALSE           reduce using rule 186 (AssignOp -> ASSIGN .)
    TYPECAST        reduce using rule 186 (AssignOp -> ASSIGN .)
    INTEGER         reduce using rule 186 (AssignOp -> ASSIGN .)
    OCTAL           reduce using rule 186 (AssignOp -> ASSIGN .)
    HEX             reduce using rule 186 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 186 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 186 (AssignOp -> ASSIGN .)
    IMAGINARY       reduce using rule 186 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 186 (AssignOp -> ASSIGN .)


state 325

    (173) IncDecStmt -> Expression DECR .

    SEMICOLON       reduce using rule 173 (IncDecStmt -> Expression DECR .)
    RETURN          reduce using rule 173 (IncDecStmt -> Expression DECR .)
    BREAK           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    CONTINUE        reduce using rule 173 (IncDecStmt -> Expression DECR .)
    GOTO            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    IF              reduce using rule 173 (IncDecStmt -> Expression DECR .)
    FOR             reduce using rule 173 (IncDecStmt -> Expression DECR .)
    PRINT           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    SCAN            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    CONST           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    TYPE            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    VAR             reduce using rule 173 (IncDecStmt -> Expression DECR .)
    IDENTIFIER      reduce using rule 173 (IncDecStmt -> Expression DECR .)
    SWITCH          reduce using rule 173 (IncDecStmt -> Expression DECR .)
    NOT             reduce using rule 173 (IncDecStmt -> Expression DECR .)
    PLUS            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    MINUS           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    STAR            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    AND             reduce using rule 173 (IncDecStmt -> Expression DECR .)
    LPAREN          reduce using rule 173 (IncDecStmt -> Expression DECR .)
    TRUE            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    FALSE           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    TYPECAST        reduce using rule 173 (IncDecStmt -> Expression DECR .)
    LCURL           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    INTEGER         reduce using rule 173 (IncDecStmt -> Expression DECR .)
    OCTAL           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    HEX             reduce using rule 173 (IncDecStmt -> Expression DECR .)
    RUNE            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    FLOAT           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    IMAGINARY       reduce using rule 173 (IncDecStmt -> Expression DECR .)
    STRING          reduce using rule 173 (IncDecStmt -> Expression DECR .)
    RCURL           reduce using rule 173 (IncDecStmt -> Expression DECR .)
    CASE            reduce using rule 173 (IncDecStmt -> Expression DECR .)
    DEFAULT         reduce using rule 173 (IncDecStmt -> Expression DECR .)


state 326

    (172) IncDecStmt -> Expression INCR .

    SEMICOLON       reduce using rule 172 (IncDecStmt -> Expression INCR .)
    RETURN          reduce using rule 172 (IncDecStmt -> Expression INCR .)
    BREAK           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    CONTINUE        reduce using rule 172 (IncDecStmt -> Expression INCR .)
    GOTO            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    IF              reduce using rule 172 (IncDecStmt -> Expression INCR .)
    FOR             reduce using rule 172 (IncDecStmt -> Expression INCR .)
    PRINT           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    SCAN            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    CONST           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    TYPE            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    VAR             reduce using rule 172 (IncDecStmt -> Expression INCR .)
    IDENTIFIER      reduce using rule 172 (IncDecStmt -> Expression INCR .)
    SWITCH          reduce using rule 172 (IncDecStmt -> Expression INCR .)
    NOT             reduce using rule 172 (IncDecStmt -> Expression INCR .)
    PLUS            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    MINUS           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    STAR            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    AND             reduce using rule 172 (IncDecStmt -> Expression INCR .)
    LPAREN          reduce using rule 172 (IncDecStmt -> Expression INCR .)
    TRUE            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    FALSE           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    TYPECAST        reduce using rule 172 (IncDecStmt -> Expression INCR .)
    LCURL           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    INTEGER         reduce using rule 172 (IncDecStmt -> Expression INCR .)
    OCTAL           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    HEX             reduce using rule 172 (IncDecStmt -> Expression INCR .)
    RUNE            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    FLOAT           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    IMAGINARY       reduce using rule 172 (IncDecStmt -> Expression INCR .)
    STRING          reduce using rule 172 (IncDecStmt -> Expression INCR .)
    RCURL           reduce using rule 172 (IncDecStmt -> Expression INCR .)
    CASE            reduce using rule 172 (IncDecStmt -> Expression INCR .)
    DEFAULT         reduce using rule 172 (IncDecStmt -> Expression INCR .)


state 327

    (212) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    RETURN          reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    BREAK           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    CONTINUE        reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    GOTO            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    IF              reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    FOR             reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    PRINT           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    SCAN            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    CONST           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    TYPE            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    VAR             reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    IDENTIFIER      reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    SWITCH          reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    NOT             reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    PLUS            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    MINUS           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    STAR            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    AND             reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    LPAREN          reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    TRUE            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    FALSE           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    TYPECAST        reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    LCURL           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    INTEGER         reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    OCTAL           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    HEX             reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    RUNE            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    FLOAT           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    IMAGINARY       reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    STRING          reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    RCURL           reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    CASE            reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)
    DEFAULT         reduce using rule 212 (BreakStmt -> BREAK LabelOpt .)


state 328

    (163) ScanStmt -> SCAN Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 163 (ScanStmt -> SCAN Expression .)
    RETURN          reduce using rule 163 (ScanStmt -> SCAN Expression .)
    BREAK           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    CONTINUE        reduce using rule 163 (ScanStmt -> SCAN Expression .)
    GOTO            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    IF              reduce using rule 163 (ScanStmt -> SCAN Expression .)
    FOR             reduce using rule 163 (ScanStmt -> SCAN Expression .)
    PRINT           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    SCAN            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    CONST           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    TYPE            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    VAR             reduce using rule 163 (ScanStmt -> SCAN Expression .)
    IDENTIFIER      reduce using rule 163 (ScanStmt -> SCAN Expression .)
    SWITCH          reduce using rule 163 (ScanStmt -> SCAN Expression .)
    NOT             reduce using rule 163 (ScanStmt -> SCAN Expression .)
    LPAREN          reduce using rule 163 (ScanStmt -> SCAN Expression .)
    TRUE            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    FALSE           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    TYPECAST        reduce using rule 163 (ScanStmt -> SCAN Expression .)
    LCURL           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    INTEGER         reduce using rule 163 (ScanStmt -> SCAN Expression .)
    OCTAL           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    HEX             reduce using rule 163 (ScanStmt -> SCAN Expression .)
    RUNE            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    FLOAT           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    IMAGINARY       reduce using rule 163 (ScanStmt -> SCAN Expression .)
    STRING          reduce using rule 163 (ScanStmt -> SCAN Expression .)
    RCURL           reduce using rule 163 (ScanStmt -> SCAN Expression .)
    CASE            reduce using rule 163 (ScanStmt -> SCAN Expression .)
    DEFAULT         reduce using rule 163 (ScanStmt -> SCAN Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! PLUS            [ reduce using rule 163 (ScanStmt -> SCAN Expression .) ]
  ! MINUS           [ reduce using rule 163 (ScanStmt -> SCAN Expression .) ]
  ! STAR            [ reduce using rule 163 (ScanStmt -> SCAN Expression .) ]
  ! AND             [ reduce using rule 163 (ScanStmt -> SCAN Expression .) ]


state 329

    (156) Statement -> CreateScope Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 347

state 330

    (187) IfStmt -> IF Expression . CreateScopeIf Block EndScope ElseOpt
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (188) CreateScopeIf -> .

    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    LCURL           reduce using rule 188 (CreateScopeIf -> .)

    CreateScopeIf                  shift and go to state 348

state 331

    (110) StructFieldList -> IDENTIFIER COLON Expression StructFieldRep .

    RCURL           reduce using rule 110 (StructFieldList -> IDENTIFIER COLON Expression StructFieldRep .)


state 332

    (113) StructFieldRep -> epsilon .

    RCURL           reduce using rule 113 (StructFieldRep -> epsilon .)


state 333

    (112) StructFieldRep -> COMMA . IDENTIFIER COLON Expression StructFieldRep

    IDENTIFIER      shift and go to state 349


state 334

    (115) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .

    LSQUARE         reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LPAREN          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DOT             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_OR      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_AND     reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQUALS          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOT_ASSIGN      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSER          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATER         reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESS_EQUALS     reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MORE_EQUALS     reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR              reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSQUARE         reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMMA           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SEMICOLON       reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    FUNC            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    CONST           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    TYPE            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    VAR             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    $end            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RETURN          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    BREAK           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    CONTINUE        reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GOTO            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    IF              reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    FOR             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PRINT           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SCAN            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    IDENTIFIER      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SWITCH          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOT             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    TRUE            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    FALSE           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    TYPECAST        reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LCURL           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INTEGER         reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OCTAL           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    HEX             reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RUNE            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    FLOAT           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    IMAGINARY       reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STRING          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RCURL           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    CASE            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DEFAULT         reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RPAREN          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COLON           reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INCR            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DECR            reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS_ASSIGN     reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS_ASSIGN    reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR_ASSIGN     reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD_ASSIGN      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND_ASSIGN      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR_ASSIGN       reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR_ASSIGN      reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ASSIGN          reduce using rule 115 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)


state 335

    (116) Slice -> LSQUARE ExpressionOpt COLON Expression COLON . Expression RSQUARE
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 350
    Operand                        shift and go to state 114

state 336

    (169) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    RETURN          reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    BREAK           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    CONTINUE        reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    GOTO            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    IF              reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    FOR             reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    PRINT           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    SCAN            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    CONST           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    TYPE            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    VAR             reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    IDENTIFIER      reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    SWITCH          reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    NOT             reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    PLUS            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    MINUS           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    STAR            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    AND             reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    LPAREN          reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    TRUE            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    FALSE           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    TYPECAST        reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    LCURL           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    INTEGER         reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    OCTAL           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    HEX             reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    RUNE            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    FLOAT           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    IMAGINARY       reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    STRING          reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    RCURL           reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    CASE            reduce using rule 169 (LabeledStmt -> Label COLON Statement .)
    DEFAULT         reduce using rule 169 (LabeledStmt -> Label COLON Statement .)


state 337

    (206) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 351


state 338

    (203) ConditionBlockOpt -> Condition .

    LCURL           reduce using rule 203 (ConditionBlockOpt -> Condition .)


state 339

    (202) ConditionBlockOpt -> epsilon .
    (164) SimpleStmt -> epsilon .

    LCURL           reduce using rule 202 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 164 (SimpleStmt -> epsilon .)


state 340

    (200) ForStmt -> FOR CreateScopeFor ConditionBlockOpt . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 185

    Block                          shift and go to state 352

state 341

    (204) ConditionBlockOpt -> ForClause .

    LCURL           reduce using rule 204 (ConditionBlockOpt -> ForClause .)


state 342

    (205) Condition -> Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (171) ExpressionStmt -> Expression .
    (172) IncDecStmt -> Expression . INCR
    (173) IncDecStmt -> Expression . DECR
    (56) ExpressionList -> Expression . ExpressionRep
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (235) epsilon -> .

    LCURL           reduce using rule 205 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    SEMICOLON       reduce using rule 171 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 326
    DECR            shift and go to state 325
    COMMA           reduce using rule 235 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 235 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 235 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 235 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 235 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 235 (epsilon -> .)
    AND_ASSIGN      reduce using rule 235 (epsilon -> .)
    OR_ASSIGN       reduce using rule 235 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 235 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 235 (epsilon -> .)
    ASSIGN          reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 197
    ExpressionRep                  shift and go to state 196

state 343

    (73) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (109) PrimaryExpr -> IDENTIFIER . LCURL StructFieldList RCURL SemiColonOpt
    (99) OperandName -> IDENTIFIER .

  ! shift/reduce conflict for LCURL resolved as shift
    QUICK_ASSIGN    shift and go to state 311
    LCURL           shift and go to state 166
    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)

  ! LCURL           [ reduce using rule 99 (OperandName -> IDENTIFIER .) ]


state 344

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope . LCURL StartSwitch ExprCaseClauseRep RCURL EndScope

    LCURL           shift and go to state 353


state 345

    (73) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for STAR resolved as shift
  ! shift/reduce conflict for AND resolved as shift
    SEMICOLON       reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    RETURN          reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    BREAK           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    CONTINUE        reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    GOTO            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    IF              reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    FOR             reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    PRINT           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    SCAN            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    CONST           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    TYPE            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    VAR             reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    IDENTIFIER      reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    SWITCH          reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    NOT             reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LPAREN          reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    TRUE            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    FALSE           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    TYPECAST        reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LCURL           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    INTEGER         reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    OCTAL           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    HEX             reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    RUNE            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    FLOAT           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    IMAGINARY       reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    STRING          reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    RCURL           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    CASE            reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    DEFAULT         reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148

  ! PLUS            [ reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .) ]
  ! MINUS           [ reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .) ]
  ! STAR            [ reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .) ]
  ! AND             [ reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .) ]


state 346

    (174) Assignment -> ExpressionList assign_op ExpressionList .

    LCURL           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    SEMICOLON       reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    RETURN          reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    BREAK           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    CONTINUE        reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    GOTO            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    IF              reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    FOR             reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    PRINT           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    SCAN            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    CONST           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    TYPE            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    VAR             reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    IDENTIFIER      reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    SWITCH          reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    NOT             reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    PLUS            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    MINUS           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    STAR            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    AND             reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    LPAREN          reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    TRUE            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    FALSE           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    TYPECAST        reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    INTEGER         reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    OCTAL           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    HEX             reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    RUNE            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    FLOAT           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    IMAGINARY       reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    STRING          reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    RCURL           reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    CASE            reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)
    DEFAULT         reduce using rule 174 (Assignment -> ExpressionList assign_op ExpressionList .)


state 347

    (156) Statement -> CreateScope Block EndScope .

    SEMICOLON       reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    RETURN          reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    BREAK           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    CONTINUE        reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    GOTO            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    IF              reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    FOR             reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    PRINT           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    SCAN            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    CONST           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    TYPE            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    VAR             reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    IDENTIFIER      reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    SWITCH          reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    NOT             reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    PLUS            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    MINUS           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    STAR            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    AND             reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    LPAREN          reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    TRUE            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    FALSE           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    TYPECAST        reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    LCURL           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    INTEGER         reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    OCTAL           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    HEX             reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    RUNE            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    FLOAT           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    IMAGINARY       reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    STRING          reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    RCURL           reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    CASE            reduce using rule 156 (Statement -> CreateScope Block EndScope .)
    DEFAULT         reduce using rule 156 (Statement -> CreateScope Block EndScope .)


state 348

    (187) IfStmt -> IF Expression CreateScopeIf . Block EndScope ElseOpt
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 185

    Block                          shift and go to state 354

state 349

    (112) StructFieldRep -> COMMA IDENTIFIER . COLON Expression StructFieldRep

    COLON           shift and go to state 355


state 350

    (116) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression . RSQUARE
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    RSQUARE         shift and go to state 356
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 351

    (206) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (207) ConditionOpt -> . epsilon
    (208) ConditionOpt -> . Condition
    (235) epsilon -> .
    (205) Condition -> . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    SEMICOLON       reduce using rule 235 (epsilon -> .)
    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    Condition                      shift and go to state 357
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 358
    UnaryExpr                      shift and go to state 103
    ConditionOpt                   shift and go to state 359
    Expression                     shift and go to state 360
    S                              shift and go to state 105
    Operand                        shift and go to state 114

state 352

    (200) ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 361

state 353

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL . StartSwitch ExprCaseClauseRep RCURL EndScope
    (194) StartSwitch -> .

    RCURL           reduce using rule 194 (StartSwitch -> .)
    CASE            reduce using rule 194 (StartSwitch -> .)
    DEFAULT         reduce using rule 194 (StartSwitch -> .)

    StartSwitch                    shift and go to state 362

state 354

    (187) IfStmt -> IF Expression CreateScopeIf Block . EndScope ElseOpt
    (78) EndScope -> .

    ELSE            reduce using rule 78 (EndScope -> .)
    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 363

state 355

    (112) StructFieldRep -> COMMA IDENTIFIER COLON . Expression StructFieldRep
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    PrimaryExpr                    shift and go to state 113
    BoolConstant                   shift and go to state 93
    Literal                        shift and go to state 94
    OperandName                    shift and go to state 98
    BasicLit                       shift and go to state 112
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    UnaryExpr                      shift and go to state 103
    S                              shift and go to state 105
    Expression                     shift and go to state 364
    Operand                        shift and go to state 114

state 356

    (116) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .

    LSQUARE         reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LPAREN          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DOT             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQUALS          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSER          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATER         reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR              reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSQUARE         reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMMA           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SEMICOLON       reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    FUNC            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    CONST           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    TYPE            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    VAR             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    $end            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RETURN          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    BREAK           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    CONTINUE        reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GOTO            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    IF              reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    FOR             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PRINT           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SCAN            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    IDENTIFIER      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SWITCH          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOT             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    TRUE            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    FALSE           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    TYPECAST        reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LCURL           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INTEGER         reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OCTAL           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    HEX             reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RUNE            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    FLOAT           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    IMAGINARY       reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STRING          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RCURL           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    CASE            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DEFAULT         reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RPAREN          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COLON           reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INCR            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DECR            reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ASSIGN          reduce using rule 116 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)


state 357

    (208) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 208 (ConditionOpt -> Condition .)


state 358

    (207) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 207 (ConditionOpt -> epsilon .)


state 359

    (206) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 365


state 360

    (205) Condition -> Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 205 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 361

    (200) ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .

    SEMICOLON       reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    RETURN          reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    BREAK           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    CONTINUE        reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    GOTO            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    IF              reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    FOR             reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    PRINT           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    SCAN            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    CONST           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    TYPE            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    VAR             reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    IDENTIFIER      reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    SWITCH          reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    NOT             reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    PLUS            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    MINUS           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    STAR            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    AND             reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    LPAREN          reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    TRUE            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    FALSE           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    TYPECAST        reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    LCURL           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    INTEGER         reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    OCTAL           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    HEX             reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    RUNE            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    FLOAT           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    IMAGINARY       reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    STRING          reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    RCURL           reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    CASE            reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)
    DEFAULT         reduce using rule 200 (ForStmt -> FOR CreateScopeFor ConditionBlockOpt Block EndScope .)


state 362

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch . ExprCaseClauseRep RCURL EndScope
    (195) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (196) ExprCaseClauseRep -> . epsilon
    (235) epsilon -> .

    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 366
    ExprCaseClauseRep              shift and go to state 367

state 363

    (187) IfStmt -> IF Expression CreateScopeIf Block EndScope . ElseOpt
    (189) ElseOpt -> . ELSE IfStmt
    (190) ElseOpt -> . ELSE CreateScope Block EndScope
    (191) ElseOpt -> . epsilon
    (235) epsilon -> .

    ELSE            shift and go to state 369
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

    epsilon                        shift and go to state 368
    ElseOpt                        shift and go to state 370

state 364

    (112) StructFieldRep -> COMMA IDENTIFIER COLON Expression . StructFieldRep
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression
    (112) StructFieldRep -> . COMMA IDENTIFIER COLON Expression StructFieldRep
    (113) StructFieldRep -> . epsilon
    (235) epsilon -> .

    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148
    COMMA           shift and go to state 333
    RCURL           reduce using rule 235 (epsilon -> .)

    StructFieldRep                 shift and go to state 371
    epsilon                        shift and go to state 332

state 365

    (206) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (164) SimpleStmt -> . epsilon
    (165) SimpleStmt -> . ExpressionStmt
    (166) SimpleStmt -> . IncDecStmt
    (167) SimpleStmt -> . Assignment
    (168) SimpleStmt -> . ShortVarDecl
    (235) epsilon -> .
    (171) ExpressionStmt -> . Expression
    (172) IncDecStmt -> . Expression INCR
    (173) IncDecStmt -> . Expression DECR
    (174) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    LCURL           reduce using rule 235 (epsilon -> .)
    IDENTIFIER      shift and go to state 343
    NOT             shift and go to state 104
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 92
    S                              shift and go to state 105
    PrimaryExpr                    shift and go to state 113
    Conversion                     shift and go to state 90
    SimpleStmt                     shift and go to state 372
    BoolConstant                   shift and go to state 93
    ExpressionStmt                 shift and go to state 253
    Operand                        shift and go to state 114
    OperandName                    shift and go to state 98
    Assignment                     shift and go to state 256
    IncDecStmt                     shift and go to state 257
    C                              shift and go to state 100
    F                              shift and go to state 101
    I                              shift and go to state 102
    epsilon                        shift and go to state 273
    UnaryExpr                      shift and go to state 103
    ExpressionList                 shift and go to state 274
    Expression                     shift and go to state 275
    ShortVarDecl                   shift and go to state 282
    Literal                        shift and go to state 94
    BasicLit                       shift and go to state 112

state 366

    (196) ExprCaseClauseRep -> epsilon .

    RCURL           reduce using rule 196 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 196 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 196 (ExprCaseClauseRep -> epsilon .)


state 367

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep . RCURL EndScope
    (195) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (197) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (198) ExprSwitchCase -> . CASE Expression
    (199) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 376
    CASE            shift and go to state 373
    DEFAULT         shift and go to state 375

    ExprSwitchCase                 shift and go to state 374
    ExprCaseClause                 shift and go to state 377

state 368

    (191) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 191 (ElseOpt -> epsilon .)
    RETURN          reduce using rule 191 (ElseOpt -> epsilon .)
    BREAK           reduce using rule 191 (ElseOpt -> epsilon .)
    CONTINUE        reduce using rule 191 (ElseOpt -> epsilon .)
    GOTO            reduce using rule 191 (ElseOpt -> epsilon .)
    IF              reduce using rule 191 (ElseOpt -> epsilon .)
    FOR             reduce using rule 191 (ElseOpt -> epsilon .)
    PRINT           reduce using rule 191 (ElseOpt -> epsilon .)
    SCAN            reduce using rule 191 (ElseOpt -> epsilon .)
    CONST           reduce using rule 191 (ElseOpt -> epsilon .)
    TYPE            reduce using rule 191 (ElseOpt -> epsilon .)
    VAR             reduce using rule 191 (ElseOpt -> epsilon .)
    IDENTIFIER      reduce using rule 191 (ElseOpt -> epsilon .)
    SWITCH          reduce using rule 191 (ElseOpt -> epsilon .)
    NOT             reduce using rule 191 (ElseOpt -> epsilon .)
    PLUS            reduce using rule 191 (ElseOpt -> epsilon .)
    MINUS           reduce using rule 191 (ElseOpt -> epsilon .)
    STAR            reduce using rule 191 (ElseOpt -> epsilon .)
    AND             reduce using rule 191 (ElseOpt -> epsilon .)
    LPAREN          reduce using rule 191 (ElseOpt -> epsilon .)
    TRUE            reduce using rule 191 (ElseOpt -> epsilon .)
    FALSE           reduce using rule 191 (ElseOpt -> epsilon .)
    TYPECAST        reduce using rule 191 (ElseOpt -> epsilon .)
    LCURL           reduce using rule 191 (ElseOpt -> epsilon .)
    INTEGER         reduce using rule 191 (ElseOpt -> epsilon .)
    OCTAL           reduce using rule 191 (ElseOpt -> epsilon .)
    HEX             reduce using rule 191 (ElseOpt -> epsilon .)
    RUNE            reduce using rule 191 (ElseOpt -> epsilon .)
    FLOAT           reduce using rule 191 (ElseOpt -> epsilon .)
    IMAGINARY       reduce using rule 191 (ElseOpt -> epsilon .)
    STRING          reduce using rule 191 (ElseOpt -> epsilon .)
    RCURL           reduce using rule 191 (ElseOpt -> epsilon .)
    CASE            reduce using rule 191 (ElseOpt -> epsilon .)
    DEFAULT         reduce using rule 191 (ElseOpt -> epsilon .)


state 369

    (189) ElseOpt -> ELSE . IfStmt
    (190) ElseOpt -> ELSE . CreateScope Block EndScope
    (187) IfStmt -> . IF Expression CreateScopeIf Block EndScope ElseOpt
    (77) CreateScope -> .

    IF              shift and go to state 283
    LCURL           reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 378
    IfStmt                         shift and go to state 379

state 370

    (187) IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .

    SEMICOLON       reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    RETURN          reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    BREAK           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    CONTINUE        reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    GOTO            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    IF              reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    FOR             reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    PRINT           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    SCAN            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    CONST           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    TYPE            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    VAR             reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    IDENTIFIER      reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    SWITCH          reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    NOT             reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    PLUS            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    MINUS           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    STAR            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    AND             reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    LPAREN          reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    TRUE            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    FALSE           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    TYPECAST        reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    LCURL           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    INTEGER         reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    OCTAL           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    HEX             reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    RUNE            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    FLOAT           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    IMAGINARY       reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    STRING          reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    RCURL           reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    CASE            reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)
    DEFAULT         reduce using rule 187 (IfStmt -> IF Expression CreateScopeIf Block EndScope ElseOpt .)


state 371

    (112) StructFieldRep -> COMMA IDENTIFIER COLON Expression StructFieldRep .

    RCURL           reduce using rule 112 (StructFieldRep -> COMMA IDENTIFIER COLON Expression StructFieldRep .)


state 372

    (206) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LCURL           reduce using rule 206 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 373

    (198) ExprSwitchCase -> CASE . Expression
    (120) Expression -> . UnaryExpr
    (121) Expression -> . Expression LOGICAL_OR Expression
    (122) Expression -> . Expression LOGICAL_AND Expression
    (123) Expression -> . Expression EQUALS Expression
    (124) Expression -> . Expression NOT_ASSIGN Expression
    (125) Expression -> . Expression LESSER Expression
    (126) Expression -> . Expression GREATER Expression
    (127) Expression -> . Expression LESS_EQUALS Expression
    (128) Expression -> . Expression MORE_EQUALS Expression
    (129) Expression -> . Expression OR Expression
    (130) Expression -> . Expression XOR Expression
    (131) Expression -> . Expression DIVIDE Expression
    (132) Expression -> . Expression MOD Expression
    (133) Expression -> . Expression LSHIFT Expression
    (134) Expression -> . Expression RSHIFT Expression
    (135) Expression -> . Expression PLUS Expression
    (136) Expression -> . Expression MINUS Expression
    (137) Expression -> . Expression STAR Expression
    (138) Expression -> . Expression AND Expression
    (141) UnaryExpr -> . PrimaryExpr
    (142) UnaryExpr -> . UnaryOp UnaryExpr
    (143) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . BoolConstant
    (103) PrimaryExpr -> . PrimaryExpr Selector
    (104) PrimaryExpr -> . Conversion
    (105) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (106) PrimaryExpr -> . PrimaryExpr Slice
    (107) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (108) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (109) PrimaryExpr -> . IDENTIFIER LCURL StructFieldList RCURL SemiColonOpt
    (144) UnaryOp -> . PLUS
    (145) UnaryOp -> . MINUS
    (146) UnaryOp -> . STAR
    (147) UnaryOp -> . AND
    (84) Operand -> . Literal
    (85) Operand -> . OperandName
    (86) Operand -> . LPAREN Expression RPAREN
    (82) BoolConstant -> . TRUE
    (83) BoolConstant -> . FALSE
    (148) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (87) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (88) BasicLit -> . I INTEGER
    (89) BasicLit -> . I OCTAL
    (90) BasicLit -> . I HEX
    (91) BasicLit -> . F FLOAT
    (92) BasicLit -> . C IMAGINARY
    (93) BasicLit -> . I RUNE
    (94) BasicLit -> . S STRING
    (95) I -> .
    (96) F -> .
    (97) C -> .
    (98) S -> .

    NOT             shift and go to state 104
    IDENTIFIER      shift and go to state 110
    PLUS            shift and go to state 99
    MINUS           shift and go to state 97
    STAR            shift and go to state 95
    AND             shift and go to state 109
    LPAREN          shift and go to state 91
    TRUE            shift and go to state 96
    FALSE           shift and go to state 111
    TYPECAST        shift and go to state 108
    INTEGER         reduce using rule 95 (I -> .)
    OCTAL           reduce using rule 95 (I -> .)
    HEX             reduce using rule 95 (I -> .)
    RUNE            reduce using rule 95 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    STRING          reduce using rule 98 (S -> .)

    S                              shift and go to state 105
    OperandName                    shift and go to state 98
    Conversion                     shift and go to state 90
    UnaryOp                        shift and go to state 92
    I                              shift and go to state 102
    F                              shift and go to state 101
    UnaryExpr                      shift and go to state 103
    BoolConstant                   shift and go to state 93
    Operand                        shift and go to state 114
    Literal                        shift and go to state 94
    C                              shift and go to state 100
    BasicLit                       shift and go to state 112
    PrimaryExpr                    shift and go to state 113
    Expression                     shift and go to state 380

state 374

    (197) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 381


state 375

    (199) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 199 (ExprSwitchCase -> DEFAULT .)


state 376

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 382

state 377

    (195) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RCURL           reduce using rule 195 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 195 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 195 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 378

    (190) ElseOpt -> ELSE CreateScope . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 185

    Block                          shift and go to state 383

state 379

    (189) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    RETURN          reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    BREAK           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    CONTINUE        reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    GOTO            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    IF              reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    FOR             reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    PRINT           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    SCAN            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    CONST           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    TYPE            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    VAR             reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    IDENTIFIER      reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    SWITCH          reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    NOT             reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    PLUS            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    MINUS           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    STAR            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    AND             reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    LPAREN          reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    TRUE            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    FALSE           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    TYPECAST        reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    LCURL           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    INTEGER         reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    OCTAL           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    HEX             reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    RUNE            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    FLOAT           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    IMAGINARY       reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    STRING          reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    RCURL           reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    CASE            reduce using rule 189 (ElseOpt -> ELSE IfStmt .)
    DEFAULT         reduce using rule 189 (ElseOpt -> ELSE IfStmt .)


state 380

    (198) ExprSwitchCase -> CASE Expression .
    (121) Expression -> Expression . LOGICAL_OR Expression
    (122) Expression -> Expression . LOGICAL_AND Expression
    (123) Expression -> Expression . EQUALS Expression
    (124) Expression -> Expression . NOT_ASSIGN Expression
    (125) Expression -> Expression . LESSER Expression
    (126) Expression -> Expression . GREATER Expression
    (127) Expression -> Expression . LESS_EQUALS Expression
    (128) Expression -> Expression . MORE_EQUALS Expression
    (129) Expression -> Expression . OR Expression
    (130) Expression -> Expression . XOR Expression
    (131) Expression -> Expression . DIVIDE Expression
    (132) Expression -> Expression . MOD Expression
    (133) Expression -> Expression . LSHIFT Expression
    (134) Expression -> Expression . RSHIFT Expression
    (135) Expression -> Expression . PLUS Expression
    (136) Expression -> Expression . MINUS Expression
    (137) Expression -> Expression . STAR Expression
    (138) Expression -> Expression . AND Expression

    COLON           reduce using rule 198 (ExprSwitchCase -> CASE Expression .)
    LOGICAL_OR      shift and go to state 157
    LOGICAL_AND     shift and go to state 159
    EQUALS          shift and go to state 153
    NOT_ASSIGN      shift and go to state 162
    LESSER          shift and go to state 156
    GREATER         shift and go to state 150
    LESS_EQUALS     shift and go to state 154
    MORE_EQUALS     shift and go to state 151
    OR              shift and go to state 163
    XOR             shift and go to state 149
    DIVIDE          shift and go to state 164
    MOD             shift and go to state 155
    LSHIFT          shift and go to state 160
    RSHIFT          shift and go to state 161
    PLUS            shift and go to state 147
    MINUS           shift and go to state 152
    STAR            shift and go to state 158
    AND             shift and go to state 148


state 381

    (197) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (40) StatementList -> . StatementRep
    (41) StatementRep -> . StatementRep Statement SemiColonOpt
    (42) StatementRep -> . epsilon
    (235) epsilon -> .

    RETURN          reduce using rule 235 (epsilon -> .)
    BREAK           reduce using rule 235 (epsilon -> .)
    CONTINUE        reduce using rule 235 (epsilon -> .)
    GOTO            reduce using rule 235 (epsilon -> .)
    IF              reduce using rule 235 (epsilon -> .)
    FOR             reduce using rule 235 (epsilon -> .)
    PRINT           reduce using rule 235 (epsilon -> .)
    SCAN            reduce using rule 235 (epsilon -> .)
    CONST           reduce using rule 235 (epsilon -> .)
    TYPE            reduce using rule 235 (epsilon -> .)
    VAR             reduce using rule 235 (epsilon -> .)
    IDENTIFIER      reduce using rule 235 (epsilon -> .)
    SWITCH          reduce using rule 235 (epsilon -> .)
    NOT             reduce using rule 235 (epsilon -> .)
    PLUS            reduce using rule 235 (epsilon -> .)
    MINUS           reduce using rule 235 (epsilon -> .)
    STAR            reduce using rule 235 (epsilon -> .)
    AND             reduce using rule 235 (epsilon -> .)
    LPAREN          reduce using rule 235 (epsilon -> .)
    TRUE            reduce using rule 235 (epsilon -> .)
    FALSE           reduce using rule 235 (epsilon -> .)
    TYPECAST        reduce using rule 235 (epsilon -> .)
    SEMICOLON       reduce using rule 235 (epsilon -> .)
    LCURL           reduce using rule 235 (epsilon -> .)
    INTEGER         reduce using rule 235 (epsilon -> .)
    OCTAL           reduce using rule 235 (epsilon -> .)
    HEX             reduce using rule 235 (epsilon -> .)
    RUNE            reduce using rule 235 (epsilon -> .)
    FLOAT           reduce using rule 235 (epsilon -> .)
    IMAGINARY       reduce using rule 235 (epsilon -> .)
    STRING          reduce using rule 235 (epsilon -> .)
    RCURL           reduce using rule 235 (epsilon -> .)
    CASE            reduce using rule 235 (epsilon -> .)
    DEFAULT         reduce using rule 235 (epsilon -> .)

    StatementRep                   shift and go to state 234
    epsilon                        shift and go to state 235
    StatementList                  shift and go to state 384

state 382

    (193) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .

    SEMICOLON       reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    RETURN          reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    BREAK           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    CONTINUE        reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    GOTO            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    IF              reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    FOR             reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    PRINT           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    SCAN            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    CONST           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    TYPE            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    VAR             reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    IDENTIFIER      reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    SWITCH          reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    NOT             reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    PLUS            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    MINUS           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    STAR            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    AND             reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    LPAREN          reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    TRUE            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    FALSE           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    TYPECAST        reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    LCURL           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    INTEGER         reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    OCTAL           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    HEX             reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    RUNE            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    FLOAT           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    IMAGINARY       reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    STRING          reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    RCURL           reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    CASE            reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)
    DEFAULT         reduce using rule 193 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)


state 383

    (190) ElseOpt -> ELSE CreateScope Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RETURN          reduce using rule 78 (EndScope -> .)
    BREAK           reduce using rule 78 (EndScope -> .)
    CONTINUE        reduce using rule 78 (EndScope -> .)
    GOTO            reduce using rule 78 (EndScope -> .)
    IF              reduce using rule 78 (EndScope -> .)
    FOR             reduce using rule 78 (EndScope -> .)
    PRINT           reduce using rule 78 (EndScope -> .)
    SCAN            reduce using rule 78 (EndScope -> .)
    CONST           reduce using rule 78 (EndScope -> .)
    TYPE            reduce using rule 78 (EndScope -> .)
    VAR             reduce using rule 78 (EndScope -> .)
    IDENTIFIER      reduce using rule 78 (EndScope -> .)
    SWITCH          reduce using rule 78 (EndScope -> .)
    NOT             reduce using rule 78 (EndScope -> .)
    PLUS            reduce using rule 78 (EndScope -> .)
    MINUS           reduce using rule 78 (EndScope -> .)
    STAR            reduce using rule 78 (EndScope -> .)
    AND             reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)
    TRUE            reduce using rule 78 (EndScope -> .)
    FALSE           reduce using rule 78 (EndScope -> .)
    TYPECAST        reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    INTEGER         reduce using rule 78 (EndScope -> .)
    OCTAL           reduce using rule 78 (EndScope -> .)
    HEX             reduce using rule 78 (EndScope -> .)
    RUNE            reduce using rule 78 (EndScope -> .)
    FLOAT           reduce using rule 78 (EndScope -> .)
    IMAGINARY       reduce using rule 78 (EndScope -> .)
    STRING          reduce using rule 78 (EndScope -> .)
    RCURL           reduce using rule 78 (EndScope -> .)
    CASE            reduce using rule 78 (EndScope -> .)
    DEFAULT         reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 385

state 384

    (197) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RCURL           reduce using rule 197 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 197 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 197 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)


state 385

    (190) ElseOpt -> ELSE CreateScope Block EndScope .

    SEMICOLON       reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    RETURN          reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    BREAK           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    CONTINUE        reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    GOTO            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    IF              reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    FOR             reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    PRINT           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    SCAN            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    CONST           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    TYPE            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    VAR             reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    IDENTIFIER      reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    SWITCH          reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    NOT             reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    PLUS            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    MINUS           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    STAR            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    AND             reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    LPAREN          reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    TRUE            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    FALSE           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    TYPECAST        reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    LCURL           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    INTEGER         reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    OCTAL           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    HEX             reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    RUNE            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    FLOAT           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    IMAGINARY       reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    STRING          reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    RCURL           reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    CASE            reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)
    DEFAULT         reduce using rule 190 (ElseOpt -> ELSE CreateScope Block EndScope .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LCURL in state 110 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 113 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 122 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 131 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 131 resolved as shift
WARNING: shift/reduce conflict for STAR in state 131 resolved as shift
WARNING: shift/reduce conflict for AND in state 131 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 234 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 234 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 234 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 234 resolved as shift
WARNING: shift/reduce conflict for IF in state 234 resolved as shift
WARNING: shift/reduce conflict for FOR in state 234 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 234 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 234 resolved as shift
WARNING: shift/reduce conflict for CONST in state 234 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 234 resolved as shift
WARNING: shift/reduce conflict for VAR in state 234 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 234 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 234 resolved as shift
WARNING: shift/reduce conflict for NOT in state 234 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 234 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 234 resolved as shift
WARNING: shift/reduce conflict for STAR in state 234 resolved as shift
WARNING: shift/reduce conflict for AND in state 234 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 234 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 234 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 234 resolved as shift
WARNING: shift/reduce conflict for TYPECAST in state 234 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 243 resolved as shift
WARNING: shift/reduce conflict for SEMICOLON in state 255 resolved as shift
WARNING: shift/reduce conflict for NOT in state 261 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 261 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 261 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 261 resolved as shift
WARNING: shift/reduce conflict for STAR in state 261 resolved as shift
WARNING: shift/reduce conflict for AND in state 261 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 261 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 261 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 261 resolved as shift
WARNING: shift/reduce conflict for TYPECAST in state 261 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 269 resolved as shift
WARNING: shift/reduce conflict for LCURL in state 272 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 275 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 275 resolved as shift
WARNING: shift/reduce conflict for STAR in state 275 resolved as shift
WARNING: shift/reduce conflict for AND in state 275 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 276 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 288 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 288 resolved as shift
WARNING: shift/reduce conflict for STAR in state 288 resolved as shift
WARNING: shift/reduce conflict for AND in state 288 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 303 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 303 resolved as shift
WARNING: shift/reduce conflict for STAR in state 303 resolved as shift
WARNING: shift/reduce conflict for AND in state 303 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 304 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 304 resolved as shift
WARNING: shift/reduce conflict for CONTINUE in state 304 resolved as shift
WARNING: shift/reduce conflict for GOTO in state 304 resolved as shift
WARNING: shift/reduce conflict for IF in state 304 resolved as shift
WARNING: shift/reduce conflict for FOR in state 304 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 304 resolved as shift
WARNING: shift/reduce conflict for SCAN in state 304 resolved as shift
WARNING: shift/reduce conflict for CONST in state 304 resolved as shift
WARNING: shift/reduce conflict for TYPE in state 304 resolved as shift
WARNING: shift/reduce conflict for VAR in state 304 resolved as shift
WARNING: shift/reduce conflict for IDENTIFIER in state 304 resolved as shift
WARNING: shift/reduce conflict for SWITCH in state 304 resolved as shift
WARNING: shift/reduce conflict for NOT in state 304 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 304 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 304 resolved as shift
WARNING: shift/reduce conflict for STAR in state 304 resolved as shift
WARNING: shift/reduce conflict for AND in state 304 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 304 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 304 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 304 resolved as shift
WARNING: shift/reduce conflict for TYPECAST in state 304 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 305 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 305 resolved as shift
WARNING: shift/reduce conflict for STAR in state 305 resolved as shift
WARNING: shift/reduce conflict for AND in state 305 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 328 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 328 resolved as shift
WARNING: shift/reduce conflict for STAR in state 328 resolved as shift
WARNING: shift/reduce conflict for AND in state 328 resolved as shift
WARNING: shift/reduce conflict for LCURL in state 343 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 345 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 345 resolved as shift
WARNING: shift/reduce conflict for STAR in state 345 resolved as shift
WARNING: shift/reduce conflict for AND in state 345 resolved as shift
WARNING: reduce/reduce conflict in state 234 resolved using rule (CreateScope -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (StatementList -> StatementRep)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (I -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (F -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (C -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 234 resolved using rule (S -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 234
WARNING: reduce/reduce conflict in state 261 resolved using rule (I -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (F -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (C -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 261 resolved using rule (S -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 261
WARNING: reduce/reduce conflict in state 304 resolved using rule (CreateScope -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 304
WARNING: reduce/reduce conflict in state 304 resolved using rule (I -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 304
WARNING: reduce/reduce conflict in state 304 resolved using rule (F -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 304
WARNING: reduce/reduce conflict in state 304 resolved using rule (C -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 304
WARNING: reduce/reduce conflict in state 304 resolved using rule (S -> <empty>)
WARNING: rejected rule (epsilon -> <empty>) in state 304
